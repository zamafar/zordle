{"ast":null,"code":"var _jsxFileName = \"/Users/fz/Development/calculator/src/component/App.js\";\nimport React from \"react\";\nimport DisplayRow from \"./DisplayRow\";\nimport ButtonPanel from \"./ButtonPanel\";\nimport { getActiveRow, getActiveCol, decrementActiveCol, displayChars, displayCols, initialiseState, nextCol, nextRow, checkWord, wordBtns, clearWordBtns, WORDLEN, NUMTRIES } from \"./AppVars\";\nimport \"./App.css\"; //import { check } from \"prettier\";\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      numTries: 0\n    };\n\n    this.handleClick = btn => {\n      var index = getActiveRow() * WORDLEN + getActiveCol();\n      var buttonName = btn.props.name;\n\n      if (buttonName === \"<=\") {\n        if (getActiveCol() > 0) {\n          displayChars[index - 1] = \"!\";\n          displayCols[index - 1] = \"black\";\n          wordBtns.pop();\n          decrementActiveCol();\n          this.setState({\n            numTries: this.numTries + 1\n          });\n        }\n\n        return;\n      }\n\n      if (buttonName === \"Enter\") {\n        if (getActiveCol() === WORDLEN) {\n          var res = checkWord();\n\n          if (res === 0) {\n            alert(\"Invalid word\");\n            return;\n          } else if (res === 1) {\n            nextRow();\n\n            if (getActiveRow() === NUMTRIES) {\n              alert(\"End Game!\");\n            }\n          } else if (res === 2) {\n            alert(\"End Game!\");\n          }\n\n          this.setState({\n            numTries: this.numTries + 1\n          });\n\n          for (var btn in wordBtns) {\n            btn.setState({\n              bgColor: \"grey\"\n            });\n          }\n\n          clearWordBtns();\n        }\n\n        return;\n      }\n\n      if (getActiveCol() >= WORDLEN) {\n        return;\n      }\n\n      displayChars[index] = buttonName;\n      displayCols[index] = \"#FFE4C4\"; // Colour = Bisque\n\n      wordBtns.push(btn);\n      nextCol();\n      this.setState({\n        numTries: this.numTries + 1\n      });\n    };\n\n    this.numTries = 0;\n    initialiseState();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"component-app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(DisplayRow, {\n      numTries: this.numTries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(ButtonPanel, {\n      clickHandler: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/fz/Development/calculator/src/component/App.js"],"names":["React","DisplayRow","ButtonPanel","getActiveRow","getActiveCol","decrementActiveCol","displayChars","displayCols","initialiseState","nextCol","nextRow","checkWord","wordBtns","clearWordBtns","WORDLEN","NUMTRIES","App","Component","constructor","state","numTries","handleClick","btn","index","buttonName","props","name","pop","setState","res","alert","bgColor","push","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport DisplayRow from \"./DisplayRow\";\nimport ButtonPanel from \"./ButtonPanel\";\nimport { getActiveRow, getActiveCol, decrementActiveCol, displayChars, displayCols, initialiseState, nextCol, nextRow, checkWord, wordBtns, clearWordBtns, WORDLEN, NUMTRIES } from \"./AppVars\";\nimport \"./App.css\";\n//import { check } from \"prettier\";\n\nexport default class App extends React.Component {\n  state = {\n    numTries: 0,\n  };\n\n  constructor() {\n    super();\n    this.numTries = 0;\n    initialiseState();\n  };\n\n \n  handleClick = btn => {\n    var index = getActiveRow()*WORDLEN + getActiveCol();\n    var buttonName = btn.props.name;\n    if (buttonName === \"<=\") {\n      if (getActiveCol() > 0) {\n        displayChars[index-1] = \"!\";\n        displayCols[index-1] = \"black\"\n        wordBtns.pop();\n        decrementActiveCol();\n        this.setState({\n          numTries: this.numTries + 1,\n        }); \n      }\n      return;\n    }\n    if (buttonName === \"Enter\") {\n      if (getActiveCol() === WORDLEN) {\n        var res = checkWord();\n        if (res === 0) {\n          alert(\"Invalid word\")\n          return;\n        }\n        else if (res === 1) {\n          nextRow();\n          \n          if (getActiveRow() === NUMTRIES) {\n            alert(\"End Game!\");\n          }\n        }\n        else if (res === 2) {\n          alert(\"End Game!\");\n        }\n        this.setState({\n          numTries: this.numTries + 1,\n        }) \n        for (var btn in wordBtns) {\n          btn.setState({\n            bgColor: \"grey\",\n          })\n        }\n        clearWordBtns();\n      }\n      return;\n    }\n    if (getActiveCol() >= WORDLEN) {\n      return;\n    }\n    displayChars[index] = buttonName;\n    displayCols[index] = \"#FFE4C4\"; // Colour = Bisque\n    wordBtns.push(btn);\n    nextCol();\n\n    this.setState({\n      numTries: this.numTries + 1,\n    })\n  };\n\n  render() {\n    return (\n      <div className=\"component-app\">\n        <DisplayRow numTries = {this.numTries} />\n        <ButtonPanel clickHandler={this.handleClick} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}