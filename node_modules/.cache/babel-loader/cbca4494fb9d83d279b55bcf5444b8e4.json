{"ast":null,"code":"!function (r, e) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = e() : \"function\" == typeof define && define.amd ? define(e) : (r.prettierPlugins = r.prettierPlugins || {}, r.prettierPlugins.markdown = e());\n}(this, function () {\n  \"use strict\";\n\n  function r(e) {\n    return (r = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (r) {\n      return typeof r;\n    } : function (r) {\n      return r && \"function\" == typeof Symbol && r.constructor === Symbol && r !== Symbol.prototype ? \"symbol\" : typeof r;\n    })(e);\n  }\n\n  function e(r, e) {\n    return t(r) || function (r, e) {\n      var t = [],\n          u = !0,\n          n = !1,\n          a = void 0;\n\n      try {\n        for (var o, i = r[Symbol.iterator](); !(u = (o = i.next()).done) && (t.push(o.value), !e || t.length !== e); u = !0);\n      } catch (r) {\n        n = !0, a = r;\n      } finally {\n        try {\n          u || null == i.return || i.return();\n        } finally {\n          if (n) throw a;\n        }\n      }\n\n      return t;\n    }(r, e) || u();\n  }\n\n  function t(r) {\n    if (Array.isArray(r)) return r;\n  }\n\n  function u() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n  }\n\n  var n = function () {\n    for (var r = {}, e = 0; e < arguments.length; e++) {\n      var t = arguments[e];\n\n      for (var u in t) a.call(t, u) && (r[u] = t[u]);\n    }\n\n    return r;\n  },\n      a = Object.prototype.hasOwnProperty;\n\n  function o(r, e) {\n    return r(e = {\n      exports: {}\n    }, e.exports), e.exports;\n  }\n\n  var i = {},\n      c = Object.freeze({\n    default: i\n  }),\n      l = o(function (r) {\n    \"function\" == typeof Object.create ? r.exports = function (r, e) {\n      r.super_ = e, r.prototype = Object.create(e.prototype, {\n        constructor: {\n          value: r,\n          enumerable: !1,\n          writable: !0,\n          configurable: !0\n        }\n      });\n    } : r.exports = function (r, e) {\n      r.super_ = e;\n\n      var t = function () {};\n\n      t.prototype = e.prototype, r.prototype = new t(), r.prototype.constructor = r;\n    };\n  }),\n      s = c && i || c,\n      f = o(function (r) {\n    try {\n      var e = s;\n      if (\"function\" != typeof e.inherits) throw \"\";\n      r.exports = e.inherits;\n    } catch (e) {\n      r.exports = l;\n    }\n  }),\n      p = function (e) {\n    var t, u, a;\n\n    for (u in f(i, e), f(o, i), t = i.prototype) (a = t[u]) && \"object\" === r(a) && (t[u] = \"concat\" in a ? a.concat() : n(a));\n\n    return i;\n\n    function o(r) {\n      return e.apply(this, r);\n    }\n\n    function i() {\n      return this instanceof i ? e.apply(this, arguments) : new o(arguments);\n    }\n  };\n\n  var D = function (r, e, t) {\n    return function () {\n      var u = t || this,\n          n = u[r];\n      return u[r] = !e, function () {\n        u[r] = n;\n      };\n    };\n  };\n\n  var d = function (r) {\n    var e = function (r) {\n      var e = [],\n          t = r.indexOf(\"\\n\");\n\n      for (; -1 !== t;) e.push(t + 1), t = r.indexOf(\"\\n\", t + 1);\n\n      return e.push(r.length + 1), e;\n    }(String(r));\n\n    return {\n      toPosition: function (r) {\n        return function (e) {\n          var t = -1,\n              u = r.length;\n          if (e < 0) return {};\n\n          for (; ++t < u;) if (r[t] > e) return {\n            line: t + 1,\n            column: e - (r[t - 1] || 0) + 1,\n            offset: e\n          };\n\n          return {};\n        };\n      }(e),\n      toOffset: function (r) {\n        return function (e) {\n          var t = e && e.line,\n              u = e && e.column;\n          if (!isNaN(t) && !isNaN(u) && t - 1 in r) return (r[t - 2] || 0) + u - 1 || 0;\n          return -1;\n        };\n      }(e)\n    };\n  };\n\n  var h = function (r, e) {\n    return function (t) {\n      var u,\n          n = 0,\n          a = t.indexOf(\"\\\\\"),\n          o = r[e],\n          i = [];\n\n      for (; -1 !== a;) i.push(t.slice(n, a)), n = a + 1, (u = t.charAt(n)) && -1 !== o.indexOf(u) || i.push(\"\\\\\"), a = t.indexOf(\"\\\\\", n);\n\n      return i.push(t.slice(n)), i.join(\"\");\n    };\n  };\n\n  var g = {\n    AEli: \"Æ\",\n    AElig: \"Æ\",\n    AM: \"&\",\n    AMP: \"&\",\n    Aacut: \"Á\",\n    Aacute: \"Á\",\n    Abreve: \"Ă\",\n    Acir: \"Â\",\n    Acirc: \"Â\",\n    Acy: \"А\",\n    Afr: \"𝔄\",\n    Agrav: \"À\",\n    Agrave: \"À\",\n    Alpha: \"Α\",\n    Amacr: \"Ā\",\n    And: \"⩓\",\n    Aogon: \"Ą\",\n    Aopf: \"𝔸\",\n    ApplyFunction: \"⁡\",\n    Arin: \"Å\",\n    Aring: \"Å\",\n    Ascr: \"𝒜\",\n    Assign: \"≔\",\n    Atild: \"Ã\",\n    Atilde: \"Ã\",\n    Aum: \"Ä\",\n    Auml: \"Ä\",\n    Backslash: \"∖\",\n    Barv: \"⫧\",\n    Barwed: \"⌆\",\n    Bcy: \"Б\",\n    Because: \"∵\",\n    Bernoullis: \"ℬ\",\n    Beta: \"Β\",\n    Bfr: \"𝔅\",\n    Bopf: \"𝔹\",\n    Breve: \"˘\",\n    Bscr: \"ℬ\",\n    Bumpeq: \"≎\",\n    CHcy: \"Ч\",\n    COP: \"©\",\n    COPY: \"©\",\n    Cacute: \"Ć\",\n    Cap: \"⋒\",\n    CapitalDifferentialD: \"ⅅ\",\n    Cayleys: \"ℭ\",\n    Ccaron: \"Č\",\n    Ccedi: \"Ç\",\n    Ccedil: \"Ç\",\n    Ccirc: \"Ĉ\",\n    Cconint: \"∰\",\n    Cdot: \"Ċ\",\n    Cedilla: \"¸\",\n    CenterDot: \"·\",\n    Cfr: \"ℭ\",\n    Chi: \"Χ\",\n    CircleDot: \"⊙\",\n    CircleMinus: \"⊖\",\n    CirclePlus: \"⊕\",\n    CircleTimes: \"⊗\",\n    ClockwiseContourIntegral: \"∲\",\n    CloseCurlyDoubleQuote: \"”\",\n    CloseCurlyQuote: \"’\",\n    Colon: \"∷\",\n    Colone: \"⩴\",\n    Congruent: \"≡\",\n    Conint: \"∯\",\n    ContourIntegral: \"∮\",\n    Copf: \"ℂ\",\n    Coproduct: \"∐\",\n    CounterClockwiseContourIntegral: \"∳\",\n    Cross: \"⨯\",\n    Cscr: \"𝒞\",\n    Cup: \"⋓\",\n    CupCap: \"≍\",\n    DD: \"ⅅ\",\n    DDotrahd: \"⤑\",\n    DJcy: \"Ђ\",\n    DScy: \"Ѕ\",\n    DZcy: \"Џ\",\n    Dagger: \"‡\",\n    Darr: \"↡\",\n    Dashv: \"⫤\",\n    Dcaron: \"Ď\",\n    Dcy: \"Д\",\n    Del: \"∇\",\n    Delta: \"Δ\",\n    Dfr: \"𝔇\",\n    DiacriticalAcute: \"´\",\n    DiacriticalDot: \"˙\",\n    DiacriticalDoubleAcute: \"˝\",\n    DiacriticalGrave: \"`\",\n    DiacriticalTilde: \"˜\",\n    Diamond: \"⋄\",\n    DifferentialD: \"ⅆ\",\n    Dopf: \"𝔻\",\n    Dot: \"¨\",\n    DotDot: \"⃜\",\n    DotEqual: \"≐\",\n    DoubleContourIntegral: \"∯\",\n    DoubleDot: \"¨\",\n    DoubleDownArrow: \"⇓\",\n    DoubleLeftArrow: \"⇐\",\n    DoubleLeftRightArrow: \"⇔\",\n    DoubleLeftTee: \"⫤\",\n    DoubleLongLeftArrow: \"⟸\",\n    DoubleLongLeftRightArrow: \"⟺\",\n    DoubleLongRightArrow: \"⟹\",\n    DoubleRightArrow: \"⇒\",\n    DoubleRightTee: \"⊨\",\n    DoubleUpArrow: \"⇑\",\n    DoubleUpDownArrow: \"⇕\",\n    DoubleVerticalBar: \"∥\",\n    DownArrow: \"↓\",\n    DownArrowBar: \"⤓\",\n    DownArrowUpArrow: \"⇵\",\n    DownBreve: \"̑\",\n    DownLeftRightVector: \"⥐\",\n    DownLeftTeeVector: \"⥞\",\n    DownLeftVector: \"↽\",\n    DownLeftVectorBar: \"⥖\",\n    DownRightTeeVector: \"⥟\",\n    DownRightVector: \"⇁\",\n    DownRightVectorBar: \"⥗\",\n    DownTee: \"⊤\",\n    DownTeeArrow: \"↧\",\n    Downarrow: \"⇓\",\n    Dscr: \"𝒟\",\n    Dstrok: \"Đ\",\n    ENG: \"Ŋ\",\n    ET: \"Ð\",\n    ETH: \"Ð\",\n    Eacut: \"É\",\n    Eacute: \"É\",\n    Ecaron: \"Ě\",\n    Ecir: \"Ê\",\n    Ecirc: \"Ê\",\n    Ecy: \"Э\",\n    Edot: \"Ė\",\n    Efr: \"𝔈\",\n    Egrav: \"È\",\n    Egrave: \"È\",\n    Element: \"∈\",\n    Emacr: \"Ē\",\n    EmptySmallSquare: \"◻\",\n    EmptyVerySmallSquare: \"▫\",\n    Eogon: \"Ę\",\n    Eopf: \"𝔼\",\n    Epsilon: \"Ε\",\n    Equal: \"⩵\",\n    EqualTilde: \"≂\",\n    Equilibrium: \"⇌\",\n    Escr: \"ℰ\",\n    Esim: \"⩳\",\n    Eta: \"Η\",\n    Eum: \"Ë\",\n    Euml: \"Ë\",\n    Exists: \"∃\",\n    ExponentialE: \"ⅇ\",\n    Fcy: \"Ф\",\n    Ffr: \"𝔉\",\n    FilledSmallSquare: \"◼\",\n    FilledVerySmallSquare: \"▪\",\n    Fopf: \"𝔽\",\n    ForAll: \"∀\",\n    Fouriertrf: \"ℱ\",\n    Fscr: \"ℱ\",\n    GJcy: \"Ѓ\",\n    G: \">\",\n    GT: \">\",\n    Gamma: \"Γ\",\n    Gammad: \"Ϝ\",\n    Gbreve: \"Ğ\",\n    Gcedil: \"Ģ\",\n    Gcirc: \"Ĝ\",\n    Gcy: \"Г\",\n    Gdot: \"Ġ\",\n    Gfr: \"𝔊\",\n    Gg: \"⋙\",\n    Gopf: \"𝔾\",\n    GreaterEqual: \"≥\",\n    GreaterEqualLess: \"⋛\",\n    GreaterFullEqual: \"≧\",\n    GreaterGreater: \"⪢\",\n    GreaterLess: \"≷\",\n    GreaterSlantEqual: \"⩾\",\n    GreaterTilde: \"≳\",\n    Gscr: \"𝒢\",\n    Gt: \"≫\",\n    HARDcy: \"Ъ\",\n    Hacek: \"ˇ\",\n    Hat: \"^\",\n    Hcirc: \"Ĥ\",\n    Hfr: \"ℌ\",\n    HilbertSpace: \"ℋ\",\n    Hopf: \"ℍ\",\n    HorizontalLine: \"─\",\n    Hscr: \"ℋ\",\n    Hstrok: \"Ħ\",\n    HumpDownHump: \"≎\",\n    HumpEqual: \"≏\",\n    IEcy: \"Е\",\n    IJlig: \"Ĳ\",\n    IOcy: \"Ё\",\n    Iacut: \"Í\",\n    Iacute: \"Í\",\n    Icir: \"Î\",\n    Icirc: \"Î\",\n    Icy: \"И\",\n    Idot: \"İ\",\n    Ifr: \"ℑ\",\n    Igrav: \"Ì\",\n    Igrave: \"Ì\",\n    Im: \"ℑ\",\n    Imacr: \"Ī\",\n    ImaginaryI: \"ⅈ\",\n    Implies: \"⇒\",\n    Int: \"∬\",\n    Integral: \"∫\",\n    Intersection: \"⋂\",\n    InvisibleComma: \"⁣\",\n    InvisibleTimes: \"⁢\",\n    Iogon: \"Į\",\n    Iopf: \"𝕀\",\n    Iota: \"Ι\",\n    Iscr: \"ℐ\",\n    Itilde: \"Ĩ\",\n    Iukcy: \"І\",\n    Ium: \"Ï\",\n    Iuml: \"Ï\",\n    Jcirc: \"Ĵ\",\n    Jcy: \"Й\",\n    Jfr: \"𝔍\",\n    Jopf: \"𝕁\",\n    Jscr: \"𝒥\",\n    Jsercy: \"Ј\",\n    Jukcy: \"Є\",\n    KHcy: \"Х\",\n    KJcy: \"Ќ\",\n    Kappa: \"Κ\",\n    Kcedil: \"Ķ\",\n    Kcy: \"К\",\n    Kfr: \"𝔎\",\n    Kopf: \"𝕂\",\n    Kscr: \"𝒦\",\n    LJcy: \"Љ\",\n    L: \"<\",\n    LT: \"<\",\n    Lacute: \"Ĺ\",\n    Lambda: \"Λ\",\n    Lang: \"⟪\",\n    Laplacetrf: \"ℒ\",\n    Larr: \"↞\",\n    Lcaron: \"Ľ\",\n    Lcedil: \"Ļ\",\n    Lcy: \"Л\",\n    LeftAngleBracket: \"⟨\",\n    LeftArrow: \"←\",\n    LeftArrowBar: \"⇤\",\n    LeftArrowRightArrow: \"⇆\",\n    LeftCeiling: \"⌈\",\n    LeftDoubleBracket: \"⟦\",\n    LeftDownTeeVector: \"⥡\",\n    LeftDownVector: \"⇃\",\n    LeftDownVectorBar: \"⥙\",\n    LeftFloor: \"⌊\",\n    LeftRightArrow: \"↔\",\n    LeftRightVector: \"⥎\",\n    LeftTee: \"⊣\",\n    LeftTeeArrow: \"↤\",\n    LeftTeeVector: \"⥚\",\n    LeftTriangle: \"⊲\",\n    LeftTriangleBar: \"⧏\",\n    LeftTriangleEqual: \"⊴\",\n    LeftUpDownVector: \"⥑\",\n    LeftUpTeeVector: \"⥠\",\n    LeftUpVector: \"↿\",\n    LeftUpVectorBar: \"⥘\",\n    LeftVector: \"↼\",\n    LeftVectorBar: \"⥒\",\n    Leftarrow: \"⇐\",\n    Leftrightarrow: \"⇔\",\n    LessEqualGreater: \"⋚\",\n    LessFullEqual: \"≦\",\n    LessGreater: \"≶\",\n    LessLess: \"⪡\",\n    LessSlantEqual: \"⩽\",\n    LessTilde: \"≲\",\n    Lfr: \"𝔏\",\n    Ll: \"⋘\",\n    Lleftarrow: \"⇚\",\n    Lmidot: \"Ŀ\",\n    LongLeftArrow: \"⟵\",\n    LongLeftRightArrow: \"⟷\",\n    LongRightArrow: \"⟶\",\n    Longleftarrow: \"⟸\",\n    Longleftrightarrow: \"⟺\",\n    Longrightarrow: \"⟹\",\n    Lopf: \"𝕃\",\n    LowerLeftArrow: \"↙\",\n    LowerRightArrow: \"↘\",\n    Lscr: \"ℒ\",\n    Lsh: \"↰\",\n    Lstrok: \"Ł\",\n    Lt: \"≪\",\n    Mcy: \"М\",\n    MediumSpace: \" \",\n    Mellintrf: \"ℳ\",\n    Mfr: \"𝔐\",\n    MinusPlus: \"∓\",\n    Mopf: \"𝕄\",\n    Mscr: \"ℳ\",\n    Mu: \"Μ\",\n    NJcy: \"Њ\",\n    Nacute: \"Ń\",\n    Ncaron: \"Ň\",\n    Ncedil: \"Ņ\",\n    Ncy: \"Н\",\n    NegativeMediumSpace: \"​\",\n    NegativeThickSpace: \"​\",\n    NegativeThinSpace: \"​\",\n    NegativeVeryThinSpace: \"​\",\n    NestedGreaterGreater: \"≫\",\n    NestedLessLess: \"≪\",\n    NewLine: \"\\n\",\n    Nfr: \"𝔑\",\n    NoBreak: \"⁠\",\n    NonBreakingSpace: \" \",\n    Nopf: \"ℕ\",\n    Not: \"⫬\",\n    NotCongruent: \"≢\",\n    NotCupCap: \"≭\",\n    NotDoubleVerticalBar: \"∦\",\n    NotElement: \"∉\",\n    NotEqual: \"≠\",\n    NotEqualTilde: \"≂̸\",\n    NotExists: \"∄\",\n    NotGreater: \"≯\",\n    NotGreaterEqual: \"≱\",\n    NotGreaterFullEqual: \"≧̸\",\n    NotGreaterGreater: \"≫̸\",\n    NotGreaterLess: \"≹\",\n    NotGreaterSlantEqual: \"⩾̸\",\n    NotGreaterTilde: \"≵\",\n    NotHumpDownHump: \"≎̸\",\n    NotHumpEqual: \"≏̸\",\n    NotLeftTriangle: \"⋪\",\n    NotLeftTriangleBar: \"⧏̸\",\n    NotLeftTriangleEqual: \"⋬\",\n    NotLess: \"≮\",\n    NotLessEqual: \"≰\",\n    NotLessGreater: \"≸\",\n    NotLessLess: \"≪̸\",\n    NotLessSlantEqual: \"⩽̸\",\n    NotLessTilde: \"≴\",\n    NotNestedGreaterGreater: \"⪢̸\",\n    NotNestedLessLess: \"⪡̸\",\n    NotPrecedes: \"⊀\",\n    NotPrecedesEqual: \"⪯̸\",\n    NotPrecedesSlantEqual: \"⋠\",\n    NotReverseElement: \"∌\",\n    NotRightTriangle: \"⋫\",\n    NotRightTriangleBar: \"⧐̸\",\n    NotRightTriangleEqual: \"⋭\",\n    NotSquareSubset: \"⊏̸\",\n    NotSquareSubsetEqual: \"⋢\",\n    NotSquareSuperset: \"⊐̸\",\n    NotSquareSupersetEqual: \"⋣\",\n    NotSubset: \"⊂⃒\",\n    NotSubsetEqual: \"⊈\",\n    NotSucceeds: \"⊁\",\n    NotSucceedsEqual: \"⪰̸\",\n    NotSucceedsSlantEqual: \"⋡\",\n    NotSucceedsTilde: \"≿̸\",\n    NotSuperset: \"⊃⃒\",\n    NotSupersetEqual: \"⊉\",\n    NotTilde: \"≁\",\n    NotTildeEqual: \"≄\",\n    NotTildeFullEqual: \"≇\",\n    NotTildeTilde: \"≉\",\n    NotVerticalBar: \"∤\",\n    Nscr: \"𝒩\",\n    Ntild: \"Ñ\",\n    Ntilde: \"Ñ\",\n    Nu: \"Ν\",\n    OElig: \"Œ\",\n    Oacut: \"Ó\",\n    Oacute: \"Ó\",\n    Ocir: \"Ô\",\n    Ocirc: \"Ô\",\n    Ocy: \"О\",\n    Odblac: \"Ő\",\n    Ofr: \"𝔒\",\n    Ograv: \"Ò\",\n    Ograve: \"Ò\",\n    Omacr: \"Ō\",\n    Omega: \"Ω\",\n    Omicron: \"Ο\",\n    Oopf: \"𝕆\",\n    OpenCurlyDoubleQuote: \"“\",\n    OpenCurlyQuote: \"‘\",\n    Or: \"⩔\",\n    Oscr: \"𝒪\",\n    Oslas: \"Ø\",\n    Oslash: \"Ø\",\n    Otild: \"Õ\",\n    Otilde: \"Õ\",\n    Otimes: \"⨷\",\n    Oum: \"Ö\",\n    Ouml: \"Ö\",\n    OverBar: \"‾\",\n    OverBrace: \"⏞\",\n    OverBracket: \"⎴\",\n    OverParenthesis: \"⏜\",\n    PartialD: \"∂\",\n    Pcy: \"П\",\n    Pfr: \"𝔓\",\n    Phi: \"Φ\",\n    Pi: \"Π\",\n    PlusMinus: \"±\",\n    Poincareplane: \"ℌ\",\n    Popf: \"ℙ\",\n    Pr: \"⪻\",\n    Precedes: \"≺\",\n    PrecedesEqual: \"⪯\",\n    PrecedesSlantEqual: \"≼\",\n    PrecedesTilde: \"≾\",\n    Prime: \"″\",\n    Product: \"∏\",\n    Proportion: \"∷\",\n    Proportional: \"∝\",\n    Pscr: \"𝒫\",\n    Psi: \"Ψ\",\n    QUO: '\"',\n    QUOT: '\"',\n    Qfr: \"𝔔\",\n    Qopf: \"ℚ\",\n    Qscr: \"𝒬\",\n    RBarr: \"⤐\",\n    RE: \"®\",\n    REG: \"®\",\n    Racute: \"Ŕ\",\n    Rang: \"⟫\",\n    Rarr: \"↠\",\n    Rarrtl: \"⤖\",\n    Rcaron: \"Ř\",\n    Rcedil: \"Ŗ\",\n    Rcy: \"Р\",\n    Re: \"ℜ\",\n    ReverseElement: \"∋\",\n    ReverseEquilibrium: \"⇋\",\n    ReverseUpEquilibrium: \"⥯\",\n    Rfr: \"ℜ\",\n    Rho: \"Ρ\",\n    RightAngleBracket: \"⟩\",\n    RightArrow: \"→\",\n    RightArrowBar: \"⇥\",\n    RightArrowLeftArrow: \"⇄\",\n    RightCeiling: \"⌉\",\n    RightDoubleBracket: \"⟧\",\n    RightDownTeeVector: \"⥝\",\n    RightDownVector: \"⇂\",\n    RightDownVectorBar: \"⥕\",\n    RightFloor: \"⌋\",\n    RightTee: \"⊢\",\n    RightTeeArrow: \"↦\",\n    RightTeeVector: \"⥛\",\n    RightTriangle: \"⊳\",\n    RightTriangleBar: \"⧐\",\n    RightTriangleEqual: \"⊵\",\n    RightUpDownVector: \"⥏\",\n    RightUpTeeVector: \"⥜\",\n    RightUpVector: \"↾\",\n    RightUpVectorBar: \"⥔\",\n    RightVector: \"⇀\",\n    RightVectorBar: \"⥓\",\n    Rightarrow: \"⇒\",\n    Ropf: \"ℝ\",\n    RoundImplies: \"⥰\",\n    Rrightarrow: \"⇛\",\n    Rscr: \"ℛ\",\n    Rsh: \"↱\",\n    RuleDelayed: \"⧴\",\n    SHCHcy: \"Щ\",\n    SHcy: \"Ш\",\n    SOFTcy: \"Ь\",\n    Sacute: \"Ś\",\n    Sc: \"⪼\",\n    Scaron: \"Š\",\n    Scedil: \"Ş\",\n    Scirc: \"Ŝ\",\n    Scy: \"С\",\n    Sfr: \"𝔖\",\n    ShortDownArrow: \"↓\",\n    ShortLeftArrow: \"←\",\n    ShortRightArrow: \"→\",\n    ShortUpArrow: \"↑\",\n    Sigma: \"Σ\",\n    SmallCircle: \"∘\",\n    Sopf: \"𝕊\",\n    Sqrt: \"√\",\n    Square: \"□\",\n    SquareIntersection: \"⊓\",\n    SquareSubset: \"⊏\",\n    SquareSubsetEqual: \"⊑\",\n    SquareSuperset: \"⊐\",\n    SquareSupersetEqual: \"⊒\",\n    SquareUnion: \"⊔\",\n    Sscr: \"𝒮\",\n    Star: \"⋆\",\n    Sub: \"⋐\",\n    Subset: \"⋐\",\n    SubsetEqual: \"⊆\",\n    Succeeds: \"≻\",\n    SucceedsEqual: \"⪰\",\n    SucceedsSlantEqual: \"≽\",\n    SucceedsTilde: \"≿\",\n    SuchThat: \"∋\",\n    Sum: \"∑\",\n    Sup: \"⋑\",\n    Superset: \"⊃\",\n    SupersetEqual: \"⊇\",\n    Supset: \"⋑\",\n    THOR: \"Þ\",\n    THORN: \"Þ\",\n    TRADE: \"™\",\n    TSHcy: \"Ћ\",\n    TScy: \"Ц\",\n    Tab: \"\\t\",\n    Tau: \"Τ\",\n    Tcaron: \"Ť\",\n    Tcedil: \"Ţ\",\n    Tcy: \"Т\",\n    Tfr: \"𝔗\",\n    Therefore: \"∴\",\n    Theta: \"Θ\",\n    ThickSpace: \"  \",\n    ThinSpace: \" \",\n    Tilde: \"∼\",\n    TildeEqual: \"≃\",\n    TildeFullEqual: \"≅\",\n    TildeTilde: \"≈\",\n    Topf: \"𝕋\",\n    TripleDot: \"⃛\",\n    Tscr: \"𝒯\",\n    Tstrok: \"Ŧ\",\n    Uacut: \"Ú\",\n    Uacute: \"Ú\",\n    Uarr: \"↟\",\n    Uarrocir: \"⥉\",\n    Ubrcy: \"Ў\",\n    Ubreve: \"Ŭ\",\n    Ucir: \"Û\",\n    Ucirc: \"Û\",\n    Ucy: \"У\",\n    Udblac: \"Ű\",\n    Ufr: \"𝔘\",\n    Ugrav: \"Ù\",\n    Ugrave: \"Ù\",\n    Umacr: \"Ū\",\n    UnderBar: \"_\",\n    UnderBrace: \"⏟\",\n    UnderBracket: \"⎵\",\n    UnderParenthesis: \"⏝\",\n    Union: \"⋃\",\n    UnionPlus: \"⊎\",\n    Uogon: \"Ų\",\n    Uopf: \"𝕌\",\n    UpArrow: \"↑\",\n    UpArrowBar: \"⤒\",\n    UpArrowDownArrow: \"⇅\",\n    UpDownArrow: \"↕\",\n    UpEquilibrium: \"⥮\",\n    UpTee: \"⊥\",\n    UpTeeArrow: \"↥\",\n    Uparrow: \"⇑\",\n    Updownarrow: \"⇕\",\n    UpperLeftArrow: \"↖\",\n    UpperRightArrow: \"↗\",\n    Upsi: \"ϒ\",\n    Upsilon: \"Υ\",\n    Uring: \"Ů\",\n    Uscr: \"𝒰\",\n    Utilde: \"Ũ\",\n    Uum: \"Ü\",\n    Uuml: \"Ü\",\n    VDash: \"⊫\",\n    Vbar: \"⫫\",\n    Vcy: \"В\",\n    Vdash: \"⊩\",\n    Vdashl: \"⫦\",\n    Vee: \"⋁\",\n    Verbar: \"‖\",\n    Vert: \"‖\",\n    VerticalBar: \"∣\",\n    VerticalLine: \"|\",\n    VerticalSeparator: \"❘\",\n    VerticalTilde: \"≀\",\n    VeryThinSpace: \" \",\n    Vfr: \"𝔙\",\n    Vopf: \"𝕍\",\n    Vscr: \"𝒱\",\n    Vvdash: \"⊪\",\n    Wcirc: \"Ŵ\",\n    Wedge: \"⋀\",\n    Wfr: \"𝔚\",\n    Wopf: \"𝕎\",\n    Wscr: \"𝒲\",\n    Xfr: \"𝔛\",\n    Xi: \"Ξ\",\n    Xopf: \"𝕏\",\n    Xscr: \"𝒳\",\n    YAcy: \"Я\",\n    YIcy: \"Ї\",\n    YUcy: \"Ю\",\n    Yacut: \"Ý\",\n    Yacute: \"Ý\",\n    Ycirc: \"Ŷ\",\n    Ycy: \"Ы\",\n    Yfr: \"𝔜\",\n    Yopf: \"𝕐\",\n    Yscr: \"𝒴\",\n    Yuml: \"Ÿ\",\n    ZHcy: \"Ж\",\n    Zacute: \"Ź\",\n    Zcaron: \"Ž\",\n    Zcy: \"З\",\n    Zdot: \"Ż\",\n    ZeroWidthSpace: \"​\",\n    Zeta: \"Ζ\",\n    Zfr: \"ℨ\",\n    Zopf: \"ℤ\",\n    Zscr: \"𝒵\",\n    aacut: \"á\",\n    aacute: \"á\",\n    abreve: \"ă\",\n    ac: \"∾\",\n    acE: \"∾̳\",\n    acd: \"∿\",\n    acir: \"â\",\n    acirc: \"â\",\n    acut: \"´\",\n    acute: \"´\",\n    acy: \"а\",\n    aeli: \"æ\",\n    aelig: \"æ\",\n    af: \"⁡\",\n    afr: \"𝔞\",\n    agrav: \"à\",\n    agrave: \"à\",\n    alefsym: \"ℵ\",\n    aleph: \"ℵ\",\n    alpha: \"α\",\n    amacr: \"ā\",\n    amalg: \"⨿\",\n    am: \"&\",\n    amp: \"&\",\n    and: \"∧\",\n    andand: \"⩕\",\n    andd: \"⩜\",\n    andslope: \"⩘\",\n    andv: \"⩚\",\n    ang: \"∠\",\n    ange: \"⦤\",\n    angle: \"∠\",\n    angmsd: \"∡\",\n    angmsdaa: \"⦨\",\n    angmsdab: \"⦩\",\n    angmsdac: \"⦪\",\n    angmsdad: \"⦫\",\n    angmsdae: \"⦬\",\n    angmsdaf: \"⦭\",\n    angmsdag: \"⦮\",\n    angmsdah: \"⦯\",\n    angrt: \"∟\",\n    angrtvb: \"⊾\",\n    angrtvbd: \"⦝\",\n    angsph: \"∢\",\n    angst: \"Å\",\n    angzarr: \"⍼\",\n    aogon: \"ą\",\n    aopf: \"𝕒\",\n    ap: \"≈\",\n    apE: \"⩰\",\n    apacir: \"⩯\",\n    ape: \"≊\",\n    apid: \"≋\",\n    apos: \"'\",\n    approx: \"≈\",\n    approxeq: \"≊\",\n    arin: \"å\",\n    aring: \"å\",\n    ascr: \"𝒶\",\n    ast: \"*\",\n    asymp: \"≈\",\n    asympeq: \"≍\",\n    atild: \"ã\",\n    atilde: \"ã\",\n    aum: \"ä\",\n    auml: \"ä\",\n    awconint: \"∳\",\n    awint: \"⨑\",\n    bNot: \"⫭\",\n    backcong: \"≌\",\n    backepsilon: \"϶\",\n    backprime: \"‵\",\n    backsim: \"∽\",\n    backsimeq: \"⋍\",\n    barvee: \"⊽\",\n    barwed: \"⌅\",\n    barwedge: \"⌅\",\n    bbrk: \"⎵\",\n    bbrktbrk: \"⎶\",\n    bcong: \"≌\",\n    bcy: \"б\",\n    bdquo: \"„\",\n    becaus: \"∵\",\n    because: \"∵\",\n    bemptyv: \"⦰\",\n    bepsi: \"϶\",\n    bernou: \"ℬ\",\n    beta: \"β\",\n    beth: \"ℶ\",\n    between: \"≬\",\n    bfr: \"𝔟\",\n    bigcap: \"⋂\",\n    bigcirc: \"◯\",\n    bigcup: \"⋃\",\n    bigodot: \"⨀\",\n    bigoplus: \"⨁\",\n    bigotimes: \"⨂\",\n    bigsqcup: \"⨆\",\n    bigstar: \"★\",\n    bigtriangledown: \"▽\",\n    bigtriangleup: \"△\",\n    biguplus: \"⨄\",\n    bigvee: \"⋁\",\n    bigwedge: \"⋀\",\n    bkarow: \"⤍\",\n    blacklozenge: \"⧫\",\n    blacksquare: \"▪\",\n    blacktriangle: \"▴\",\n    blacktriangledown: \"▾\",\n    blacktriangleleft: \"◂\",\n    blacktriangleright: \"▸\",\n    blank: \"␣\",\n    blk12: \"▒\",\n    blk14: \"░\",\n    blk34: \"▓\",\n    block: \"█\",\n    bne: \"=⃥\",\n    bnequiv: \"≡⃥\",\n    bnot: \"⌐\",\n    bopf: \"𝕓\",\n    bot: \"⊥\",\n    bottom: \"⊥\",\n    bowtie: \"⋈\",\n    boxDL: \"╗\",\n    boxDR: \"╔\",\n    boxDl: \"╖\",\n    boxDr: \"╓\",\n    boxH: \"═\",\n    boxHD: \"╦\",\n    boxHU: \"╩\",\n    boxHd: \"╤\",\n    boxHu: \"╧\",\n    boxUL: \"╝\",\n    boxUR: \"╚\",\n    boxUl: \"╜\",\n    boxUr: \"╙\",\n    boxV: \"║\",\n    boxVH: \"╬\",\n    boxVL: \"╣\",\n    boxVR: \"╠\",\n    boxVh: \"╫\",\n    boxVl: \"╢\",\n    boxVr: \"╟\",\n    boxbox: \"⧉\",\n    boxdL: \"╕\",\n    boxdR: \"╒\",\n    boxdl: \"┐\",\n    boxdr: \"┌\",\n    boxh: \"─\",\n    boxhD: \"╥\",\n    boxhU: \"╨\",\n    boxhd: \"┬\",\n    boxhu: \"┴\",\n    boxminus: \"⊟\",\n    boxplus: \"⊞\",\n    boxtimes: \"⊠\",\n    boxuL: \"╛\",\n    boxuR: \"╘\",\n    boxul: \"┘\",\n    boxur: \"└\",\n    boxv: \"│\",\n    boxvH: \"╪\",\n    boxvL: \"╡\",\n    boxvR: \"╞\",\n    boxvh: \"┼\",\n    boxvl: \"┤\",\n    boxvr: \"├\",\n    bprime: \"‵\",\n    breve: \"˘\",\n    brvba: \"¦\",\n    brvbar: \"¦\",\n    bscr: \"𝒷\",\n    bsemi: \"⁏\",\n    bsim: \"∽\",\n    bsime: \"⋍\",\n    bsol: \"\\\\\",\n    bsolb: \"⧅\",\n    bsolhsub: \"⟈\",\n    bull: \"•\",\n    bullet: \"•\",\n    bump: \"≎\",\n    bumpE: \"⪮\",\n    bumpe: \"≏\",\n    bumpeq: \"≏\",\n    cacute: \"ć\",\n    cap: \"∩\",\n    capand: \"⩄\",\n    capbrcup: \"⩉\",\n    capcap: \"⩋\",\n    capcup: \"⩇\",\n    capdot: \"⩀\",\n    caps: \"∩︀\",\n    caret: \"⁁\",\n    caron: \"ˇ\",\n    ccaps: \"⩍\",\n    ccaron: \"č\",\n    ccedi: \"ç\",\n    ccedil: \"ç\",\n    ccirc: \"ĉ\",\n    ccups: \"⩌\",\n    ccupssm: \"⩐\",\n    cdot: \"ċ\",\n    cedi: \"¸\",\n    cedil: \"¸\",\n    cemptyv: \"⦲\",\n    cen: \"¢\",\n    cent: \"¢\",\n    centerdot: \"·\",\n    cfr: \"𝔠\",\n    chcy: \"ч\",\n    check: \"✓\",\n    checkmark: \"✓\",\n    chi: \"χ\",\n    cir: \"○\",\n    cirE: \"⧃\",\n    circ: \"ˆ\",\n    circeq: \"≗\",\n    circlearrowleft: \"↺\",\n    circlearrowright: \"↻\",\n    circledR: \"®\",\n    circledS: \"Ⓢ\",\n    circledast: \"⊛\",\n    circledcirc: \"⊚\",\n    circleddash: \"⊝\",\n    cire: \"≗\",\n    cirfnint: \"⨐\",\n    cirmid: \"⫯\",\n    cirscir: \"⧂\",\n    clubs: \"♣\",\n    clubsuit: \"♣\",\n    colon: \":\",\n    colone: \"≔\",\n    coloneq: \"≔\",\n    comma: \",\",\n    commat: \"@\",\n    comp: \"∁\",\n    compfn: \"∘\",\n    complement: \"∁\",\n    complexes: \"ℂ\",\n    cong: \"≅\",\n    congdot: \"⩭\",\n    conint: \"∮\",\n    copf: \"𝕔\",\n    coprod: \"∐\",\n    cop: \"©\",\n    copy: \"©\",\n    copysr: \"℗\",\n    crarr: \"↵\",\n    cross: \"✗\",\n    cscr: \"𝒸\",\n    csub: \"⫏\",\n    csube: \"⫑\",\n    csup: \"⫐\",\n    csupe: \"⫒\",\n    ctdot: \"⋯\",\n    cudarrl: \"⤸\",\n    cudarrr: \"⤵\",\n    cuepr: \"⋞\",\n    cuesc: \"⋟\",\n    cularr: \"↶\",\n    cularrp: \"⤽\",\n    cup: \"∪\",\n    cupbrcap: \"⩈\",\n    cupcap: \"⩆\",\n    cupcup: \"⩊\",\n    cupdot: \"⊍\",\n    cupor: \"⩅\",\n    cups: \"∪︀\",\n    curarr: \"↷\",\n    curarrm: \"⤼\",\n    curlyeqprec: \"⋞\",\n    curlyeqsucc: \"⋟\",\n    curlyvee: \"⋎\",\n    curlywedge: \"⋏\",\n    curre: \"¤\",\n    curren: \"¤\",\n    curvearrowleft: \"↶\",\n    curvearrowright: \"↷\",\n    cuvee: \"⋎\",\n    cuwed: \"⋏\",\n    cwconint: \"∲\",\n    cwint: \"∱\",\n    cylcty: \"⌭\",\n    dArr: \"⇓\",\n    dHar: \"⥥\",\n    dagger: \"†\",\n    daleth: \"ℸ\",\n    darr: \"↓\",\n    dash: \"‐\",\n    dashv: \"⊣\",\n    dbkarow: \"⤏\",\n    dblac: \"˝\",\n    dcaron: \"ď\",\n    dcy: \"д\",\n    dd: \"ⅆ\",\n    ddagger: \"‡\",\n    ddarr: \"⇊\",\n    ddotseq: \"⩷\",\n    de: \"°\",\n    deg: \"°\",\n    delta: \"δ\",\n    demptyv: \"⦱\",\n    dfisht: \"⥿\",\n    dfr: \"𝔡\",\n    dharl: \"⇃\",\n    dharr: \"⇂\",\n    diam: \"⋄\",\n    diamond: \"⋄\",\n    diamondsuit: \"♦\",\n    diams: \"♦\",\n    die: \"¨\",\n    digamma: \"ϝ\",\n    disin: \"⋲\",\n    div: \"÷\",\n    divid: \"÷\",\n    divide: \"÷\",\n    divideontimes: \"⋇\",\n    divonx: \"⋇\",\n    djcy: \"ђ\",\n    dlcorn: \"⌞\",\n    dlcrop: \"⌍\",\n    dollar: \"$\",\n    dopf: \"𝕕\",\n    dot: \"˙\",\n    doteq: \"≐\",\n    doteqdot: \"≑\",\n    dotminus: \"∸\",\n    dotplus: \"∔\",\n    dotsquare: \"⊡\",\n    doublebarwedge: \"⌆\",\n    downarrow: \"↓\",\n    downdownarrows: \"⇊\",\n    downharpoonleft: \"⇃\",\n    downharpoonright: \"⇂\",\n    drbkarow: \"⤐\",\n    drcorn: \"⌟\",\n    drcrop: \"⌌\",\n    dscr: \"𝒹\",\n    dscy: \"ѕ\",\n    dsol: \"⧶\",\n    dstrok: \"đ\",\n    dtdot: \"⋱\",\n    dtri: \"▿\",\n    dtrif: \"▾\",\n    duarr: \"⇵\",\n    duhar: \"⥯\",\n    dwangle: \"⦦\",\n    dzcy: \"џ\",\n    dzigrarr: \"⟿\",\n    eDDot: \"⩷\",\n    eDot: \"≑\",\n    eacut: \"é\",\n    eacute: \"é\",\n    easter: \"⩮\",\n    ecaron: \"ě\",\n    ecir: \"ê\",\n    ecirc: \"ê\",\n    ecolon: \"≕\",\n    ecy: \"э\",\n    edot: \"ė\",\n    ee: \"ⅇ\",\n    efDot: \"≒\",\n    efr: \"𝔢\",\n    eg: \"⪚\",\n    egrav: \"è\",\n    egrave: \"è\",\n    egs: \"⪖\",\n    egsdot: \"⪘\",\n    el: \"⪙\",\n    elinters: \"⏧\",\n    ell: \"ℓ\",\n    els: \"⪕\",\n    elsdot: \"⪗\",\n    emacr: \"ē\",\n    empty: \"∅\",\n    emptyset: \"∅\",\n    emptyv: \"∅\",\n    emsp13: \" \",\n    emsp14: \" \",\n    emsp: \" \",\n    eng: \"ŋ\",\n    ensp: \" \",\n    eogon: \"ę\",\n    eopf: \"𝕖\",\n    epar: \"⋕\",\n    eparsl: \"⧣\",\n    eplus: \"⩱\",\n    epsi: \"ε\",\n    epsilon: \"ε\",\n    epsiv: \"ϵ\",\n    eqcirc: \"≖\",\n    eqcolon: \"≕\",\n    eqsim: \"≂\",\n    eqslantgtr: \"⪖\",\n    eqslantless: \"⪕\",\n    equals: \"=\",\n    equest: \"≟\",\n    equiv: \"≡\",\n    equivDD: \"⩸\",\n    eqvparsl: \"⧥\",\n    erDot: \"≓\",\n    erarr: \"⥱\",\n    escr: \"ℯ\",\n    esdot: \"≐\",\n    esim: \"≂\",\n    eta: \"η\",\n    et: \"ð\",\n    eth: \"ð\",\n    eum: \"ë\",\n    euml: \"ë\",\n    euro: \"€\",\n    excl: \"!\",\n    exist: \"∃\",\n    expectation: \"ℰ\",\n    exponentiale: \"ⅇ\",\n    fallingdotseq: \"≒\",\n    fcy: \"ф\",\n    female: \"♀\",\n    ffilig: \"ﬃ\",\n    fflig: \"ﬀ\",\n    ffllig: \"ﬄ\",\n    ffr: \"𝔣\",\n    filig: \"ﬁ\",\n    fjlig: \"fj\",\n    flat: \"♭\",\n    fllig: \"ﬂ\",\n    fltns: \"▱\",\n    fnof: \"ƒ\",\n    fopf: \"𝕗\",\n    forall: \"∀\",\n    fork: \"⋔\",\n    forkv: \"⫙\",\n    fpartint: \"⨍\",\n    frac1: \"¼\",\n    frac12: \"½\",\n    frac13: \"⅓\",\n    frac14: \"¼\",\n    frac15: \"⅕\",\n    frac16: \"⅙\",\n    frac18: \"⅛\",\n    frac23: \"⅔\",\n    frac25: \"⅖\",\n    frac3: \"¾\",\n    frac34: \"¾\",\n    frac35: \"⅗\",\n    frac38: \"⅜\",\n    frac45: \"⅘\",\n    frac56: \"⅚\",\n    frac58: \"⅝\",\n    frac78: \"⅞\",\n    frasl: \"⁄\",\n    frown: \"⌢\",\n    fscr: \"𝒻\",\n    gE: \"≧\",\n    gEl: \"⪌\",\n    gacute: \"ǵ\",\n    gamma: \"γ\",\n    gammad: \"ϝ\",\n    gap: \"⪆\",\n    gbreve: \"ğ\",\n    gcirc: \"ĝ\",\n    gcy: \"г\",\n    gdot: \"ġ\",\n    ge: \"≥\",\n    gel: \"⋛\",\n    geq: \"≥\",\n    geqq: \"≧\",\n    geqslant: \"⩾\",\n    ges: \"⩾\",\n    gescc: \"⪩\",\n    gesdot: \"⪀\",\n    gesdoto: \"⪂\",\n    gesdotol: \"⪄\",\n    gesl: \"⋛︀\",\n    gesles: \"⪔\",\n    gfr: \"𝔤\",\n    gg: \"≫\",\n    ggg: \"⋙\",\n    gimel: \"ℷ\",\n    gjcy: \"ѓ\",\n    gl: \"≷\",\n    glE: \"⪒\",\n    gla: \"⪥\",\n    glj: \"⪤\",\n    gnE: \"≩\",\n    gnap: \"⪊\",\n    gnapprox: \"⪊\",\n    gne: \"⪈\",\n    gneq: \"⪈\",\n    gneqq: \"≩\",\n    gnsim: \"⋧\",\n    gopf: \"𝕘\",\n    grave: \"`\",\n    gscr: \"ℊ\",\n    gsim: \"≳\",\n    gsime: \"⪎\",\n    gsiml: \"⪐\",\n    g: \">\",\n    gt: \">\",\n    gtcc: \"⪧\",\n    gtcir: \"⩺\",\n    gtdot: \"⋗\",\n    gtlPar: \"⦕\",\n    gtquest: \"⩼\",\n    gtrapprox: \"⪆\",\n    gtrarr: \"⥸\",\n    gtrdot: \"⋗\",\n    gtreqless: \"⋛\",\n    gtreqqless: \"⪌\",\n    gtrless: \"≷\",\n    gtrsim: \"≳\",\n    gvertneqq: \"≩︀\",\n    gvnE: \"≩︀\",\n    hArr: \"⇔\",\n    hairsp: \" \",\n    half: \"½\",\n    hamilt: \"ℋ\",\n    hardcy: \"ъ\",\n    harr: \"↔\",\n    harrcir: \"⥈\",\n    harrw: \"↭\",\n    hbar: \"ℏ\",\n    hcirc: \"ĥ\",\n    hearts: \"♥\",\n    heartsuit: \"♥\",\n    hellip: \"…\",\n    hercon: \"⊹\",\n    hfr: \"𝔥\",\n    hksearow: \"⤥\",\n    hkswarow: \"⤦\",\n    hoarr: \"⇿\",\n    homtht: \"∻\",\n    hookleftarrow: \"↩\",\n    hookrightarrow: \"↪\",\n    hopf: \"𝕙\",\n    horbar: \"―\",\n    hscr: \"𝒽\",\n    hslash: \"ℏ\",\n    hstrok: \"ħ\",\n    hybull: \"⁃\",\n    hyphen: \"‐\",\n    iacut: \"í\",\n    iacute: \"í\",\n    ic: \"⁣\",\n    icir: \"î\",\n    icirc: \"î\",\n    icy: \"и\",\n    iecy: \"е\",\n    iexc: \"¡\",\n    iexcl: \"¡\",\n    iff: \"⇔\",\n    ifr: \"𝔦\",\n    igrav: \"ì\",\n    igrave: \"ì\",\n    ii: \"ⅈ\",\n    iiiint: \"⨌\",\n    iiint: \"∭\",\n    iinfin: \"⧜\",\n    iiota: \"℩\",\n    ijlig: \"ĳ\",\n    imacr: \"ī\",\n    image: \"ℑ\",\n    imagline: \"ℐ\",\n    imagpart: \"ℑ\",\n    imath: \"ı\",\n    imof: \"⊷\",\n    imped: \"Ƶ\",\n    incare: \"℅\",\n    infin: \"∞\",\n    infintie: \"⧝\",\n    inodot: \"ı\",\n    int: \"∫\",\n    intcal: \"⊺\",\n    integers: \"ℤ\",\n    intercal: \"⊺\",\n    intlarhk: \"⨗\",\n    intprod: \"⨼\",\n    iocy: \"ё\",\n    iogon: \"į\",\n    iopf: \"𝕚\",\n    iota: \"ι\",\n    iprod: \"⨼\",\n    iques: \"¿\",\n    iquest: \"¿\",\n    iscr: \"𝒾\",\n    isin: \"∈\",\n    isinE: \"⋹\",\n    isindot: \"⋵\",\n    isins: \"⋴\",\n    isinsv: \"⋳\",\n    isinv: \"∈\",\n    it: \"⁢\",\n    itilde: \"ĩ\",\n    iukcy: \"і\",\n    ium: \"ï\",\n    iuml: \"ï\",\n    jcirc: \"ĵ\",\n    jcy: \"й\",\n    jfr: \"𝔧\",\n    jmath: \"ȷ\",\n    jopf: \"𝕛\",\n    jscr: \"𝒿\",\n    jsercy: \"ј\",\n    jukcy: \"є\",\n    kappa: \"κ\",\n    kappav: \"ϰ\",\n    kcedil: \"ķ\",\n    kcy: \"к\",\n    kfr: \"𝔨\",\n    kgreen: \"ĸ\",\n    khcy: \"х\",\n    kjcy: \"ќ\",\n    kopf: \"𝕜\",\n    kscr: \"𝓀\",\n    lAarr: \"⇚\",\n    lArr: \"⇐\",\n    lAtail: \"⤛\",\n    lBarr: \"⤎\",\n    lE: \"≦\",\n    lEg: \"⪋\",\n    lHar: \"⥢\",\n    lacute: \"ĺ\",\n    laemptyv: \"⦴\",\n    lagran: \"ℒ\",\n    lambda: \"λ\",\n    lang: \"⟨\",\n    langd: \"⦑\",\n    langle: \"⟨\",\n    lap: \"⪅\",\n    laqu: \"«\",\n    laquo: \"«\",\n    larr: \"←\",\n    larrb: \"⇤\",\n    larrbfs: \"⤟\",\n    larrfs: \"⤝\",\n    larrhk: \"↩\",\n    larrlp: \"↫\",\n    larrpl: \"⤹\",\n    larrsim: \"⥳\",\n    larrtl: \"↢\",\n    lat: \"⪫\",\n    latail: \"⤙\",\n    late: \"⪭\",\n    lates: \"⪭︀\",\n    lbarr: \"⤌\",\n    lbbrk: \"❲\",\n    lbrace: \"{\",\n    lbrack: \"[\",\n    lbrke: \"⦋\",\n    lbrksld: \"⦏\",\n    lbrkslu: \"⦍\",\n    lcaron: \"ľ\",\n    lcedil: \"ļ\",\n    lceil: \"⌈\",\n    lcub: \"{\",\n    lcy: \"л\",\n    ldca: \"⤶\",\n    ldquo: \"“\",\n    ldquor: \"„\",\n    ldrdhar: \"⥧\",\n    ldrushar: \"⥋\",\n    ldsh: \"↲\",\n    le: \"≤\",\n    leftarrow: \"←\",\n    leftarrowtail: \"↢\",\n    leftharpoondown: \"↽\",\n    leftharpoonup: \"↼\",\n    leftleftarrows: \"⇇\",\n    leftrightarrow: \"↔\",\n    leftrightarrows: \"⇆\",\n    leftrightharpoons: \"⇋\",\n    leftrightsquigarrow: \"↭\",\n    leftthreetimes: \"⋋\",\n    leg: \"⋚\",\n    leq: \"≤\",\n    leqq: \"≦\",\n    leqslant: \"⩽\",\n    les: \"⩽\",\n    lescc: \"⪨\",\n    lesdot: \"⩿\",\n    lesdoto: \"⪁\",\n    lesdotor: \"⪃\",\n    lesg: \"⋚︀\",\n    lesges: \"⪓\",\n    lessapprox: \"⪅\",\n    lessdot: \"⋖\",\n    lesseqgtr: \"⋚\",\n    lesseqqgtr: \"⪋\",\n    lessgtr: \"≶\",\n    lesssim: \"≲\",\n    lfisht: \"⥼\",\n    lfloor: \"⌊\",\n    lfr: \"𝔩\",\n    lg: \"≶\",\n    lgE: \"⪑\",\n    lhard: \"↽\",\n    lharu: \"↼\",\n    lharul: \"⥪\",\n    lhblk: \"▄\",\n    ljcy: \"љ\",\n    ll: \"≪\",\n    llarr: \"⇇\",\n    llcorner: \"⌞\",\n    llhard: \"⥫\",\n    lltri: \"◺\",\n    lmidot: \"ŀ\",\n    lmoust: \"⎰\",\n    lmoustache: \"⎰\",\n    lnE: \"≨\",\n    lnap: \"⪉\",\n    lnapprox: \"⪉\",\n    lne: \"⪇\",\n    lneq: \"⪇\",\n    lneqq: \"≨\",\n    lnsim: \"⋦\",\n    loang: \"⟬\",\n    loarr: \"⇽\",\n    lobrk: \"⟦\",\n    longleftarrow: \"⟵\",\n    longleftrightarrow: \"⟷\",\n    longmapsto: \"⟼\",\n    longrightarrow: \"⟶\",\n    looparrowleft: \"↫\",\n    looparrowright: \"↬\",\n    lopar: \"⦅\",\n    lopf: \"𝕝\",\n    loplus: \"⨭\",\n    lotimes: \"⨴\",\n    lowast: \"∗\",\n    lowbar: \"_\",\n    loz: \"◊\",\n    lozenge: \"◊\",\n    lozf: \"⧫\",\n    lpar: \"(\",\n    lparlt: \"⦓\",\n    lrarr: \"⇆\",\n    lrcorner: \"⌟\",\n    lrhar: \"⇋\",\n    lrhard: \"⥭\",\n    lrm: \"‎\",\n    lrtri: \"⊿\",\n    lsaquo: \"‹\",\n    lscr: \"𝓁\",\n    lsh: \"↰\",\n    lsim: \"≲\",\n    lsime: \"⪍\",\n    lsimg: \"⪏\",\n    lsqb: \"[\",\n    lsquo: \"‘\",\n    lsquor: \"‚\",\n    lstrok: \"ł\",\n    l: \"<\",\n    lt: \"<\",\n    ltcc: \"⪦\",\n    ltcir: \"⩹\",\n    ltdot: \"⋖\",\n    lthree: \"⋋\",\n    ltimes: \"⋉\",\n    ltlarr: \"⥶\",\n    ltquest: \"⩻\",\n    ltrPar: \"⦖\",\n    ltri: \"◃\",\n    ltrie: \"⊴\",\n    ltrif: \"◂\",\n    lurdshar: \"⥊\",\n    luruhar: \"⥦\",\n    lvertneqq: \"≨︀\",\n    lvnE: \"≨︀\",\n    mDDot: \"∺\",\n    mac: \"¯\",\n    macr: \"¯\",\n    male: \"♂\",\n    malt: \"✠\",\n    maltese: \"✠\",\n    map: \"↦\",\n    mapsto: \"↦\",\n    mapstodown: \"↧\",\n    mapstoleft: \"↤\",\n    mapstoup: \"↥\",\n    marker: \"▮\",\n    mcomma: \"⨩\",\n    mcy: \"м\",\n    mdash: \"—\",\n    measuredangle: \"∡\",\n    mfr: \"𝔪\",\n    mho: \"℧\",\n    micr: \"µ\",\n    micro: \"µ\",\n    mid: \"∣\",\n    midast: \"*\",\n    midcir: \"⫰\",\n    middo: \"·\",\n    middot: \"·\",\n    minus: \"−\",\n    minusb: \"⊟\",\n    minusd: \"∸\",\n    minusdu: \"⨪\",\n    mlcp: \"⫛\",\n    mldr: \"…\",\n    mnplus: \"∓\",\n    models: \"⊧\",\n    mopf: \"𝕞\",\n    mp: \"∓\",\n    mscr: \"𝓂\",\n    mstpos: \"∾\",\n    mu: \"μ\",\n    multimap: \"⊸\",\n    mumap: \"⊸\",\n    nGg: \"⋙̸\",\n    nGt: \"≫⃒\",\n    nGtv: \"≫̸\",\n    nLeftarrow: \"⇍\",\n    nLeftrightarrow: \"⇎\",\n    nLl: \"⋘̸\",\n    nLt: \"≪⃒\",\n    nLtv: \"≪̸\",\n    nRightarrow: \"⇏\",\n    nVDash: \"⊯\",\n    nVdash: \"⊮\",\n    nabla: \"∇\",\n    nacute: \"ń\",\n    nang: \"∠⃒\",\n    nap: \"≉\",\n    napE: \"⩰̸\",\n    napid: \"≋̸\",\n    napos: \"ŉ\",\n    napprox: \"≉\",\n    natur: \"♮\",\n    natural: \"♮\",\n    naturals: \"ℕ\",\n    nbs: \" \",\n    nbsp: \" \",\n    nbump: \"≎̸\",\n    nbumpe: \"≏̸\",\n    ncap: \"⩃\",\n    ncaron: \"ň\",\n    ncedil: \"ņ\",\n    ncong: \"≇\",\n    ncongdot: \"⩭̸\",\n    ncup: \"⩂\",\n    ncy: \"н\",\n    ndash: \"–\",\n    ne: \"≠\",\n    neArr: \"⇗\",\n    nearhk: \"⤤\",\n    nearr: \"↗\",\n    nearrow: \"↗\",\n    nedot: \"≐̸\",\n    nequiv: \"≢\",\n    nesear: \"⤨\",\n    nesim: \"≂̸\",\n    nexist: \"∄\",\n    nexists: \"∄\",\n    nfr: \"𝔫\",\n    ngE: \"≧̸\",\n    nge: \"≱\",\n    ngeq: \"≱\",\n    ngeqq: \"≧̸\",\n    ngeqslant: \"⩾̸\",\n    nges: \"⩾̸\",\n    ngsim: \"≵\",\n    ngt: \"≯\",\n    ngtr: \"≯\",\n    nhArr: \"⇎\",\n    nharr: \"↮\",\n    nhpar: \"⫲\",\n    ni: \"∋\",\n    nis: \"⋼\",\n    nisd: \"⋺\",\n    niv: \"∋\",\n    njcy: \"њ\",\n    nlArr: \"⇍\",\n    nlE: \"≦̸\",\n    nlarr: \"↚\",\n    nldr: \"‥\",\n    nle: \"≰\",\n    nleftarrow: \"↚\",\n    nleftrightarrow: \"↮\",\n    nleq: \"≰\",\n    nleqq: \"≦̸\",\n    nleqslant: \"⩽̸\",\n    nles: \"⩽̸\",\n    nless: \"≮\",\n    nlsim: \"≴\",\n    nlt: \"≮\",\n    nltri: \"⋪\",\n    nltrie: \"⋬\",\n    nmid: \"∤\",\n    nopf: \"𝕟\",\n    no: \"¬\",\n    not: \"¬\",\n    notin: \"∉\",\n    notinE: \"⋹̸\",\n    notindot: \"⋵̸\",\n    notinva: \"∉\",\n    notinvb: \"⋷\",\n    notinvc: \"⋶\",\n    notni: \"∌\",\n    notniva: \"∌\",\n    notnivb: \"⋾\",\n    notnivc: \"⋽\",\n    npar: \"∦\",\n    nparallel: \"∦\",\n    nparsl: \"⫽⃥\",\n    npart: \"∂̸\",\n    npolint: \"⨔\",\n    npr: \"⊀\",\n    nprcue: \"⋠\",\n    npre: \"⪯̸\",\n    nprec: \"⊀\",\n    npreceq: \"⪯̸\",\n    nrArr: \"⇏\",\n    nrarr: \"↛\",\n    nrarrc: \"⤳̸\",\n    nrarrw: \"↝̸\",\n    nrightarrow: \"↛\",\n    nrtri: \"⋫\",\n    nrtrie: \"⋭\",\n    nsc: \"⊁\",\n    nsccue: \"⋡\",\n    nsce: \"⪰̸\",\n    nscr: \"𝓃\",\n    nshortmid: \"∤\",\n    nshortparallel: \"∦\",\n    nsim: \"≁\",\n    nsime: \"≄\",\n    nsimeq: \"≄\",\n    nsmid: \"∤\",\n    nspar: \"∦\",\n    nsqsube: \"⋢\",\n    nsqsupe: \"⋣\",\n    nsub: \"⊄\",\n    nsubE: \"⫅̸\",\n    nsube: \"⊈\",\n    nsubset: \"⊂⃒\",\n    nsubseteq: \"⊈\",\n    nsubseteqq: \"⫅̸\",\n    nsucc: \"⊁\",\n    nsucceq: \"⪰̸\",\n    nsup: \"⊅\",\n    nsupE: \"⫆̸\",\n    nsupe: \"⊉\",\n    nsupset: \"⊃⃒\",\n    nsupseteq: \"⊉\",\n    nsupseteqq: \"⫆̸\",\n    ntgl: \"≹\",\n    ntild: \"ñ\",\n    ntilde: \"ñ\",\n    ntlg: \"≸\",\n    ntriangleleft: \"⋪\",\n    ntrianglelefteq: \"⋬\",\n    ntriangleright: \"⋫\",\n    ntrianglerighteq: \"⋭\",\n    nu: \"ν\",\n    num: \"#\",\n    numero: \"№\",\n    numsp: \" \",\n    nvDash: \"⊭\",\n    nvHarr: \"⤄\",\n    nvap: \"≍⃒\",\n    nvdash: \"⊬\",\n    nvge: \"≥⃒\",\n    nvgt: \">⃒\",\n    nvinfin: \"⧞\",\n    nvlArr: \"⤂\",\n    nvle: \"≤⃒\",\n    nvlt: \"<⃒\",\n    nvltrie: \"⊴⃒\",\n    nvrArr: \"⤃\",\n    nvrtrie: \"⊵⃒\",\n    nvsim: \"∼⃒\",\n    nwArr: \"⇖\",\n    nwarhk: \"⤣\",\n    nwarr: \"↖\",\n    nwarrow: \"↖\",\n    nwnear: \"⤧\",\n    oS: \"Ⓢ\",\n    oacut: \"ó\",\n    oacute: \"ó\",\n    oast: \"⊛\",\n    ocir: \"ô\",\n    ocirc: \"ô\",\n    ocy: \"о\",\n    odash: \"⊝\",\n    odblac: \"ő\",\n    odiv: \"⨸\",\n    odot: \"⊙\",\n    odsold: \"⦼\",\n    oelig: \"œ\",\n    ofcir: \"⦿\",\n    ofr: \"𝔬\",\n    ogon: \"˛\",\n    ograv: \"ò\",\n    ograve: \"ò\",\n    ogt: \"⧁\",\n    ohbar: \"⦵\",\n    ohm: \"Ω\",\n    oint: \"∮\",\n    olarr: \"↺\",\n    olcir: \"⦾\",\n    olcross: \"⦻\",\n    oline: \"‾\",\n    olt: \"⧀\",\n    omacr: \"ō\",\n    omega: \"ω\",\n    omicron: \"ο\",\n    omid: \"⦶\",\n    ominus: \"⊖\",\n    oopf: \"𝕠\",\n    opar: \"⦷\",\n    operp: \"⦹\",\n    oplus: \"⊕\",\n    or: \"∨\",\n    orarr: \"↻\",\n    ord: \"º\",\n    order: \"ℴ\",\n    orderof: \"ℴ\",\n    ordf: \"ª\",\n    ordm: \"º\",\n    origof: \"⊶\",\n    oror: \"⩖\",\n    orslope: \"⩗\",\n    orv: \"⩛\",\n    oscr: \"ℴ\",\n    oslas: \"ø\",\n    oslash: \"ø\",\n    osol: \"⊘\",\n    otild: \"õ\",\n    otilde: \"õ\",\n    otimes: \"⊗\",\n    otimesas: \"⨶\",\n    oum: \"ö\",\n    ouml: \"ö\",\n    ovbar: \"⌽\",\n    par: \"¶\",\n    para: \"¶\",\n    parallel: \"∥\",\n    parsim: \"⫳\",\n    parsl: \"⫽\",\n    part: \"∂\",\n    pcy: \"п\",\n    percnt: \"%\",\n    period: \".\",\n    permil: \"‰\",\n    perp: \"⊥\",\n    pertenk: \"‱\",\n    pfr: \"𝔭\",\n    phi: \"φ\",\n    phiv: \"ϕ\",\n    phmmat: \"ℳ\",\n    phone: \"☎\",\n    pi: \"π\",\n    pitchfork: \"⋔\",\n    piv: \"ϖ\",\n    planck: \"ℏ\",\n    planckh: \"ℎ\",\n    plankv: \"ℏ\",\n    plus: \"+\",\n    plusacir: \"⨣\",\n    plusb: \"⊞\",\n    pluscir: \"⨢\",\n    plusdo: \"∔\",\n    plusdu: \"⨥\",\n    pluse: \"⩲\",\n    plusm: \"±\",\n    plusmn: \"±\",\n    plussim: \"⨦\",\n    plustwo: \"⨧\",\n    pm: \"±\",\n    pointint: \"⨕\",\n    popf: \"𝕡\",\n    poun: \"£\",\n    pound: \"£\",\n    pr: \"≺\",\n    prE: \"⪳\",\n    prap: \"⪷\",\n    prcue: \"≼\",\n    pre: \"⪯\",\n    prec: \"≺\",\n    precapprox: \"⪷\",\n    preccurlyeq: \"≼\",\n    preceq: \"⪯\",\n    precnapprox: \"⪹\",\n    precneqq: \"⪵\",\n    precnsim: \"⋨\",\n    precsim: \"≾\",\n    prime: \"′\",\n    primes: \"ℙ\",\n    prnE: \"⪵\",\n    prnap: \"⪹\",\n    prnsim: \"⋨\",\n    prod: \"∏\",\n    profalar: \"⌮\",\n    profline: \"⌒\",\n    profsurf: \"⌓\",\n    prop: \"∝\",\n    propto: \"∝\",\n    prsim: \"≾\",\n    prurel: \"⊰\",\n    pscr: \"𝓅\",\n    psi: \"ψ\",\n    puncsp: \" \",\n    qfr: \"𝔮\",\n    qint: \"⨌\",\n    qopf: \"𝕢\",\n    qprime: \"⁗\",\n    qscr: \"𝓆\",\n    quaternions: \"ℍ\",\n    quatint: \"⨖\",\n    quest: \"?\",\n    questeq: \"≟\",\n    quo: '\"',\n    quot: '\"',\n    rAarr: \"⇛\",\n    rArr: \"⇒\",\n    rAtail: \"⤜\",\n    rBarr: \"⤏\",\n    rHar: \"⥤\",\n    race: \"∽̱\",\n    racute: \"ŕ\",\n    radic: \"√\",\n    raemptyv: \"⦳\",\n    rang: \"⟩\",\n    rangd: \"⦒\",\n    range: \"⦥\",\n    rangle: \"⟩\",\n    raqu: \"»\",\n    raquo: \"»\",\n    rarr: \"→\",\n    rarrap: \"⥵\",\n    rarrb: \"⇥\",\n    rarrbfs: \"⤠\",\n    rarrc: \"⤳\",\n    rarrfs: \"⤞\",\n    rarrhk: \"↪\",\n    rarrlp: \"↬\",\n    rarrpl: \"⥅\",\n    rarrsim: \"⥴\",\n    rarrtl: \"↣\",\n    rarrw: \"↝\",\n    ratail: \"⤚\",\n    ratio: \"∶\",\n    rationals: \"ℚ\",\n    rbarr: \"⤍\",\n    rbbrk: \"❳\",\n    rbrace: \"}\",\n    rbrack: \"]\",\n    rbrke: \"⦌\",\n    rbrksld: \"⦎\",\n    rbrkslu: \"⦐\",\n    rcaron: \"ř\",\n    rcedil: \"ŗ\",\n    rceil: \"⌉\",\n    rcub: \"}\",\n    rcy: \"р\",\n    rdca: \"⤷\",\n    rdldhar: \"⥩\",\n    rdquo: \"”\",\n    rdquor: \"”\",\n    rdsh: \"↳\",\n    real: \"ℜ\",\n    realine: \"ℛ\",\n    realpart: \"ℜ\",\n    reals: \"ℝ\",\n    rect: \"▭\",\n    re: \"®\",\n    reg: \"®\",\n    rfisht: \"⥽\",\n    rfloor: \"⌋\",\n    rfr: \"𝔯\",\n    rhard: \"⇁\",\n    rharu: \"⇀\",\n    rharul: \"⥬\",\n    rho: \"ρ\",\n    rhov: \"ϱ\",\n    rightarrow: \"→\",\n    rightarrowtail: \"↣\",\n    rightharpoondown: \"⇁\",\n    rightharpoonup: \"⇀\",\n    rightleftarrows: \"⇄\",\n    rightleftharpoons: \"⇌\",\n    rightrightarrows: \"⇉\",\n    rightsquigarrow: \"↝\",\n    rightthreetimes: \"⋌\",\n    ring: \"˚\",\n    risingdotseq: \"≓\",\n    rlarr: \"⇄\",\n    rlhar: \"⇌\",\n    rlm: \"‏\",\n    rmoust: \"⎱\",\n    rmoustache: \"⎱\",\n    rnmid: \"⫮\",\n    roang: \"⟭\",\n    roarr: \"⇾\",\n    robrk: \"⟧\",\n    ropar: \"⦆\",\n    ropf: \"𝕣\",\n    roplus: \"⨮\",\n    rotimes: \"⨵\",\n    rpar: \")\",\n    rpargt: \"⦔\",\n    rppolint: \"⨒\",\n    rrarr: \"⇉\",\n    rsaquo: \"›\",\n    rscr: \"𝓇\",\n    rsh: \"↱\",\n    rsqb: \"]\",\n    rsquo: \"’\",\n    rsquor: \"’\",\n    rthree: \"⋌\",\n    rtimes: \"⋊\",\n    rtri: \"▹\",\n    rtrie: \"⊵\",\n    rtrif: \"▸\",\n    rtriltri: \"⧎\",\n    ruluhar: \"⥨\",\n    rx: \"℞\",\n    sacute: \"ś\",\n    sbquo: \"‚\",\n    sc: \"≻\",\n    scE: \"⪴\",\n    scap: \"⪸\",\n    scaron: \"š\",\n    sccue: \"≽\",\n    sce: \"⪰\",\n    scedil: \"ş\",\n    scirc: \"ŝ\",\n    scnE: \"⪶\",\n    scnap: \"⪺\",\n    scnsim: \"⋩\",\n    scpolint: \"⨓\",\n    scsim: \"≿\",\n    scy: \"с\",\n    sdot: \"⋅\",\n    sdotb: \"⊡\",\n    sdote: \"⩦\",\n    seArr: \"⇘\",\n    searhk: \"⤥\",\n    searr: \"↘\",\n    searrow: \"↘\",\n    sec: \"§\",\n    sect: \"§\",\n    semi: \";\",\n    seswar: \"⤩\",\n    setminus: \"∖\",\n    setmn: \"∖\",\n    sext: \"✶\",\n    sfr: \"𝔰\",\n    sfrown: \"⌢\",\n    sharp: \"♯\",\n    shchcy: \"щ\",\n    shcy: \"ш\",\n    shortmid: \"∣\",\n    shortparallel: \"∥\",\n    sh: \"­\",\n    shy: \"­\",\n    sigma: \"σ\",\n    sigmaf: \"ς\",\n    sigmav: \"ς\",\n    sim: \"∼\",\n    simdot: \"⩪\",\n    sime: \"≃\",\n    simeq: \"≃\",\n    simg: \"⪞\",\n    simgE: \"⪠\",\n    siml: \"⪝\",\n    simlE: \"⪟\",\n    simne: \"≆\",\n    simplus: \"⨤\",\n    simrarr: \"⥲\",\n    slarr: \"←\",\n    smallsetminus: \"∖\",\n    smashp: \"⨳\",\n    smeparsl: \"⧤\",\n    smid: \"∣\",\n    smile: \"⌣\",\n    smt: \"⪪\",\n    smte: \"⪬\",\n    smtes: \"⪬︀\",\n    softcy: \"ь\",\n    sol: \"/\",\n    solb: \"⧄\",\n    solbar: \"⌿\",\n    sopf: \"𝕤\",\n    spades: \"♠\",\n    spadesuit: \"♠\",\n    spar: \"∥\",\n    sqcap: \"⊓\",\n    sqcaps: \"⊓︀\",\n    sqcup: \"⊔\",\n    sqcups: \"⊔︀\",\n    sqsub: \"⊏\",\n    sqsube: \"⊑\",\n    sqsubset: \"⊏\",\n    sqsubseteq: \"⊑\",\n    sqsup: \"⊐\",\n    sqsupe: \"⊒\",\n    sqsupset: \"⊐\",\n    sqsupseteq: \"⊒\",\n    squ: \"□\",\n    square: \"□\",\n    squarf: \"▪\",\n    squf: \"▪\",\n    srarr: \"→\",\n    sscr: \"𝓈\",\n    ssetmn: \"∖\",\n    ssmile: \"⌣\",\n    sstarf: \"⋆\",\n    star: \"☆\",\n    starf: \"★\",\n    straightepsilon: \"ϵ\",\n    straightphi: \"ϕ\",\n    strns: \"¯\",\n    sub: \"⊂\",\n    subE: \"⫅\",\n    subdot: \"⪽\",\n    sube: \"⊆\",\n    subedot: \"⫃\",\n    submult: \"⫁\",\n    subnE: \"⫋\",\n    subne: \"⊊\",\n    subplus: \"⪿\",\n    subrarr: \"⥹\",\n    subset: \"⊂\",\n    subseteq: \"⊆\",\n    subseteqq: \"⫅\",\n    subsetneq: \"⊊\",\n    subsetneqq: \"⫋\",\n    subsim: \"⫇\",\n    subsub: \"⫕\",\n    subsup: \"⫓\",\n    succ: \"≻\",\n    succapprox: \"⪸\",\n    succcurlyeq: \"≽\",\n    succeq: \"⪰\",\n    succnapprox: \"⪺\",\n    succneqq: \"⪶\",\n    succnsim: \"⋩\",\n    succsim: \"≿\",\n    sum: \"∑\",\n    sung: \"♪\",\n    sup: \"⊃\",\n    sup1: \"¹\",\n    sup2: \"²\",\n    sup3: \"³\",\n    supE: \"⫆\",\n    supdot: \"⪾\",\n    supdsub: \"⫘\",\n    supe: \"⊇\",\n    supedot: \"⫄\",\n    suphsol: \"⟉\",\n    suphsub: \"⫗\",\n    suplarr: \"⥻\",\n    supmult: \"⫂\",\n    supnE: \"⫌\",\n    supne: \"⊋\",\n    supplus: \"⫀\",\n    supset: \"⊃\",\n    supseteq: \"⊇\",\n    supseteqq: \"⫆\",\n    supsetneq: \"⊋\",\n    supsetneqq: \"⫌\",\n    supsim: \"⫈\",\n    supsub: \"⫔\",\n    supsup: \"⫖\",\n    swArr: \"⇙\",\n    swarhk: \"⤦\",\n    swarr: \"↙\",\n    swarrow: \"↙\",\n    swnwar: \"⤪\",\n    szli: \"ß\",\n    szlig: \"ß\",\n    target: \"⌖\",\n    tau: \"τ\",\n    tbrk: \"⎴\",\n    tcaron: \"ť\",\n    tcedil: \"ţ\",\n    tcy: \"т\",\n    tdot: \"⃛\",\n    telrec: \"⌕\",\n    tfr: \"𝔱\",\n    there4: \"∴\",\n    therefore: \"∴\",\n    theta: \"θ\",\n    thetasym: \"ϑ\",\n    thetav: \"ϑ\",\n    thickapprox: \"≈\",\n    thicksim: \"∼\",\n    thinsp: \" \",\n    thkap: \"≈\",\n    thksim: \"∼\",\n    thor: \"þ\",\n    thorn: \"þ\",\n    tilde: \"˜\",\n    time: \"×\",\n    times: \"×\",\n    timesb: \"⊠\",\n    timesbar: \"⨱\",\n    timesd: \"⨰\",\n    tint: \"∭\",\n    toea: \"⤨\",\n    top: \"⊤\",\n    topbot: \"⌶\",\n    topcir: \"⫱\",\n    topf: \"𝕥\",\n    topfork: \"⫚\",\n    tosa: \"⤩\",\n    tprime: \"‴\",\n    trade: \"™\",\n    triangle: \"▵\",\n    triangledown: \"▿\",\n    triangleleft: \"◃\",\n    trianglelefteq: \"⊴\",\n    triangleq: \"≜\",\n    triangleright: \"▹\",\n    trianglerighteq: \"⊵\",\n    tridot: \"◬\",\n    trie: \"≜\",\n    triminus: \"⨺\",\n    triplus: \"⨹\",\n    trisb: \"⧍\",\n    tritime: \"⨻\",\n    trpezium: \"⏢\",\n    tscr: \"𝓉\",\n    tscy: \"ц\",\n    tshcy: \"ћ\",\n    tstrok: \"ŧ\",\n    twixt: \"≬\",\n    twoheadleftarrow: \"↞\",\n    twoheadrightarrow: \"↠\",\n    uArr: \"⇑\",\n    uHar: \"⥣\",\n    uacut: \"ú\",\n    uacute: \"ú\",\n    uarr: \"↑\",\n    ubrcy: \"ў\",\n    ubreve: \"ŭ\",\n    ucir: \"û\",\n    ucirc: \"û\",\n    ucy: \"у\",\n    udarr: \"⇅\",\n    udblac: \"ű\",\n    udhar: \"⥮\",\n    ufisht: \"⥾\",\n    ufr: \"𝔲\",\n    ugrav: \"ù\",\n    ugrave: \"ù\",\n    uharl: \"↿\",\n    uharr: \"↾\",\n    uhblk: \"▀\",\n    ulcorn: \"⌜\",\n    ulcorner: \"⌜\",\n    ulcrop: \"⌏\",\n    ultri: \"◸\",\n    umacr: \"ū\",\n    um: \"¨\",\n    uml: \"¨\",\n    uogon: \"ų\",\n    uopf: \"𝕦\",\n    uparrow: \"↑\",\n    updownarrow: \"↕\",\n    upharpoonleft: \"↿\",\n    upharpoonright: \"↾\",\n    uplus: \"⊎\",\n    upsi: \"υ\",\n    upsih: \"ϒ\",\n    upsilon: \"υ\",\n    upuparrows: \"⇈\",\n    urcorn: \"⌝\",\n    urcorner: \"⌝\",\n    urcrop: \"⌎\",\n    uring: \"ů\",\n    urtri: \"◹\",\n    uscr: \"𝓊\",\n    utdot: \"⋰\",\n    utilde: \"ũ\",\n    utri: \"▵\",\n    utrif: \"▴\",\n    uuarr: \"⇈\",\n    uum: \"ü\",\n    uuml: \"ü\",\n    uwangle: \"⦧\",\n    vArr: \"⇕\",\n    vBar: \"⫨\",\n    vBarv: \"⫩\",\n    vDash: \"⊨\",\n    vangrt: \"⦜\",\n    varepsilon: \"ϵ\",\n    varkappa: \"ϰ\",\n    varnothing: \"∅\",\n    varphi: \"ϕ\",\n    varpi: \"ϖ\",\n    varpropto: \"∝\",\n    varr: \"↕\",\n    varrho: \"ϱ\",\n    varsigma: \"ς\",\n    varsubsetneq: \"⊊︀\",\n    varsubsetneqq: \"⫋︀\",\n    varsupsetneq: \"⊋︀\",\n    varsupsetneqq: \"⫌︀\",\n    vartheta: \"ϑ\",\n    vartriangleleft: \"⊲\",\n    vartriangleright: \"⊳\",\n    vcy: \"в\",\n    vdash: \"⊢\",\n    vee: \"∨\",\n    veebar: \"⊻\",\n    veeeq: \"≚\",\n    vellip: \"⋮\",\n    verbar: \"|\",\n    vert: \"|\",\n    vfr: \"𝔳\",\n    vltri: \"⊲\",\n    vnsub: \"⊂⃒\",\n    vnsup: \"⊃⃒\",\n    vopf: \"𝕧\",\n    vprop: \"∝\",\n    vrtri: \"⊳\",\n    vscr: \"𝓋\",\n    vsubnE: \"⫋︀\",\n    vsubne: \"⊊︀\",\n    vsupnE: \"⫌︀\",\n    vsupne: \"⊋︀\",\n    vzigzag: \"⦚\",\n    wcirc: \"ŵ\",\n    wedbar: \"⩟\",\n    wedge: \"∧\",\n    wedgeq: \"≙\",\n    weierp: \"℘\",\n    wfr: \"𝔴\",\n    wopf: \"𝕨\",\n    wp: \"℘\",\n    wr: \"≀\",\n    wreath: \"≀\",\n    wscr: \"𝓌\",\n    xcap: \"⋂\",\n    xcirc: \"◯\",\n    xcup: \"⋃\",\n    xdtri: \"▽\",\n    xfr: \"𝔵\",\n    xhArr: \"⟺\",\n    xharr: \"⟷\",\n    xi: \"ξ\",\n    xlArr: \"⟸\",\n    xlarr: \"⟵\",\n    xmap: \"⟼\",\n    xnis: \"⋻\",\n    xodot: \"⨀\",\n    xopf: \"𝕩\",\n    xoplus: \"⨁\",\n    xotime: \"⨂\",\n    xrArr: \"⟹\",\n    xrarr: \"⟶\",\n    xscr: \"𝓍\",\n    xsqcup: \"⨆\",\n    xuplus: \"⨄\",\n    xutri: \"△\",\n    xvee: \"⋁\",\n    xwedge: \"⋀\",\n    yacut: \"ý\",\n    yacute: \"ý\",\n    yacy: \"я\",\n    ycirc: \"ŷ\",\n    ycy: \"ы\",\n    ye: \"¥\",\n    yen: \"¥\",\n    yfr: \"𝔶\",\n    yicy: \"ї\",\n    yopf: \"𝕪\",\n    yscr: \"𝓎\",\n    yucy: \"ю\",\n    yum: \"ÿ\",\n    yuml: \"ÿ\",\n    zacute: \"ź\",\n    zcaron: \"ž\",\n    zcy: \"з\",\n    zdot: \"ż\",\n    zeetrf: \"ℨ\",\n    zeta: \"ζ\",\n    zfr: \"𝔷\",\n    zhcy: \"ж\",\n    zigrarr: \"⇝\",\n    zopf: \"𝕫\",\n    zscr: \"𝓏\",\n    zwj: \"‍\",\n    zwnj: \"‌\",\n    Map: \"⤅\",\n    in: \"∈\"\n  },\n      m = Object.freeze({\n    AEli: \"Æ\",\n    AElig: \"Æ\",\n    AM: \"&\",\n    AMP: \"&\",\n    Aacut: \"Á\",\n    Aacute: \"Á\",\n    Abreve: \"Ă\",\n    Acir: \"Â\",\n    Acirc: \"Â\",\n    Acy: \"А\",\n    Afr: \"𝔄\",\n    Agrav: \"À\",\n    Agrave: \"À\",\n    Alpha: \"Α\",\n    Amacr: \"Ā\",\n    And: \"⩓\",\n    Aogon: \"Ą\",\n    Aopf: \"𝔸\",\n    ApplyFunction: \"⁡\",\n    Arin: \"Å\",\n    Aring: \"Å\",\n    Ascr: \"𝒜\",\n    Assign: \"≔\",\n    Atild: \"Ã\",\n    Atilde: \"Ã\",\n    Aum: \"Ä\",\n    Auml: \"Ä\",\n    Backslash: \"∖\",\n    Barv: \"⫧\",\n    Barwed: \"⌆\",\n    Bcy: \"Б\",\n    Because: \"∵\",\n    Bernoullis: \"ℬ\",\n    Beta: \"Β\",\n    Bfr: \"𝔅\",\n    Bopf: \"𝔹\",\n    Breve: \"˘\",\n    Bscr: \"ℬ\",\n    Bumpeq: \"≎\",\n    CHcy: \"Ч\",\n    COP: \"©\",\n    COPY: \"©\",\n    Cacute: \"Ć\",\n    Cap: \"⋒\",\n    CapitalDifferentialD: \"ⅅ\",\n    Cayleys: \"ℭ\",\n    Ccaron: \"Č\",\n    Ccedi: \"Ç\",\n    Ccedil: \"Ç\",\n    Ccirc: \"Ĉ\",\n    Cconint: \"∰\",\n    Cdot: \"Ċ\",\n    Cedilla: \"¸\",\n    CenterDot: \"·\",\n    Cfr: \"ℭ\",\n    Chi: \"Χ\",\n    CircleDot: \"⊙\",\n    CircleMinus: \"⊖\",\n    CirclePlus: \"⊕\",\n    CircleTimes: \"⊗\",\n    ClockwiseContourIntegral: \"∲\",\n    CloseCurlyDoubleQuote: \"”\",\n    CloseCurlyQuote: \"’\",\n    Colon: \"∷\",\n    Colone: \"⩴\",\n    Congruent: \"≡\",\n    Conint: \"∯\",\n    ContourIntegral: \"∮\",\n    Copf: \"ℂ\",\n    Coproduct: \"∐\",\n    CounterClockwiseContourIntegral: \"∳\",\n    Cross: \"⨯\",\n    Cscr: \"𝒞\",\n    Cup: \"⋓\",\n    CupCap: \"≍\",\n    DD: \"ⅅ\",\n    DDotrahd: \"⤑\",\n    DJcy: \"Ђ\",\n    DScy: \"Ѕ\",\n    DZcy: \"Џ\",\n    Dagger: \"‡\",\n    Darr: \"↡\",\n    Dashv: \"⫤\",\n    Dcaron: \"Ď\",\n    Dcy: \"Д\",\n    Del: \"∇\",\n    Delta: \"Δ\",\n    Dfr: \"𝔇\",\n    DiacriticalAcute: \"´\",\n    DiacriticalDot: \"˙\",\n    DiacriticalDoubleAcute: \"˝\",\n    DiacriticalGrave: \"`\",\n    DiacriticalTilde: \"˜\",\n    Diamond: \"⋄\",\n    DifferentialD: \"ⅆ\",\n    Dopf: \"𝔻\",\n    Dot: \"¨\",\n    DotDot: \"⃜\",\n    DotEqual: \"≐\",\n    DoubleContourIntegral: \"∯\",\n    DoubleDot: \"¨\",\n    DoubleDownArrow: \"⇓\",\n    DoubleLeftArrow: \"⇐\",\n    DoubleLeftRightArrow: \"⇔\",\n    DoubleLeftTee: \"⫤\",\n    DoubleLongLeftArrow: \"⟸\",\n    DoubleLongLeftRightArrow: \"⟺\",\n    DoubleLongRightArrow: \"⟹\",\n    DoubleRightArrow: \"⇒\",\n    DoubleRightTee: \"⊨\",\n    DoubleUpArrow: \"⇑\",\n    DoubleUpDownArrow: \"⇕\",\n    DoubleVerticalBar: \"∥\",\n    DownArrow: \"↓\",\n    DownArrowBar: \"⤓\",\n    DownArrowUpArrow: \"⇵\",\n    DownBreve: \"̑\",\n    DownLeftRightVector: \"⥐\",\n    DownLeftTeeVector: \"⥞\",\n    DownLeftVector: \"↽\",\n    DownLeftVectorBar: \"⥖\",\n    DownRightTeeVector: \"⥟\",\n    DownRightVector: \"⇁\",\n    DownRightVectorBar: \"⥗\",\n    DownTee: \"⊤\",\n    DownTeeArrow: \"↧\",\n    Downarrow: \"⇓\",\n    Dscr: \"𝒟\",\n    Dstrok: \"Đ\",\n    ENG: \"Ŋ\",\n    ET: \"Ð\",\n    ETH: \"Ð\",\n    Eacut: \"É\",\n    Eacute: \"É\",\n    Ecaron: \"Ě\",\n    Ecir: \"Ê\",\n    Ecirc: \"Ê\",\n    Ecy: \"Э\",\n    Edot: \"Ė\",\n    Efr: \"𝔈\",\n    Egrav: \"È\",\n    Egrave: \"È\",\n    Element: \"∈\",\n    Emacr: \"Ē\",\n    EmptySmallSquare: \"◻\",\n    EmptyVerySmallSquare: \"▫\",\n    Eogon: \"Ę\",\n    Eopf: \"𝔼\",\n    Epsilon: \"Ε\",\n    Equal: \"⩵\",\n    EqualTilde: \"≂\",\n    Equilibrium: \"⇌\",\n    Escr: \"ℰ\",\n    Esim: \"⩳\",\n    Eta: \"Η\",\n    Eum: \"Ë\",\n    Euml: \"Ë\",\n    Exists: \"∃\",\n    ExponentialE: \"ⅇ\",\n    Fcy: \"Ф\",\n    Ffr: \"𝔉\",\n    FilledSmallSquare: \"◼\",\n    FilledVerySmallSquare: \"▪\",\n    Fopf: \"𝔽\",\n    ForAll: \"∀\",\n    Fouriertrf: \"ℱ\",\n    Fscr: \"ℱ\",\n    GJcy: \"Ѓ\",\n    G: \">\",\n    GT: \">\",\n    Gamma: \"Γ\",\n    Gammad: \"Ϝ\",\n    Gbreve: \"Ğ\",\n    Gcedil: \"Ģ\",\n    Gcirc: \"Ĝ\",\n    Gcy: \"Г\",\n    Gdot: \"Ġ\",\n    Gfr: \"𝔊\",\n    Gg: \"⋙\",\n    Gopf: \"𝔾\",\n    GreaterEqual: \"≥\",\n    GreaterEqualLess: \"⋛\",\n    GreaterFullEqual: \"≧\",\n    GreaterGreater: \"⪢\",\n    GreaterLess: \"≷\",\n    GreaterSlantEqual: \"⩾\",\n    GreaterTilde: \"≳\",\n    Gscr: \"𝒢\",\n    Gt: \"≫\",\n    HARDcy: \"Ъ\",\n    Hacek: \"ˇ\",\n    Hat: \"^\",\n    Hcirc: \"Ĥ\",\n    Hfr: \"ℌ\",\n    HilbertSpace: \"ℋ\",\n    Hopf: \"ℍ\",\n    HorizontalLine: \"─\",\n    Hscr: \"ℋ\",\n    Hstrok: \"Ħ\",\n    HumpDownHump: \"≎\",\n    HumpEqual: \"≏\",\n    IEcy: \"Е\",\n    IJlig: \"Ĳ\",\n    IOcy: \"Ё\",\n    Iacut: \"Í\",\n    Iacute: \"Í\",\n    Icir: \"Î\",\n    Icirc: \"Î\",\n    Icy: \"И\",\n    Idot: \"İ\",\n    Ifr: \"ℑ\",\n    Igrav: \"Ì\",\n    Igrave: \"Ì\",\n    Im: \"ℑ\",\n    Imacr: \"Ī\",\n    ImaginaryI: \"ⅈ\",\n    Implies: \"⇒\",\n    Int: \"∬\",\n    Integral: \"∫\",\n    Intersection: \"⋂\",\n    InvisibleComma: \"⁣\",\n    InvisibleTimes: \"⁢\",\n    Iogon: \"Į\",\n    Iopf: \"𝕀\",\n    Iota: \"Ι\",\n    Iscr: \"ℐ\",\n    Itilde: \"Ĩ\",\n    Iukcy: \"І\",\n    Ium: \"Ï\",\n    Iuml: \"Ï\",\n    Jcirc: \"Ĵ\",\n    Jcy: \"Й\",\n    Jfr: \"𝔍\",\n    Jopf: \"𝕁\",\n    Jscr: \"𝒥\",\n    Jsercy: \"Ј\",\n    Jukcy: \"Є\",\n    KHcy: \"Х\",\n    KJcy: \"Ќ\",\n    Kappa: \"Κ\",\n    Kcedil: \"Ķ\",\n    Kcy: \"К\",\n    Kfr: \"𝔎\",\n    Kopf: \"𝕂\",\n    Kscr: \"𝒦\",\n    LJcy: \"Љ\",\n    L: \"<\",\n    LT: \"<\",\n    Lacute: \"Ĺ\",\n    Lambda: \"Λ\",\n    Lang: \"⟪\",\n    Laplacetrf: \"ℒ\",\n    Larr: \"↞\",\n    Lcaron: \"Ľ\",\n    Lcedil: \"Ļ\",\n    Lcy: \"Л\",\n    LeftAngleBracket: \"⟨\",\n    LeftArrow: \"←\",\n    LeftArrowBar: \"⇤\",\n    LeftArrowRightArrow: \"⇆\",\n    LeftCeiling: \"⌈\",\n    LeftDoubleBracket: \"⟦\",\n    LeftDownTeeVector: \"⥡\",\n    LeftDownVector: \"⇃\",\n    LeftDownVectorBar: \"⥙\",\n    LeftFloor: \"⌊\",\n    LeftRightArrow: \"↔\",\n    LeftRightVector: \"⥎\",\n    LeftTee: \"⊣\",\n    LeftTeeArrow: \"↤\",\n    LeftTeeVector: \"⥚\",\n    LeftTriangle: \"⊲\",\n    LeftTriangleBar: \"⧏\",\n    LeftTriangleEqual: \"⊴\",\n    LeftUpDownVector: \"⥑\",\n    LeftUpTeeVector: \"⥠\",\n    LeftUpVector: \"↿\",\n    LeftUpVectorBar: \"⥘\",\n    LeftVector: \"↼\",\n    LeftVectorBar: \"⥒\",\n    Leftarrow: \"⇐\",\n    Leftrightarrow: \"⇔\",\n    LessEqualGreater: \"⋚\",\n    LessFullEqual: \"≦\",\n    LessGreater: \"≶\",\n    LessLess: \"⪡\",\n    LessSlantEqual: \"⩽\",\n    LessTilde: \"≲\",\n    Lfr: \"𝔏\",\n    Ll: \"⋘\",\n    Lleftarrow: \"⇚\",\n    Lmidot: \"Ŀ\",\n    LongLeftArrow: \"⟵\",\n    LongLeftRightArrow: \"⟷\",\n    LongRightArrow: \"⟶\",\n    Longleftarrow: \"⟸\",\n    Longleftrightarrow: \"⟺\",\n    Longrightarrow: \"⟹\",\n    Lopf: \"𝕃\",\n    LowerLeftArrow: \"↙\",\n    LowerRightArrow: \"↘\",\n    Lscr: \"ℒ\",\n    Lsh: \"↰\",\n    Lstrok: \"Ł\",\n    Lt: \"≪\",\n    Mcy: \"М\",\n    MediumSpace: \" \",\n    Mellintrf: \"ℳ\",\n    Mfr: \"𝔐\",\n    MinusPlus: \"∓\",\n    Mopf: \"𝕄\",\n    Mscr: \"ℳ\",\n    Mu: \"Μ\",\n    NJcy: \"Њ\",\n    Nacute: \"Ń\",\n    Ncaron: \"Ň\",\n    Ncedil: \"Ņ\",\n    Ncy: \"Н\",\n    NegativeMediumSpace: \"​\",\n    NegativeThickSpace: \"​\",\n    NegativeThinSpace: \"​\",\n    NegativeVeryThinSpace: \"​\",\n    NestedGreaterGreater: \"≫\",\n    NestedLessLess: \"≪\",\n    NewLine: \"\\n\",\n    Nfr: \"𝔑\",\n    NoBreak: \"⁠\",\n    NonBreakingSpace: \" \",\n    Nopf: \"ℕ\",\n    Not: \"⫬\",\n    NotCongruent: \"≢\",\n    NotCupCap: \"≭\",\n    NotDoubleVerticalBar: \"∦\",\n    NotElement: \"∉\",\n    NotEqual: \"≠\",\n    NotEqualTilde: \"≂̸\",\n    NotExists: \"∄\",\n    NotGreater: \"≯\",\n    NotGreaterEqual: \"≱\",\n    NotGreaterFullEqual: \"≧̸\",\n    NotGreaterGreater: \"≫̸\",\n    NotGreaterLess: \"≹\",\n    NotGreaterSlantEqual: \"⩾̸\",\n    NotGreaterTilde: \"≵\",\n    NotHumpDownHump: \"≎̸\",\n    NotHumpEqual: \"≏̸\",\n    NotLeftTriangle: \"⋪\",\n    NotLeftTriangleBar: \"⧏̸\",\n    NotLeftTriangleEqual: \"⋬\",\n    NotLess: \"≮\",\n    NotLessEqual: \"≰\",\n    NotLessGreater: \"≸\",\n    NotLessLess: \"≪̸\",\n    NotLessSlantEqual: \"⩽̸\",\n    NotLessTilde: \"≴\",\n    NotNestedGreaterGreater: \"⪢̸\",\n    NotNestedLessLess: \"⪡̸\",\n    NotPrecedes: \"⊀\",\n    NotPrecedesEqual: \"⪯̸\",\n    NotPrecedesSlantEqual: \"⋠\",\n    NotReverseElement: \"∌\",\n    NotRightTriangle: \"⋫\",\n    NotRightTriangleBar: \"⧐̸\",\n    NotRightTriangleEqual: \"⋭\",\n    NotSquareSubset: \"⊏̸\",\n    NotSquareSubsetEqual: \"⋢\",\n    NotSquareSuperset: \"⊐̸\",\n    NotSquareSupersetEqual: \"⋣\",\n    NotSubset: \"⊂⃒\",\n    NotSubsetEqual: \"⊈\",\n    NotSucceeds: \"⊁\",\n    NotSucceedsEqual: \"⪰̸\",\n    NotSucceedsSlantEqual: \"⋡\",\n    NotSucceedsTilde: \"≿̸\",\n    NotSuperset: \"⊃⃒\",\n    NotSupersetEqual: \"⊉\",\n    NotTilde: \"≁\",\n    NotTildeEqual: \"≄\",\n    NotTildeFullEqual: \"≇\",\n    NotTildeTilde: \"≉\",\n    NotVerticalBar: \"∤\",\n    Nscr: \"𝒩\",\n    Ntild: \"Ñ\",\n    Ntilde: \"Ñ\",\n    Nu: \"Ν\",\n    OElig: \"Œ\",\n    Oacut: \"Ó\",\n    Oacute: \"Ó\",\n    Ocir: \"Ô\",\n    Ocirc: \"Ô\",\n    Ocy: \"О\",\n    Odblac: \"Ő\",\n    Ofr: \"𝔒\",\n    Ograv: \"Ò\",\n    Ograve: \"Ò\",\n    Omacr: \"Ō\",\n    Omega: \"Ω\",\n    Omicron: \"Ο\",\n    Oopf: \"𝕆\",\n    OpenCurlyDoubleQuote: \"“\",\n    OpenCurlyQuote: \"‘\",\n    Or: \"⩔\",\n    Oscr: \"𝒪\",\n    Oslas: \"Ø\",\n    Oslash: \"Ø\",\n    Otild: \"Õ\",\n    Otilde: \"Õ\",\n    Otimes: \"⨷\",\n    Oum: \"Ö\",\n    Ouml: \"Ö\",\n    OverBar: \"‾\",\n    OverBrace: \"⏞\",\n    OverBracket: \"⎴\",\n    OverParenthesis: \"⏜\",\n    PartialD: \"∂\",\n    Pcy: \"П\",\n    Pfr: \"𝔓\",\n    Phi: \"Φ\",\n    Pi: \"Π\",\n    PlusMinus: \"±\",\n    Poincareplane: \"ℌ\",\n    Popf: \"ℙ\",\n    Pr: \"⪻\",\n    Precedes: \"≺\",\n    PrecedesEqual: \"⪯\",\n    PrecedesSlantEqual: \"≼\",\n    PrecedesTilde: \"≾\",\n    Prime: \"″\",\n    Product: \"∏\",\n    Proportion: \"∷\",\n    Proportional: \"∝\",\n    Pscr: \"𝒫\",\n    Psi: \"Ψ\",\n    QUO: '\"',\n    QUOT: '\"',\n    Qfr: \"𝔔\",\n    Qopf: \"ℚ\",\n    Qscr: \"𝒬\",\n    RBarr: \"⤐\",\n    RE: \"®\",\n    REG: \"®\",\n    Racute: \"Ŕ\",\n    Rang: \"⟫\",\n    Rarr: \"↠\",\n    Rarrtl: \"⤖\",\n    Rcaron: \"Ř\",\n    Rcedil: \"Ŗ\",\n    Rcy: \"Р\",\n    Re: \"ℜ\",\n    ReverseElement: \"∋\",\n    ReverseEquilibrium: \"⇋\",\n    ReverseUpEquilibrium: \"⥯\",\n    Rfr: \"ℜ\",\n    Rho: \"Ρ\",\n    RightAngleBracket: \"⟩\",\n    RightArrow: \"→\",\n    RightArrowBar: \"⇥\",\n    RightArrowLeftArrow: \"⇄\",\n    RightCeiling: \"⌉\",\n    RightDoubleBracket: \"⟧\",\n    RightDownTeeVector: \"⥝\",\n    RightDownVector: \"⇂\",\n    RightDownVectorBar: \"⥕\",\n    RightFloor: \"⌋\",\n    RightTee: \"⊢\",\n    RightTeeArrow: \"↦\",\n    RightTeeVector: \"⥛\",\n    RightTriangle: \"⊳\",\n    RightTriangleBar: \"⧐\",\n    RightTriangleEqual: \"⊵\",\n    RightUpDownVector: \"⥏\",\n    RightUpTeeVector: \"⥜\",\n    RightUpVector: \"↾\",\n    RightUpVectorBar: \"⥔\",\n    RightVector: \"⇀\",\n    RightVectorBar: \"⥓\",\n    Rightarrow: \"⇒\",\n    Ropf: \"ℝ\",\n    RoundImplies: \"⥰\",\n    Rrightarrow: \"⇛\",\n    Rscr: \"ℛ\",\n    Rsh: \"↱\",\n    RuleDelayed: \"⧴\",\n    SHCHcy: \"Щ\",\n    SHcy: \"Ш\",\n    SOFTcy: \"Ь\",\n    Sacute: \"Ś\",\n    Sc: \"⪼\",\n    Scaron: \"Š\",\n    Scedil: \"Ş\",\n    Scirc: \"Ŝ\",\n    Scy: \"С\",\n    Sfr: \"𝔖\",\n    ShortDownArrow: \"↓\",\n    ShortLeftArrow: \"←\",\n    ShortRightArrow: \"→\",\n    ShortUpArrow: \"↑\",\n    Sigma: \"Σ\",\n    SmallCircle: \"∘\",\n    Sopf: \"𝕊\",\n    Sqrt: \"√\",\n    Square: \"□\",\n    SquareIntersection: \"⊓\",\n    SquareSubset: \"⊏\",\n    SquareSubsetEqual: \"⊑\",\n    SquareSuperset: \"⊐\",\n    SquareSupersetEqual: \"⊒\",\n    SquareUnion: \"⊔\",\n    Sscr: \"𝒮\",\n    Star: \"⋆\",\n    Sub: \"⋐\",\n    Subset: \"⋐\",\n    SubsetEqual: \"⊆\",\n    Succeeds: \"≻\",\n    SucceedsEqual: \"⪰\",\n    SucceedsSlantEqual: \"≽\",\n    SucceedsTilde: \"≿\",\n    SuchThat: \"∋\",\n    Sum: \"∑\",\n    Sup: \"⋑\",\n    Superset: \"⊃\",\n    SupersetEqual: \"⊇\",\n    Supset: \"⋑\",\n    THOR: \"Þ\",\n    THORN: \"Þ\",\n    TRADE: \"™\",\n    TSHcy: \"Ћ\",\n    TScy: \"Ц\",\n    Tab: \"\\t\",\n    Tau: \"Τ\",\n    Tcaron: \"Ť\",\n    Tcedil: \"Ţ\",\n    Tcy: \"Т\",\n    Tfr: \"𝔗\",\n    Therefore: \"∴\",\n    Theta: \"Θ\",\n    ThickSpace: \"  \",\n    ThinSpace: \" \",\n    Tilde: \"∼\",\n    TildeEqual: \"≃\",\n    TildeFullEqual: \"≅\",\n    TildeTilde: \"≈\",\n    Topf: \"𝕋\",\n    TripleDot: \"⃛\",\n    Tscr: \"𝒯\",\n    Tstrok: \"Ŧ\",\n    Uacut: \"Ú\",\n    Uacute: \"Ú\",\n    Uarr: \"↟\",\n    Uarrocir: \"⥉\",\n    Ubrcy: \"Ў\",\n    Ubreve: \"Ŭ\",\n    Ucir: \"Û\",\n    Ucirc: \"Û\",\n    Ucy: \"У\",\n    Udblac: \"Ű\",\n    Ufr: \"𝔘\",\n    Ugrav: \"Ù\",\n    Ugrave: \"Ù\",\n    Umacr: \"Ū\",\n    UnderBar: \"_\",\n    UnderBrace: \"⏟\",\n    UnderBracket: \"⎵\",\n    UnderParenthesis: \"⏝\",\n    Union: \"⋃\",\n    UnionPlus: \"⊎\",\n    Uogon: \"Ų\",\n    Uopf: \"𝕌\",\n    UpArrow: \"↑\",\n    UpArrowBar: \"⤒\",\n    UpArrowDownArrow: \"⇅\",\n    UpDownArrow: \"↕\",\n    UpEquilibrium: \"⥮\",\n    UpTee: \"⊥\",\n    UpTeeArrow: \"↥\",\n    Uparrow: \"⇑\",\n    Updownarrow: \"⇕\",\n    UpperLeftArrow: \"↖\",\n    UpperRightArrow: \"↗\",\n    Upsi: \"ϒ\",\n    Upsilon: \"Υ\",\n    Uring: \"Ů\",\n    Uscr: \"𝒰\",\n    Utilde: \"Ũ\",\n    Uum: \"Ü\",\n    Uuml: \"Ü\",\n    VDash: \"⊫\",\n    Vbar: \"⫫\",\n    Vcy: \"В\",\n    Vdash: \"⊩\",\n    Vdashl: \"⫦\",\n    Vee: \"⋁\",\n    Verbar: \"‖\",\n    Vert: \"‖\",\n    VerticalBar: \"∣\",\n    VerticalLine: \"|\",\n    VerticalSeparator: \"❘\",\n    VerticalTilde: \"≀\",\n    VeryThinSpace: \" \",\n    Vfr: \"𝔙\",\n    Vopf: \"𝕍\",\n    Vscr: \"𝒱\",\n    Vvdash: \"⊪\",\n    Wcirc: \"Ŵ\",\n    Wedge: \"⋀\",\n    Wfr: \"𝔚\",\n    Wopf: \"𝕎\",\n    Wscr: \"𝒲\",\n    Xfr: \"𝔛\",\n    Xi: \"Ξ\",\n    Xopf: \"𝕏\",\n    Xscr: \"𝒳\",\n    YAcy: \"Я\",\n    YIcy: \"Ї\",\n    YUcy: \"Ю\",\n    Yacut: \"Ý\",\n    Yacute: \"Ý\",\n    Ycirc: \"Ŷ\",\n    Ycy: \"Ы\",\n    Yfr: \"𝔜\",\n    Yopf: \"𝕐\",\n    Yscr: \"𝒴\",\n    Yuml: \"Ÿ\",\n    ZHcy: \"Ж\",\n    Zacute: \"Ź\",\n    Zcaron: \"Ž\",\n    Zcy: \"З\",\n    Zdot: \"Ż\",\n    ZeroWidthSpace: \"​\",\n    Zeta: \"Ζ\",\n    Zfr: \"ℨ\",\n    Zopf: \"ℤ\",\n    Zscr: \"𝒵\",\n    aacut: \"á\",\n    aacute: \"á\",\n    abreve: \"ă\",\n    ac: \"∾\",\n    acE: \"∾̳\",\n    acd: \"∿\",\n    acir: \"â\",\n    acirc: \"â\",\n    acut: \"´\",\n    acute: \"´\",\n    acy: \"а\",\n    aeli: \"æ\",\n    aelig: \"æ\",\n    af: \"⁡\",\n    afr: \"𝔞\",\n    agrav: \"à\",\n    agrave: \"à\",\n    alefsym: \"ℵ\",\n    aleph: \"ℵ\",\n    alpha: \"α\",\n    amacr: \"ā\",\n    amalg: \"⨿\",\n    am: \"&\",\n    amp: \"&\",\n    and: \"∧\",\n    andand: \"⩕\",\n    andd: \"⩜\",\n    andslope: \"⩘\",\n    andv: \"⩚\",\n    ang: \"∠\",\n    ange: \"⦤\",\n    angle: \"∠\",\n    angmsd: \"∡\",\n    angmsdaa: \"⦨\",\n    angmsdab: \"⦩\",\n    angmsdac: \"⦪\",\n    angmsdad: \"⦫\",\n    angmsdae: \"⦬\",\n    angmsdaf: \"⦭\",\n    angmsdag: \"⦮\",\n    angmsdah: \"⦯\",\n    angrt: \"∟\",\n    angrtvb: \"⊾\",\n    angrtvbd: \"⦝\",\n    angsph: \"∢\",\n    angst: \"Å\",\n    angzarr: \"⍼\",\n    aogon: \"ą\",\n    aopf: \"𝕒\",\n    ap: \"≈\",\n    apE: \"⩰\",\n    apacir: \"⩯\",\n    ape: \"≊\",\n    apid: \"≋\",\n    apos: \"'\",\n    approx: \"≈\",\n    approxeq: \"≊\",\n    arin: \"å\",\n    aring: \"å\",\n    ascr: \"𝒶\",\n    ast: \"*\",\n    asymp: \"≈\",\n    asympeq: \"≍\",\n    atild: \"ã\",\n    atilde: \"ã\",\n    aum: \"ä\",\n    auml: \"ä\",\n    awconint: \"∳\",\n    awint: \"⨑\",\n    bNot: \"⫭\",\n    backcong: \"≌\",\n    backepsilon: \"϶\",\n    backprime: \"‵\",\n    backsim: \"∽\",\n    backsimeq: \"⋍\",\n    barvee: \"⊽\",\n    barwed: \"⌅\",\n    barwedge: \"⌅\",\n    bbrk: \"⎵\",\n    bbrktbrk: \"⎶\",\n    bcong: \"≌\",\n    bcy: \"б\",\n    bdquo: \"„\",\n    becaus: \"∵\",\n    because: \"∵\",\n    bemptyv: \"⦰\",\n    bepsi: \"϶\",\n    bernou: \"ℬ\",\n    beta: \"β\",\n    beth: \"ℶ\",\n    between: \"≬\",\n    bfr: \"𝔟\",\n    bigcap: \"⋂\",\n    bigcirc: \"◯\",\n    bigcup: \"⋃\",\n    bigodot: \"⨀\",\n    bigoplus: \"⨁\",\n    bigotimes: \"⨂\",\n    bigsqcup: \"⨆\",\n    bigstar: \"★\",\n    bigtriangledown: \"▽\",\n    bigtriangleup: \"△\",\n    biguplus: \"⨄\",\n    bigvee: \"⋁\",\n    bigwedge: \"⋀\",\n    bkarow: \"⤍\",\n    blacklozenge: \"⧫\",\n    blacksquare: \"▪\",\n    blacktriangle: \"▴\",\n    blacktriangledown: \"▾\",\n    blacktriangleleft: \"◂\",\n    blacktriangleright: \"▸\",\n    blank: \"␣\",\n    blk12: \"▒\",\n    blk14: \"░\",\n    blk34: \"▓\",\n    block: \"█\",\n    bne: \"=⃥\",\n    bnequiv: \"≡⃥\",\n    bnot: \"⌐\",\n    bopf: \"𝕓\",\n    bot: \"⊥\",\n    bottom: \"⊥\",\n    bowtie: \"⋈\",\n    boxDL: \"╗\",\n    boxDR: \"╔\",\n    boxDl: \"╖\",\n    boxDr: \"╓\",\n    boxH: \"═\",\n    boxHD: \"╦\",\n    boxHU: \"╩\",\n    boxHd: \"╤\",\n    boxHu: \"╧\",\n    boxUL: \"╝\",\n    boxUR: \"╚\",\n    boxUl: \"╜\",\n    boxUr: \"╙\",\n    boxV: \"║\",\n    boxVH: \"╬\",\n    boxVL: \"╣\",\n    boxVR: \"╠\",\n    boxVh: \"╫\",\n    boxVl: \"╢\",\n    boxVr: \"╟\",\n    boxbox: \"⧉\",\n    boxdL: \"╕\",\n    boxdR: \"╒\",\n    boxdl: \"┐\",\n    boxdr: \"┌\",\n    boxh: \"─\",\n    boxhD: \"╥\",\n    boxhU: \"╨\",\n    boxhd: \"┬\",\n    boxhu: \"┴\",\n    boxminus: \"⊟\",\n    boxplus: \"⊞\",\n    boxtimes: \"⊠\",\n    boxuL: \"╛\",\n    boxuR: \"╘\",\n    boxul: \"┘\",\n    boxur: \"└\",\n    boxv: \"│\",\n    boxvH: \"╪\",\n    boxvL: \"╡\",\n    boxvR: \"╞\",\n    boxvh: \"┼\",\n    boxvl: \"┤\",\n    boxvr: \"├\",\n    bprime: \"‵\",\n    breve: \"˘\",\n    brvba: \"¦\",\n    brvbar: \"¦\",\n    bscr: \"𝒷\",\n    bsemi: \"⁏\",\n    bsim: \"∽\",\n    bsime: \"⋍\",\n    bsol: \"\\\\\",\n    bsolb: \"⧅\",\n    bsolhsub: \"⟈\",\n    bull: \"•\",\n    bullet: \"•\",\n    bump: \"≎\",\n    bumpE: \"⪮\",\n    bumpe: \"≏\",\n    bumpeq: \"≏\",\n    cacute: \"ć\",\n    cap: \"∩\",\n    capand: \"⩄\",\n    capbrcup: \"⩉\",\n    capcap: \"⩋\",\n    capcup: \"⩇\",\n    capdot: \"⩀\",\n    caps: \"∩︀\",\n    caret: \"⁁\",\n    caron: \"ˇ\",\n    ccaps: \"⩍\",\n    ccaron: \"č\",\n    ccedi: \"ç\",\n    ccedil: \"ç\",\n    ccirc: \"ĉ\",\n    ccups: \"⩌\",\n    ccupssm: \"⩐\",\n    cdot: \"ċ\",\n    cedi: \"¸\",\n    cedil: \"¸\",\n    cemptyv: \"⦲\",\n    cen: \"¢\",\n    cent: \"¢\",\n    centerdot: \"·\",\n    cfr: \"𝔠\",\n    chcy: \"ч\",\n    check: \"✓\",\n    checkmark: \"✓\",\n    chi: \"χ\",\n    cir: \"○\",\n    cirE: \"⧃\",\n    circ: \"ˆ\",\n    circeq: \"≗\",\n    circlearrowleft: \"↺\",\n    circlearrowright: \"↻\",\n    circledR: \"®\",\n    circledS: \"Ⓢ\",\n    circledast: \"⊛\",\n    circledcirc: \"⊚\",\n    circleddash: \"⊝\",\n    cire: \"≗\",\n    cirfnint: \"⨐\",\n    cirmid: \"⫯\",\n    cirscir: \"⧂\",\n    clubs: \"♣\",\n    clubsuit: \"♣\",\n    colon: \":\",\n    colone: \"≔\",\n    coloneq: \"≔\",\n    comma: \",\",\n    commat: \"@\",\n    comp: \"∁\",\n    compfn: \"∘\",\n    complement: \"∁\",\n    complexes: \"ℂ\",\n    cong: \"≅\",\n    congdot: \"⩭\",\n    conint: \"∮\",\n    copf: \"𝕔\",\n    coprod: \"∐\",\n    cop: \"©\",\n    copy: \"©\",\n    copysr: \"℗\",\n    crarr: \"↵\",\n    cross: \"✗\",\n    cscr: \"𝒸\",\n    csub: \"⫏\",\n    csube: \"⫑\",\n    csup: \"⫐\",\n    csupe: \"⫒\",\n    ctdot: \"⋯\",\n    cudarrl: \"⤸\",\n    cudarrr: \"⤵\",\n    cuepr: \"⋞\",\n    cuesc: \"⋟\",\n    cularr: \"↶\",\n    cularrp: \"⤽\",\n    cup: \"∪\",\n    cupbrcap: \"⩈\",\n    cupcap: \"⩆\",\n    cupcup: \"⩊\",\n    cupdot: \"⊍\",\n    cupor: \"⩅\",\n    cups: \"∪︀\",\n    curarr: \"↷\",\n    curarrm: \"⤼\",\n    curlyeqprec: \"⋞\",\n    curlyeqsucc: \"⋟\",\n    curlyvee: \"⋎\",\n    curlywedge: \"⋏\",\n    curre: \"¤\",\n    curren: \"¤\",\n    curvearrowleft: \"↶\",\n    curvearrowright: \"↷\",\n    cuvee: \"⋎\",\n    cuwed: \"⋏\",\n    cwconint: \"∲\",\n    cwint: \"∱\",\n    cylcty: \"⌭\",\n    dArr: \"⇓\",\n    dHar: \"⥥\",\n    dagger: \"†\",\n    daleth: \"ℸ\",\n    darr: \"↓\",\n    dash: \"‐\",\n    dashv: \"⊣\",\n    dbkarow: \"⤏\",\n    dblac: \"˝\",\n    dcaron: \"ď\",\n    dcy: \"д\",\n    dd: \"ⅆ\",\n    ddagger: \"‡\",\n    ddarr: \"⇊\",\n    ddotseq: \"⩷\",\n    de: \"°\",\n    deg: \"°\",\n    delta: \"δ\",\n    demptyv: \"⦱\",\n    dfisht: \"⥿\",\n    dfr: \"𝔡\",\n    dharl: \"⇃\",\n    dharr: \"⇂\",\n    diam: \"⋄\",\n    diamond: \"⋄\",\n    diamondsuit: \"♦\",\n    diams: \"♦\",\n    die: \"¨\",\n    digamma: \"ϝ\",\n    disin: \"⋲\",\n    div: \"÷\",\n    divid: \"÷\",\n    divide: \"÷\",\n    divideontimes: \"⋇\",\n    divonx: \"⋇\",\n    djcy: \"ђ\",\n    dlcorn: \"⌞\",\n    dlcrop: \"⌍\",\n    dollar: \"$\",\n    dopf: \"𝕕\",\n    dot: \"˙\",\n    doteq: \"≐\",\n    doteqdot: \"≑\",\n    dotminus: \"∸\",\n    dotplus: \"∔\",\n    dotsquare: \"⊡\",\n    doublebarwedge: \"⌆\",\n    downarrow: \"↓\",\n    downdownarrows: \"⇊\",\n    downharpoonleft: \"⇃\",\n    downharpoonright: \"⇂\",\n    drbkarow: \"⤐\",\n    drcorn: \"⌟\",\n    drcrop: \"⌌\",\n    dscr: \"𝒹\",\n    dscy: \"ѕ\",\n    dsol: \"⧶\",\n    dstrok: \"đ\",\n    dtdot: \"⋱\",\n    dtri: \"▿\",\n    dtrif: \"▾\",\n    duarr: \"⇵\",\n    duhar: \"⥯\",\n    dwangle: \"⦦\",\n    dzcy: \"џ\",\n    dzigrarr: \"⟿\",\n    eDDot: \"⩷\",\n    eDot: \"≑\",\n    eacut: \"é\",\n    eacute: \"é\",\n    easter: \"⩮\",\n    ecaron: \"ě\",\n    ecir: \"ê\",\n    ecirc: \"ê\",\n    ecolon: \"≕\",\n    ecy: \"э\",\n    edot: \"ė\",\n    ee: \"ⅇ\",\n    efDot: \"≒\",\n    efr: \"𝔢\",\n    eg: \"⪚\",\n    egrav: \"è\",\n    egrave: \"è\",\n    egs: \"⪖\",\n    egsdot: \"⪘\",\n    el: \"⪙\",\n    elinters: \"⏧\",\n    ell: \"ℓ\",\n    els: \"⪕\",\n    elsdot: \"⪗\",\n    emacr: \"ē\",\n    empty: \"∅\",\n    emptyset: \"∅\",\n    emptyv: \"∅\",\n    emsp13: \" \",\n    emsp14: \" \",\n    emsp: \" \",\n    eng: \"ŋ\",\n    ensp: \" \",\n    eogon: \"ę\",\n    eopf: \"𝕖\",\n    epar: \"⋕\",\n    eparsl: \"⧣\",\n    eplus: \"⩱\",\n    epsi: \"ε\",\n    epsilon: \"ε\",\n    epsiv: \"ϵ\",\n    eqcirc: \"≖\",\n    eqcolon: \"≕\",\n    eqsim: \"≂\",\n    eqslantgtr: \"⪖\",\n    eqslantless: \"⪕\",\n    equals: \"=\",\n    equest: \"≟\",\n    equiv: \"≡\",\n    equivDD: \"⩸\",\n    eqvparsl: \"⧥\",\n    erDot: \"≓\",\n    erarr: \"⥱\",\n    escr: \"ℯ\",\n    esdot: \"≐\",\n    esim: \"≂\",\n    eta: \"η\",\n    et: \"ð\",\n    eth: \"ð\",\n    eum: \"ë\",\n    euml: \"ë\",\n    euro: \"€\",\n    excl: \"!\",\n    exist: \"∃\",\n    expectation: \"ℰ\",\n    exponentiale: \"ⅇ\",\n    fallingdotseq: \"≒\",\n    fcy: \"ф\",\n    female: \"♀\",\n    ffilig: \"ﬃ\",\n    fflig: \"ﬀ\",\n    ffllig: \"ﬄ\",\n    ffr: \"𝔣\",\n    filig: \"ﬁ\",\n    fjlig: \"fj\",\n    flat: \"♭\",\n    fllig: \"ﬂ\",\n    fltns: \"▱\",\n    fnof: \"ƒ\",\n    fopf: \"𝕗\",\n    forall: \"∀\",\n    fork: \"⋔\",\n    forkv: \"⫙\",\n    fpartint: \"⨍\",\n    frac1: \"¼\",\n    frac12: \"½\",\n    frac13: \"⅓\",\n    frac14: \"¼\",\n    frac15: \"⅕\",\n    frac16: \"⅙\",\n    frac18: \"⅛\",\n    frac23: \"⅔\",\n    frac25: \"⅖\",\n    frac3: \"¾\",\n    frac34: \"¾\",\n    frac35: \"⅗\",\n    frac38: \"⅜\",\n    frac45: \"⅘\",\n    frac56: \"⅚\",\n    frac58: \"⅝\",\n    frac78: \"⅞\",\n    frasl: \"⁄\",\n    frown: \"⌢\",\n    fscr: \"𝒻\",\n    gE: \"≧\",\n    gEl: \"⪌\",\n    gacute: \"ǵ\",\n    gamma: \"γ\",\n    gammad: \"ϝ\",\n    gap: \"⪆\",\n    gbreve: \"ğ\",\n    gcirc: \"ĝ\",\n    gcy: \"г\",\n    gdot: \"ġ\",\n    ge: \"≥\",\n    gel: \"⋛\",\n    geq: \"≥\",\n    geqq: \"≧\",\n    geqslant: \"⩾\",\n    ges: \"⩾\",\n    gescc: \"⪩\",\n    gesdot: \"⪀\",\n    gesdoto: \"⪂\",\n    gesdotol: \"⪄\",\n    gesl: \"⋛︀\",\n    gesles: \"⪔\",\n    gfr: \"𝔤\",\n    gg: \"≫\",\n    ggg: \"⋙\",\n    gimel: \"ℷ\",\n    gjcy: \"ѓ\",\n    gl: \"≷\",\n    glE: \"⪒\",\n    gla: \"⪥\",\n    glj: \"⪤\",\n    gnE: \"≩\",\n    gnap: \"⪊\",\n    gnapprox: \"⪊\",\n    gne: \"⪈\",\n    gneq: \"⪈\",\n    gneqq: \"≩\",\n    gnsim: \"⋧\",\n    gopf: \"𝕘\",\n    grave: \"`\",\n    gscr: \"ℊ\",\n    gsim: \"≳\",\n    gsime: \"⪎\",\n    gsiml: \"⪐\",\n    g: \">\",\n    gt: \">\",\n    gtcc: \"⪧\",\n    gtcir: \"⩺\",\n    gtdot: \"⋗\",\n    gtlPar: \"⦕\",\n    gtquest: \"⩼\",\n    gtrapprox: \"⪆\",\n    gtrarr: \"⥸\",\n    gtrdot: \"⋗\",\n    gtreqless: \"⋛\",\n    gtreqqless: \"⪌\",\n    gtrless: \"≷\",\n    gtrsim: \"≳\",\n    gvertneqq: \"≩︀\",\n    gvnE: \"≩︀\",\n    hArr: \"⇔\",\n    hairsp: \" \",\n    half: \"½\",\n    hamilt: \"ℋ\",\n    hardcy: \"ъ\",\n    harr: \"↔\",\n    harrcir: \"⥈\",\n    harrw: \"↭\",\n    hbar: \"ℏ\",\n    hcirc: \"ĥ\",\n    hearts: \"♥\",\n    heartsuit: \"♥\",\n    hellip: \"…\",\n    hercon: \"⊹\",\n    hfr: \"𝔥\",\n    hksearow: \"⤥\",\n    hkswarow: \"⤦\",\n    hoarr: \"⇿\",\n    homtht: \"∻\",\n    hookleftarrow: \"↩\",\n    hookrightarrow: \"↪\",\n    hopf: \"𝕙\",\n    horbar: \"―\",\n    hscr: \"𝒽\",\n    hslash: \"ℏ\",\n    hstrok: \"ħ\",\n    hybull: \"⁃\",\n    hyphen: \"‐\",\n    iacut: \"í\",\n    iacute: \"í\",\n    ic: \"⁣\",\n    icir: \"î\",\n    icirc: \"î\",\n    icy: \"и\",\n    iecy: \"е\",\n    iexc: \"¡\",\n    iexcl: \"¡\",\n    iff: \"⇔\",\n    ifr: \"𝔦\",\n    igrav: \"ì\",\n    igrave: \"ì\",\n    ii: \"ⅈ\",\n    iiiint: \"⨌\",\n    iiint: \"∭\",\n    iinfin: \"⧜\",\n    iiota: \"℩\",\n    ijlig: \"ĳ\",\n    imacr: \"ī\",\n    image: \"ℑ\",\n    imagline: \"ℐ\",\n    imagpart: \"ℑ\",\n    imath: \"ı\",\n    imof: \"⊷\",\n    imped: \"Ƶ\",\n    incare: \"℅\",\n    infin: \"∞\",\n    infintie: \"⧝\",\n    inodot: \"ı\",\n    int: \"∫\",\n    intcal: \"⊺\",\n    integers: \"ℤ\",\n    intercal: \"⊺\",\n    intlarhk: \"⨗\",\n    intprod: \"⨼\",\n    iocy: \"ё\",\n    iogon: \"į\",\n    iopf: \"𝕚\",\n    iota: \"ι\",\n    iprod: \"⨼\",\n    iques: \"¿\",\n    iquest: \"¿\",\n    iscr: \"𝒾\",\n    isin: \"∈\",\n    isinE: \"⋹\",\n    isindot: \"⋵\",\n    isins: \"⋴\",\n    isinsv: \"⋳\",\n    isinv: \"∈\",\n    it: \"⁢\",\n    itilde: \"ĩ\",\n    iukcy: \"і\",\n    ium: \"ï\",\n    iuml: \"ï\",\n    jcirc: \"ĵ\",\n    jcy: \"й\",\n    jfr: \"𝔧\",\n    jmath: \"ȷ\",\n    jopf: \"𝕛\",\n    jscr: \"𝒿\",\n    jsercy: \"ј\",\n    jukcy: \"є\",\n    kappa: \"κ\",\n    kappav: \"ϰ\",\n    kcedil: \"ķ\",\n    kcy: \"к\",\n    kfr: \"𝔨\",\n    kgreen: \"ĸ\",\n    khcy: \"х\",\n    kjcy: \"ќ\",\n    kopf: \"𝕜\",\n    kscr: \"𝓀\",\n    lAarr: \"⇚\",\n    lArr: \"⇐\",\n    lAtail: \"⤛\",\n    lBarr: \"⤎\",\n    lE: \"≦\",\n    lEg: \"⪋\",\n    lHar: \"⥢\",\n    lacute: \"ĺ\",\n    laemptyv: \"⦴\",\n    lagran: \"ℒ\",\n    lambda: \"λ\",\n    lang: \"⟨\",\n    langd: \"⦑\",\n    langle: \"⟨\",\n    lap: \"⪅\",\n    laqu: \"«\",\n    laquo: \"«\",\n    larr: \"←\",\n    larrb: \"⇤\",\n    larrbfs: \"⤟\",\n    larrfs: \"⤝\",\n    larrhk: \"↩\",\n    larrlp: \"↫\",\n    larrpl: \"⤹\",\n    larrsim: \"⥳\",\n    larrtl: \"↢\",\n    lat: \"⪫\",\n    latail: \"⤙\",\n    late: \"⪭\",\n    lates: \"⪭︀\",\n    lbarr: \"⤌\",\n    lbbrk: \"❲\",\n    lbrace: \"{\",\n    lbrack: \"[\",\n    lbrke: \"⦋\",\n    lbrksld: \"⦏\",\n    lbrkslu: \"⦍\",\n    lcaron: \"ľ\",\n    lcedil: \"ļ\",\n    lceil: \"⌈\",\n    lcub: \"{\",\n    lcy: \"л\",\n    ldca: \"⤶\",\n    ldquo: \"“\",\n    ldquor: \"„\",\n    ldrdhar: \"⥧\",\n    ldrushar: \"⥋\",\n    ldsh: \"↲\",\n    le: \"≤\",\n    leftarrow: \"←\",\n    leftarrowtail: \"↢\",\n    leftharpoondown: \"↽\",\n    leftharpoonup: \"↼\",\n    leftleftarrows: \"⇇\",\n    leftrightarrow: \"↔\",\n    leftrightarrows: \"⇆\",\n    leftrightharpoons: \"⇋\",\n    leftrightsquigarrow: \"↭\",\n    leftthreetimes: \"⋋\",\n    leg: \"⋚\",\n    leq: \"≤\",\n    leqq: \"≦\",\n    leqslant: \"⩽\",\n    les: \"⩽\",\n    lescc: \"⪨\",\n    lesdot: \"⩿\",\n    lesdoto: \"⪁\",\n    lesdotor: \"⪃\",\n    lesg: \"⋚︀\",\n    lesges: \"⪓\",\n    lessapprox: \"⪅\",\n    lessdot: \"⋖\",\n    lesseqgtr: \"⋚\",\n    lesseqqgtr: \"⪋\",\n    lessgtr: \"≶\",\n    lesssim: \"≲\",\n    lfisht: \"⥼\",\n    lfloor: \"⌊\",\n    lfr: \"𝔩\",\n    lg: \"≶\",\n    lgE: \"⪑\",\n    lhard: \"↽\",\n    lharu: \"↼\",\n    lharul: \"⥪\",\n    lhblk: \"▄\",\n    ljcy: \"љ\",\n    ll: \"≪\",\n    llarr: \"⇇\",\n    llcorner: \"⌞\",\n    llhard: \"⥫\",\n    lltri: \"◺\",\n    lmidot: \"ŀ\",\n    lmoust: \"⎰\",\n    lmoustache: \"⎰\",\n    lnE: \"≨\",\n    lnap: \"⪉\",\n    lnapprox: \"⪉\",\n    lne: \"⪇\",\n    lneq: \"⪇\",\n    lneqq: \"≨\",\n    lnsim: \"⋦\",\n    loang: \"⟬\",\n    loarr: \"⇽\",\n    lobrk: \"⟦\",\n    longleftarrow: \"⟵\",\n    longleftrightarrow: \"⟷\",\n    longmapsto: \"⟼\",\n    longrightarrow: \"⟶\",\n    looparrowleft: \"↫\",\n    looparrowright: \"↬\",\n    lopar: \"⦅\",\n    lopf: \"𝕝\",\n    loplus: \"⨭\",\n    lotimes: \"⨴\",\n    lowast: \"∗\",\n    lowbar: \"_\",\n    loz: \"◊\",\n    lozenge: \"◊\",\n    lozf: \"⧫\",\n    lpar: \"(\",\n    lparlt: \"⦓\",\n    lrarr: \"⇆\",\n    lrcorner: \"⌟\",\n    lrhar: \"⇋\",\n    lrhard: \"⥭\",\n    lrm: \"‎\",\n    lrtri: \"⊿\",\n    lsaquo: \"‹\",\n    lscr: \"𝓁\",\n    lsh: \"↰\",\n    lsim: \"≲\",\n    lsime: \"⪍\",\n    lsimg: \"⪏\",\n    lsqb: \"[\",\n    lsquo: \"‘\",\n    lsquor: \"‚\",\n    lstrok: \"ł\",\n    l: \"<\",\n    lt: \"<\",\n    ltcc: \"⪦\",\n    ltcir: \"⩹\",\n    ltdot: \"⋖\",\n    lthree: \"⋋\",\n    ltimes: \"⋉\",\n    ltlarr: \"⥶\",\n    ltquest: \"⩻\",\n    ltrPar: \"⦖\",\n    ltri: \"◃\",\n    ltrie: \"⊴\",\n    ltrif: \"◂\",\n    lurdshar: \"⥊\",\n    luruhar: \"⥦\",\n    lvertneqq: \"≨︀\",\n    lvnE: \"≨︀\",\n    mDDot: \"∺\",\n    mac: \"¯\",\n    macr: \"¯\",\n    male: \"♂\",\n    malt: \"✠\",\n    maltese: \"✠\",\n    map: \"↦\",\n    mapsto: \"↦\",\n    mapstodown: \"↧\",\n    mapstoleft: \"↤\",\n    mapstoup: \"↥\",\n    marker: \"▮\",\n    mcomma: \"⨩\",\n    mcy: \"м\",\n    mdash: \"—\",\n    measuredangle: \"∡\",\n    mfr: \"𝔪\",\n    mho: \"℧\",\n    micr: \"µ\",\n    micro: \"µ\",\n    mid: \"∣\",\n    midast: \"*\",\n    midcir: \"⫰\",\n    middo: \"·\",\n    middot: \"·\",\n    minus: \"−\",\n    minusb: \"⊟\",\n    minusd: \"∸\",\n    minusdu: \"⨪\",\n    mlcp: \"⫛\",\n    mldr: \"…\",\n    mnplus: \"∓\",\n    models: \"⊧\",\n    mopf: \"𝕞\",\n    mp: \"∓\",\n    mscr: \"𝓂\",\n    mstpos: \"∾\",\n    mu: \"μ\",\n    multimap: \"⊸\",\n    mumap: \"⊸\",\n    nGg: \"⋙̸\",\n    nGt: \"≫⃒\",\n    nGtv: \"≫̸\",\n    nLeftarrow: \"⇍\",\n    nLeftrightarrow: \"⇎\",\n    nLl: \"⋘̸\",\n    nLt: \"≪⃒\",\n    nLtv: \"≪̸\",\n    nRightarrow: \"⇏\",\n    nVDash: \"⊯\",\n    nVdash: \"⊮\",\n    nabla: \"∇\",\n    nacute: \"ń\",\n    nang: \"∠⃒\",\n    nap: \"≉\",\n    napE: \"⩰̸\",\n    napid: \"≋̸\",\n    napos: \"ŉ\",\n    napprox: \"≉\",\n    natur: \"♮\",\n    natural: \"♮\",\n    naturals: \"ℕ\",\n    nbs: \" \",\n    nbsp: \" \",\n    nbump: \"≎̸\",\n    nbumpe: \"≏̸\",\n    ncap: \"⩃\",\n    ncaron: \"ň\",\n    ncedil: \"ņ\",\n    ncong: \"≇\",\n    ncongdot: \"⩭̸\",\n    ncup: \"⩂\",\n    ncy: \"н\",\n    ndash: \"–\",\n    ne: \"≠\",\n    neArr: \"⇗\",\n    nearhk: \"⤤\",\n    nearr: \"↗\",\n    nearrow: \"↗\",\n    nedot: \"≐̸\",\n    nequiv: \"≢\",\n    nesear: \"⤨\",\n    nesim: \"≂̸\",\n    nexist: \"∄\",\n    nexists: \"∄\",\n    nfr: \"𝔫\",\n    ngE: \"≧̸\",\n    nge: \"≱\",\n    ngeq: \"≱\",\n    ngeqq: \"≧̸\",\n    ngeqslant: \"⩾̸\",\n    nges: \"⩾̸\",\n    ngsim: \"≵\",\n    ngt: \"≯\",\n    ngtr: \"≯\",\n    nhArr: \"⇎\",\n    nharr: \"↮\",\n    nhpar: \"⫲\",\n    ni: \"∋\",\n    nis: \"⋼\",\n    nisd: \"⋺\",\n    niv: \"∋\",\n    njcy: \"њ\",\n    nlArr: \"⇍\",\n    nlE: \"≦̸\",\n    nlarr: \"↚\",\n    nldr: \"‥\",\n    nle: \"≰\",\n    nleftarrow: \"↚\",\n    nleftrightarrow: \"↮\",\n    nleq: \"≰\",\n    nleqq: \"≦̸\",\n    nleqslant: \"⩽̸\",\n    nles: \"⩽̸\",\n    nless: \"≮\",\n    nlsim: \"≴\",\n    nlt: \"≮\",\n    nltri: \"⋪\",\n    nltrie: \"⋬\",\n    nmid: \"∤\",\n    nopf: \"𝕟\",\n    no: \"¬\",\n    not: \"¬\",\n    notin: \"∉\",\n    notinE: \"⋹̸\",\n    notindot: \"⋵̸\",\n    notinva: \"∉\",\n    notinvb: \"⋷\",\n    notinvc: \"⋶\",\n    notni: \"∌\",\n    notniva: \"∌\",\n    notnivb: \"⋾\",\n    notnivc: \"⋽\",\n    npar: \"∦\",\n    nparallel: \"∦\",\n    nparsl: \"⫽⃥\",\n    npart: \"∂̸\",\n    npolint: \"⨔\",\n    npr: \"⊀\",\n    nprcue: \"⋠\",\n    npre: \"⪯̸\",\n    nprec: \"⊀\",\n    npreceq: \"⪯̸\",\n    nrArr: \"⇏\",\n    nrarr: \"↛\",\n    nrarrc: \"⤳̸\",\n    nrarrw: \"↝̸\",\n    nrightarrow: \"↛\",\n    nrtri: \"⋫\",\n    nrtrie: \"⋭\",\n    nsc: \"⊁\",\n    nsccue: \"⋡\",\n    nsce: \"⪰̸\",\n    nscr: \"𝓃\",\n    nshortmid: \"∤\",\n    nshortparallel: \"∦\",\n    nsim: \"≁\",\n    nsime: \"≄\",\n    nsimeq: \"≄\",\n    nsmid: \"∤\",\n    nspar: \"∦\",\n    nsqsube: \"⋢\",\n    nsqsupe: \"⋣\",\n    nsub: \"⊄\",\n    nsubE: \"⫅̸\",\n    nsube: \"⊈\",\n    nsubset: \"⊂⃒\",\n    nsubseteq: \"⊈\",\n    nsubseteqq: \"⫅̸\",\n    nsucc: \"⊁\",\n    nsucceq: \"⪰̸\",\n    nsup: \"⊅\",\n    nsupE: \"⫆̸\",\n    nsupe: \"⊉\",\n    nsupset: \"⊃⃒\",\n    nsupseteq: \"⊉\",\n    nsupseteqq: \"⫆̸\",\n    ntgl: \"≹\",\n    ntild: \"ñ\",\n    ntilde: \"ñ\",\n    ntlg: \"≸\",\n    ntriangleleft: \"⋪\",\n    ntrianglelefteq: \"⋬\",\n    ntriangleright: \"⋫\",\n    ntrianglerighteq: \"⋭\",\n    nu: \"ν\",\n    num: \"#\",\n    numero: \"№\",\n    numsp: \" \",\n    nvDash: \"⊭\",\n    nvHarr: \"⤄\",\n    nvap: \"≍⃒\",\n    nvdash: \"⊬\",\n    nvge: \"≥⃒\",\n    nvgt: \">⃒\",\n    nvinfin: \"⧞\",\n    nvlArr: \"⤂\",\n    nvle: \"≤⃒\",\n    nvlt: \"<⃒\",\n    nvltrie: \"⊴⃒\",\n    nvrArr: \"⤃\",\n    nvrtrie: \"⊵⃒\",\n    nvsim: \"∼⃒\",\n    nwArr: \"⇖\",\n    nwarhk: \"⤣\",\n    nwarr: \"↖\",\n    nwarrow: \"↖\",\n    nwnear: \"⤧\",\n    oS: \"Ⓢ\",\n    oacut: \"ó\",\n    oacute: \"ó\",\n    oast: \"⊛\",\n    ocir: \"ô\",\n    ocirc: \"ô\",\n    ocy: \"о\",\n    odash: \"⊝\",\n    odblac: \"ő\",\n    odiv: \"⨸\",\n    odot: \"⊙\",\n    odsold: \"⦼\",\n    oelig: \"œ\",\n    ofcir: \"⦿\",\n    ofr: \"𝔬\",\n    ogon: \"˛\",\n    ograv: \"ò\",\n    ograve: \"ò\",\n    ogt: \"⧁\",\n    ohbar: \"⦵\",\n    ohm: \"Ω\",\n    oint: \"∮\",\n    olarr: \"↺\",\n    olcir: \"⦾\",\n    olcross: \"⦻\",\n    oline: \"‾\",\n    olt: \"⧀\",\n    omacr: \"ō\",\n    omega: \"ω\",\n    omicron: \"ο\",\n    omid: \"⦶\",\n    ominus: \"⊖\",\n    oopf: \"𝕠\",\n    opar: \"⦷\",\n    operp: \"⦹\",\n    oplus: \"⊕\",\n    or: \"∨\",\n    orarr: \"↻\",\n    ord: \"º\",\n    order: \"ℴ\",\n    orderof: \"ℴ\",\n    ordf: \"ª\",\n    ordm: \"º\",\n    origof: \"⊶\",\n    oror: \"⩖\",\n    orslope: \"⩗\",\n    orv: \"⩛\",\n    oscr: \"ℴ\",\n    oslas: \"ø\",\n    oslash: \"ø\",\n    osol: \"⊘\",\n    otild: \"õ\",\n    otilde: \"õ\",\n    otimes: \"⊗\",\n    otimesas: \"⨶\",\n    oum: \"ö\",\n    ouml: \"ö\",\n    ovbar: \"⌽\",\n    par: \"¶\",\n    para: \"¶\",\n    parallel: \"∥\",\n    parsim: \"⫳\",\n    parsl: \"⫽\",\n    part: \"∂\",\n    pcy: \"п\",\n    percnt: \"%\",\n    period: \".\",\n    permil: \"‰\",\n    perp: \"⊥\",\n    pertenk: \"‱\",\n    pfr: \"𝔭\",\n    phi: \"φ\",\n    phiv: \"ϕ\",\n    phmmat: \"ℳ\",\n    phone: \"☎\",\n    pi: \"π\",\n    pitchfork: \"⋔\",\n    piv: \"ϖ\",\n    planck: \"ℏ\",\n    planckh: \"ℎ\",\n    plankv: \"ℏ\",\n    plus: \"+\",\n    plusacir: \"⨣\",\n    plusb: \"⊞\",\n    pluscir: \"⨢\",\n    plusdo: \"∔\",\n    plusdu: \"⨥\",\n    pluse: \"⩲\",\n    plusm: \"±\",\n    plusmn: \"±\",\n    plussim: \"⨦\",\n    plustwo: \"⨧\",\n    pm: \"±\",\n    pointint: \"⨕\",\n    popf: \"𝕡\",\n    poun: \"£\",\n    pound: \"£\",\n    pr: \"≺\",\n    prE: \"⪳\",\n    prap: \"⪷\",\n    prcue: \"≼\",\n    pre: \"⪯\",\n    prec: \"≺\",\n    precapprox: \"⪷\",\n    preccurlyeq: \"≼\",\n    preceq: \"⪯\",\n    precnapprox: \"⪹\",\n    precneqq: \"⪵\",\n    precnsim: \"⋨\",\n    precsim: \"≾\",\n    prime: \"′\",\n    primes: \"ℙ\",\n    prnE: \"⪵\",\n    prnap: \"⪹\",\n    prnsim: \"⋨\",\n    prod: \"∏\",\n    profalar: \"⌮\",\n    profline: \"⌒\",\n    profsurf: \"⌓\",\n    prop: \"∝\",\n    propto: \"∝\",\n    prsim: \"≾\",\n    prurel: \"⊰\",\n    pscr: \"𝓅\",\n    psi: \"ψ\",\n    puncsp: \" \",\n    qfr: \"𝔮\",\n    qint: \"⨌\",\n    qopf: \"𝕢\",\n    qprime: \"⁗\",\n    qscr: \"𝓆\",\n    quaternions: \"ℍ\",\n    quatint: \"⨖\",\n    quest: \"?\",\n    questeq: \"≟\",\n    quo: '\"',\n    quot: '\"',\n    rAarr: \"⇛\",\n    rArr: \"⇒\",\n    rAtail: \"⤜\",\n    rBarr: \"⤏\",\n    rHar: \"⥤\",\n    race: \"∽̱\",\n    racute: \"ŕ\",\n    radic: \"√\",\n    raemptyv: \"⦳\",\n    rang: \"⟩\",\n    rangd: \"⦒\",\n    range: \"⦥\",\n    rangle: \"⟩\",\n    raqu: \"»\",\n    raquo: \"»\",\n    rarr: \"→\",\n    rarrap: \"⥵\",\n    rarrb: \"⇥\",\n    rarrbfs: \"⤠\",\n    rarrc: \"⤳\",\n    rarrfs: \"⤞\",\n    rarrhk: \"↪\",\n    rarrlp: \"↬\",\n    rarrpl: \"⥅\",\n    rarrsim: \"⥴\",\n    rarrtl: \"↣\",\n    rarrw: \"↝\",\n    ratail: \"⤚\",\n    ratio: \"∶\",\n    rationals: \"ℚ\",\n    rbarr: \"⤍\",\n    rbbrk: \"❳\",\n    rbrace: \"}\",\n    rbrack: \"]\",\n    rbrke: \"⦌\",\n    rbrksld: \"⦎\",\n    rbrkslu: \"⦐\",\n    rcaron: \"ř\",\n    rcedil: \"ŗ\",\n    rceil: \"⌉\",\n    rcub: \"}\",\n    rcy: \"р\",\n    rdca: \"⤷\",\n    rdldhar: \"⥩\",\n    rdquo: \"”\",\n    rdquor: \"”\",\n    rdsh: \"↳\",\n    real: \"ℜ\",\n    realine: \"ℛ\",\n    realpart: \"ℜ\",\n    reals: \"ℝ\",\n    rect: \"▭\",\n    re: \"®\",\n    reg: \"®\",\n    rfisht: \"⥽\",\n    rfloor: \"⌋\",\n    rfr: \"𝔯\",\n    rhard: \"⇁\",\n    rharu: \"⇀\",\n    rharul: \"⥬\",\n    rho: \"ρ\",\n    rhov: \"ϱ\",\n    rightarrow: \"→\",\n    rightarrowtail: \"↣\",\n    rightharpoondown: \"⇁\",\n    rightharpoonup: \"⇀\",\n    rightleftarrows: \"⇄\",\n    rightleftharpoons: \"⇌\",\n    rightrightarrows: \"⇉\",\n    rightsquigarrow: \"↝\",\n    rightthreetimes: \"⋌\",\n    ring: \"˚\",\n    risingdotseq: \"≓\",\n    rlarr: \"⇄\",\n    rlhar: \"⇌\",\n    rlm: \"‏\",\n    rmoust: \"⎱\",\n    rmoustache: \"⎱\",\n    rnmid: \"⫮\",\n    roang: \"⟭\",\n    roarr: \"⇾\",\n    robrk: \"⟧\",\n    ropar: \"⦆\",\n    ropf: \"𝕣\",\n    roplus: \"⨮\",\n    rotimes: \"⨵\",\n    rpar: \")\",\n    rpargt: \"⦔\",\n    rppolint: \"⨒\",\n    rrarr: \"⇉\",\n    rsaquo: \"›\",\n    rscr: \"𝓇\",\n    rsh: \"↱\",\n    rsqb: \"]\",\n    rsquo: \"’\",\n    rsquor: \"’\",\n    rthree: \"⋌\",\n    rtimes: \"⋊\",\n    rtri: \"▹\",\n    rtrie: \"⊵\",\n    rtrif: \"▸\",\n    rtriltri: \"⧎\",\n    ruluhar: \"⥨\",\n    rx: \"℞\",\n    sacute: \"ś\",\n    sbquo: \"‚\",\n    sc: \"≻\",\n    scE: \"⪴\",\n    scap: \"⪸\",\n    scaron: \"š\",\n    sccue: \"≽\",\n    sce: \"⪰\",\n    scedil: \"ş\",\n    scirc: \"ŝ\",\n    scnE: \"⪶\",\n    scnap: \"⪺\",\n    scnsim: \"⋩\",\n    scpolint: \"⨓\",\n    scsim: \"≿\",\n    scy: \"с\",\n    sdot: \"⋅\",\n    sdotb: \"⊡\",\n    sdote: \"⩦\",\n    seArr: \"⇘\",\n    searhk: \"⤥\",\n    searr: \"↘\",\n    searrow: \"↘\",\n    sec: \"§\",\n    sect: \"§\",\n    semi: \";\",\n    seswar: \"⤩\",\n    setminus: \"∖\",\n    setmn: \"∖\",\n    sext: \"✶\",\n    sfr: \"𝔰\",\n    sfrown: \"⌢\",\n    sharp: \"♯\",\n    shchcy: \"щ\",\n    shcy: \"ш\",\n    shortmid: \"∣\",\n    shortparallel: \"∥\",\n    sh: \"­\",\n    shy: \"­\",\n    sigma: \"σ\",\n    sigmaf: \"ς\",\n    sigmav: \"ς\",\n    sim: \"∼\",\n    simdot: \"⩪\",\n    sime: \"≃\",\n    simeq: \"≃\",\n    simg: \"⪞\",\n    simgE: \"⪠\",\n    siml: \"⪝\",\n    simlE: \"⪟\",\n    simne: \"≆\",\n    simplus: \"⨤\",\n    simrarr: \"⥲\",\n    slarr: \"←\",\n    smallsetminus: \"∖\",\n    smashp: \"⨳\",\n    smeparsl: \"⧤\",\n    smid: \"∣\",\n    smile: \"⌣\",\n    smt: \"⪪\",\n    smte: \"⪬\",\n    smtes: \"⪬︀\",\n    softcy: \"ь\",\n    sol: \"/\",\n    solb: \"⧄\",\n    solbar: \"⌿\",\n    sopf: \"𝕤\",\n    spades: \"♠\",\n    spadesuit: \"♠\",\n    spar: \"∥\",\n    sqcap: \"⊓\",\n    sqcaps: \"⊓︀\",\n    sqcup: \"⊔\",\n    sqcups: \"⊔︀\",\n    sqsub: \"⊏\",\n    sqsube: \"⊑\",\n    sqsubset: \"⊏\",\n    sqsubseteq: \"⊑\",\n    sqsup: \"⊐\",\n    sqsupe: \"⊒\",\n    sqsupset: \"⊐\",\n    sqsupseteq: \"⊒\",\n    squ: \"□\",\n    square: \"□\",\n    squarf: \"▪\",\n    squf: \"▪\",\n    srarr: \"→\",\n    sscr: \"𝓈\",\n    ssetmn: \"∖\",\n    ssmile: \"⌣\",\n    sstarf: \"⋆\",\n    star: \"☆\",\n    starf: \"★\",\n    straightepsilon: \"ϵ\",\n    straightphi: \"ϕ\",\n    strns: \"¯\",\n    sub: \"⊂\",\n    subE: \"⫅\",\n    subdot: \"⪽\",\n    sube: \"⊆\",\n    subedot: \"⫃\",\n    submult: \"⫁\",\n    subnE: \"⫋\",\n    subne: \"⊊\",\n    subplus: \"⪿\",\n    subrarr: \"⥹\",\n    subset: \"⊂\",\n    subseteq: \"⊆\",\n    subseteqq: \"⫅\",\n    subsetneq: \"⊊\",\n    subsetneqq: \"⫋\",\n    subsim: \"⫇\",\n    subsub: \"⫕\",\n    subsup: \"⫓\",\n    succ: \"≻\",\n    succapprox: \"⪸\",\n    succcurlyeq: \"≽\",\n    succeq: \"⪰\",\n    succnapprox: \"⪺\",\n    succneqq: \"⪶\",\n    succnsim: \"⋩\",\n    succsim: \"≿\",\n    sum: \"∑\",\n    sung: \"♪\",\n    sup: \"⊃\",\n    sup1: \"¹\",\n    sup2: \"²\",\n    sup3: \"³\",\n    supE: \"⫆\",\n    supdot: \"⪾\",\n    supdsub: \"⫘\",\n    supe: \"⊇\",\n    supedot: \"⫄\",\n    suphsol: \"⟉\",\n    suphsub: \"⫗\",\n    suplarr: \"⥻\",\n    supmult: \"⫂\",\n    supnE: \"⫌\",\n    supne: \"⊋\",\n    supplus: \"⫀\",\n    supset: \"⊃\",\n    supseteq: \"⊇\",\n    supseteqq: \"⫆\",\n    supsetneq: \"⊋\",\n    supsetneqq: \"⫌\",\n    supsim: \"⫈\",\n    supsub: \"⫔\",\n    supsup: \"⫖\",\n    swArr: \"⇙\",\n    swarhk: \"⤦\",\n    swarr: \"↙\",\n    swarrow: \"↙\",\n    swnwar: \"⤪\",\n    szli: \"ß\",\n    szlig: \"ß\",\n    target: \"⌖\",\n    tau: \"τ\",\n    tbrk: \"⎴\",\n    tcaron: \"ť\",\n    tcedil: \"ţ\",\n    tcy: \"т\",\n    tdot: \"⃛\",\n    telrec: \"⌕\",\n    tfr: \"𝔱\",\n    there4: \"∴\",\n    therefore: \"∴\",\n    theta: \"θ\",\n    thetasym: \"ϑ\",\n    thetav: \"ϑ\",\n    thickapprox: \"≈\",\n    thicksim: \"∼\",\n    thinsp: \" \",\n    thkap: \"≈\",\n    thksim: \"∼\",\n    thor: \"þ\",\n    thorn: \"þ\",\n    tilde: \"˜\",\n    time: \"×\",\n    times: \"×\",\n    timesb: \"⊠\",\n    timesbar: \"⨱\",\n    timesd: \"⨰\",\n    tint: \"∭\",\n    toea: \"⤨\",\n    top: \"⊤\",\n    topbot: \"⌶\",\n    topcir: \"⫱\",\n    topf: \"𝕥\",\n    topfork: \"⫚\",\n    tosa: \"⤩\",\n    tprime: \"‴\",\n    trade: \"™\",\n    triangle: \"▵\",\n    triangledown: \"▿\",\n    triangleleft: \"◃\",\n    trianglelefteq: \"⊴\",\n    triangleq: \"≜\",\n    triangleright: \"▹\",\n    trianglerighteq: \"⊵\",\n    tridot: \"◬\",\n    trie: \"≜\",\n    triminus: \"⨺\",\n    triplus: \"⨹\",\n    trisb: \"⧍\",\n    tritime: \"⨻\",\n    trpezium: \"⏢\",\n    tscr: \"𝓉\",\n    tscy: \"ц\",\n    tshcy: \"ћ\",\n    tstrok: \"ŧ\",\n    twixt: \"≬\",\n    twoheadleftarrow: \"↞\",\n    twoheadrightarrow: \"↠\",\n    uArr: \"⇑\",\n    uHar: \"⥣\",\n    uacut: \"ú\",\n    uacute: \"ú\",\n    uarr: \"↑\",\n    ubrcy: \"ў\",\n    ubreve: \"ŭ\",\n    ucir: \"û\",\n    ucirc: \"û\",\n    ucy: \"у\",\n    udarr: \"⇅\",\n    udblac: \"ű\",\n    udhar: \"⥮\",\n    ufisht: \"⥾\",\n    ufr: \"𝔲\",\n    ugrav: \"ù\",\n    ugrave: \"ù\",\n    uharl: \"↿\",\n    uharr: \"↾\",\n    uhblk: \"▀\",\n    ulcorn: \"⌜\",\n    ulcorner: \"⌜\",\n    ulcrop: \"⌏\",\n    ultri: \"◸\",\n    umacr: \"ū\",\n    um: \"¨\",\n    uml: \"¨\",\n    uogon: \"ų\",\n    uopf: \"𝕦\",\n    uparrow: \"↑\",\n    updownarrow: \"↕\",\n    upharpoonleft: \"↿\",\n    upharpoonright: \"↾\",\n    uplus: \"⊎\",\n    upsi: \"υ\",\n    upsih: \"ϒ\",\n    upsilon: \"υ\",\n    upuparrows: \"⇈\",\n    urcorn: \"⌝\",\n    urcorner: \"⌝\",\n    urcrop: \"⌎\",\n    uring: \"ů\",\n    urtri: \"◹\",\n    uscr: \"𝓊\",\n    utdot: \"⋰\",\n    utilde: \"ũ\",\n    utri: \"▵\",\n    utrif: \"▴\",\n    uuarr: \"⇈\",\n    uum: \"ü\",\n    uuml: \"ü\",\n    uwangle: \"⦧\",\n    vArr: \"⇕\",\n    vBar: \"⫨\",\n    vBarv: \"⫩\",\n    vDash: \"⊨\",\n    vangrt: \"⦜\",\n    varepsilon: \"ϵ\",\n    varkappa: \"ϰ\",\n    varnothing: \"∅\",\n    varphi: \"ϕ\",\n    varpi: \"ϖ\",\n    varpropto: \"∝\",\n    varr: \"↕\",\n    varrho: \"ϱ\",\n    varsigma: \"ς\",\n    varsubsetneq: \"⊊︀\",\n    varsubsetneqq: \"⫋︀\",\n    varsupsetneq: \"⊋︀\",\n    varsupsetneqq: \"⫌︀\",\n    vartheta: \"ϑ\",\n    vartriangleleft: \"⊲\",\n    vartriangleright: \"⊳\",\n    vcy: \"в\",\n    vdash: \"⊢\",\n    vee: \"∨\",\n    veebar: \"⊻\",\n    veeeq: \"≚\",\n    vellip: \"⋮\",\n    verbar: \"|\",\n    vert: \"|\",\n    vfr: \"𝔳\",\n    vltri: \"⊲\",\n    vnsub: \"⊂⃒\",\n    vnsup: \"⊃⃒\",\n    vopf: \"𝕧\",\n    vprop: \"∝\",\n    vrtri: \"⊳\",\n    vscr: \"𝓋\",\n    vsubnE: \"⫋︀\",\n    vsubne: \"⊊︀\",\n    vsupnE: \"⫌︀\",\n    vsupne: \"⊋︀\",\n    vzigzag: \"⦚\",\n    wcirc: \"ŵ\",\n    wedbar: \"⩟\",\n    wedge: \"∧\",\n    wedgeq: \"≙\",\n    weierp: \"℘\",\n    wfr: \"𝔴\",\n    wopf: \"𝕨\",\n    wp: \"℘\",\n    wr: \"≀\",\n    wreath: \"≀\",\n    wscr: \"𝓌\",\n    xcap: \"⋂\",\n    xcirc: \"◯\",\n    xcup: \"⋃\",\n    xdtri: \"▽\",\n    xfr: \"𝔵\",\n    xhArr: \"⟺\",\n    xharr: \"⟷\",\n    xi: \"ξ\",\n    xlArr: \"⟸\",\n    xlarr: \"⟵\",\n    xmap: \"⟼\",\n    xnis: \"⋻\",\n    xodot: \"⨀\",\n    xopf: \"𝕩\",\n    xoplus: \"⨁\",\n    xotime: \"⨂\",\n    xrArr: \"⟹\",\n    xrarr: \"⟶\",\n    xscr: \"𝓍\",\n    xsqcup: \"⨆\",\n    xuplus: \"⨄\",\n    xutri: \"△\",\n    xvee: \"⋁\",\n    xwedge: \"⋀\",\n    yacut: \"ý\",\n    yacute: \"ý\",\n    yacy: \"я\",\n    ycirc: \"ŷ\",\n    ycy: \"ы\",\n    ye: \"¥\",\n    yen: \"¥\",\n    yfr: \"𝔶\",\n    yicy: \"ї\",\n    yopf: \"𝕪\",\n    yscr: \"𝓎\",\n    yucy: \"ю\",\n    yum: \"ÿ\",\n    yuml: \"ÿ\",\n    zacute: \"ź\",\n    zcaron: \"ž\",\n    zcy: \"з\",\n    zdot: \"ż\",\n    zeetrf: \"ℨ\",\n    zeta: \"ζ\",\n    zfr: \"𝔷\",\n    zhcy: \"ж\",\n    zigrarr: \"⇝\",\n    zopf: \"𝕫\",\n    zscr: \"𝓏\",\n    zwj: \"‍\",\n    zwnj: \"‌\",\n    default: g\n  }),\n      b = {\n    AElig: \"Æ\",\n    AMP: \"&\",\n    Aacute: \"Á\",\n    Acirc: \"Â\",\n    Agrave: \"À\",\n    Aring: \"Å\",\n    Atilde: \"Ã\",\n    Auml: \"Ä\",\n    COPY: \"©\",\n    Ccedil: \"Ç\",\n    ETH: \"Ð\",\n    Eacute: \"É\",\n    Ecirc: \"Ê\",\n    Egrave: \"È\",\n    Euml: \"Ë\",\n    GT: \">\",\n    Iacute: \"Í\",\n    Icirc: \"Î\",\n    Igrave: \"Ì\",\n    Iuml: \"Ï\",\n    LT: \"<\",\n    Ntilde: \"Ñ\",\n    Oacute: \"Ó\",\n    Ocirc: \"Ô\",\n    Ograve: \"Ò\",\n    Oslash: \"Ø\",\n    Otilde: \"Õ\",\n    Ouml: \"Ö\",\n    QUOT: '\"',\n    REG: \"®\",\n    THORN: \"Þ\",\n    Uacute: \"Ú\",\n    Ucirc: \"Û\",\n    Ugrave: \"Ù\",\n    Uuml: \"Ü\",\n    Yacute: \"Ý\",\n    aacute: \"á\",\n    acirc: \"â\",\n    acute: \"´\",\n    aelig: \"æ\",\n    agrave: \"à\",\n    amp: \"&\",\n    aring: \"å\",\n    atilde: \"ã\",\n    auml: \"ä\",\n    brvbar: \"¦\",\n    ccedil: \"ç\",\n    cedil: \"¸\",\n    cent: \"¢\",\n    copy: \"©\",\n    curren: \"¤\",\n    deg: \"°\",\n    divide: \"÷\",\n    eacute: \"é\",\n    ecirc: \"ê\",\n    egrave: \"è\",\n    eth: \"ð\",\n    euml: \"ë\",\n    frac12: \"½\",\n    frac14: \"¼\",\n    frac34: \"¾\",\n    gt: \">\",\n    iacute: \"í\",\n    icirc: \"î\",\n    iexcl: \"¡\",\n    igrave: \"ì\",\n    iquest: \"¿\",\n    iuml: \"ï\",\n    laquo: \"«\",\n    lt: \"<\",\n    macr: \"¯\",\n    micro: \"µ\",\n    middot: \"·\",\n    nbsp: \" \",\n    not: \"¬\",\n    ntilde: \"ñ\",\n    oacute: \"ó\",\n    ocirc: \"ô\",\n    ograve: \"ò\",\n    ordf: \"ª\",\n    ordm: \"º\",\n    oslash: \"ø\",\n    otilde: \"õ\",\n    ouml: \"ö\",\n    para: \"¶\",\n    plusmn: \"±\",\n    pound: \"£\",\n    quot: '\"',\n    raquo: \"»\",\n    reg: \"®\",\n    sect: \"§\",\n    shy: \"­\",\n    sup1: \"¹\",\n    sup2: \"²\",\n    sup3: \"³\",\n    szlig: \"ß\",\n    thorn: \"þ\",\n    times: \"×\",\n    uacute: \"ú\",\n    ucirc: \"û\",\n    ugrave: \"ù\",\n    uml: \"¨\",\n    uuml: \"ü\",\n    yacute: \"ý\",\n    yen: \"¥\",\n    yuml: \"ÿ\"\n  },\n      v = Object.freeze({\n    AElig: \"Æ\",\n    AMP: \"&\",\n    Aacute: \"Á\",\n    Acirc: \"Â\",\n    Agrave: \"À\",\n    Aring: \"Å\",\n    Atilde: \"Ã\",\n    Auml: \"Ä\",\n    COPY: \"©\",\n    Ccedil: \"Ç\",\n    ETH: \"Ð\",\n    Eacute: \"É\",\n    Ecirc: \"Ê\",\n    Egrave: \"È\",\n    Euml: \"Ë\",\n    GT: \">\",\n    Iacute: \"Í\",\n    Icirc: \"Î\",\n    Igrave: \"Ì\",\n    Iuml: \"Ï\",\n    LT: \"<\",\n    Ntilde: \"Ñ\",\n    Oacute: \"Ó\",\n    Ocirc: \"Ô\",\n    Ograve: \"Ò\",\n    Oslash: \"Ø\",\n    Otilde: \"Õ\",\n    Ouml: \"Ö\",\n    QUOT: '\"',\n    REG: \"®\",\n    THORN: \"Þ\",\n    Uacute: \"Ú\",\n    Ucirc: \"Û\",\n    Ugrave: \"Ù\",\n    Uuml: \"Ü\",\n    Yacute: \"Ý\",\n    aacute: \"á\",\n    acirc: \"â\",\n    acute: \"´\",\n    aelig: \"æ\",\n    agrave: \"à\",\n    amp: \"&\",\n    aring: \"å\",\n    atilde: \"ã\",\n    auml: \"ä\",\n    brvbar: \"¦\",\n    ccedil: \"ç\",\n    cedil: \"¸\",\n    cent: \"¢\",\n    copy: \"©\",\n    curren: \"¤\",\n    deg: \"°\",\n    divide: \"÷\",\n    eacute: \"é\",\n    ecirc: \"ê\",\n    egrave: \"è\",\n    eth: \"ð\",\n    euml: \"ë\",\n    frac12: \"½\",\n    frac14: \"¼\",\n    frac34: \"¾\",\n    gt: \">\",\n    iacute: \"í\",\n    icirc: \"î\",\n    iexcl: \"¡\",\n    igrave: \"ì\",\n    iquest: \"¿\",\n    iuml: \"ï\",\n    laquo: \"«\",\n    lt: \"<\",\n    macr: \"¯\",\n    micro: \"µ\",\n    middot: \"·\",\n    nbsp: \" \",\n    not: \"¬\",\n    ntilde: \"ñ\",\n    oacute: \"ó\",\n    ocirc: \"ô\",\n    ograve: \"ò\",\n    ordf: \"ª\",\n    ordm: \"º\",\n    oslash: \"ø\",\n    otilde: \"õ\",\n    ouml: \"ö\",\n    para: \"¶\",\n    plusmn: \"±\",\n    pound: \"£\",\n    quot: '\"',\n    raquo: \"»\",\n    reg: \"®\",\n    sect: \"§\",\n    shy: \"­\",\n    sup1: \"¹\",\n    sup2: \"²\",\n    sup3: \"³\",\n    szlig: \"ß\",\n    thorn: \"þ\",\n    times: \"×\",\n    uacute: \"ú\",\n    ucirc: \"û\",\n    ugrave: \"ù\",\n    uml: \"¨\",\n    uuml: \"ü\",\n    yacute: \"ý\",\n    yen: \"¥\",\n    yuml: \"ÿ\",\n    default: b\n  }),\n      E = {\n    0: \"�\",\n    128: \"€\",\n    130: \"‚\",\n    131: \"ƒ\",\n    132: \"„\",\n    133: \"…\",\n    134: \"†\",\n    135: \"‡\",\n    136: \"ˆ\",\n    137: \"‰\",\n    138: \"Š\",\n    139: \"‹\",\n    140: \"Œ\",\n    142: \"Ž\",\n    145: \"‘\",\n    146: \"’\",\n    147: \"“\",\n    148: \"”\",\n    149: \"•\",\n    150: \"–\",\n    151: \"—\",\n    152: \"˜\",\n    153: \"™\",\n    154: \"š\",\n    155: \"›\",\n    156: \"œ\",\n    158: \"ž\",\n    159: \"Ÿ\"\n  },\n      w = Object.freeze({\n    default: E\n  }),\n      y = function (r) {\n    var e = \"string\" == typeof r ? r.charCodeAt(0) : r;\n    return e >= 48 && e <= 57;\n  };\n\n  var A = function (r) {\n    var e = \"string\" == typeof r ? r.charCodeAt(0) : r;\n    return e >= 97 && e <= 102 || e >= 65 && e <= 70 || e >= 48 && e <= 57;\n  };\n\n  var C = function (r) {\n    var e = \"string\" == typeof r ? r.charCodeAt(0) : r;\n    return e >= 97 && e <= 122 || e >= 65 && e <= 90;\n  };\n\n  var q = function (r) {\n    return C(r) || y(r);\n  };\n\n  var F = m && g || m,\n      k = v && b || v,\n      x = w && E || w,\n      L = function (r, e) {\n    var t,\n        u,\n        n = {};\n    e || (e = {});\n\n    for (u in Z) t = e[u], n[u] = null === t || void 0 === t ? Z[u] : t;\n\n    (n.position.indent || n.position.start) && (n.indent = n.position.indent || [], n.position = n.position.start);\n    return function (r, e) {\n      var t,\n          u,\n          n,\n          a,\n          o,\n          i,\n          c,\n          l,\n          s,\n          f,\n          p,\n          D,\n          d,\n          h,\n          g,\n          m,\n          b,\n          v,\n          E = e.additional,\n          w = e.nonTerminated,\n          y = e.text,\n          A = e.reference,\n          C = e.warning,\n          L = e.textContext,\n          Z = e.referenceContext,\n          ar = e.warningContext,\n          or = e.position,\n          ir = e.indent || [],\n          sr = r.length,\n          fr = 0,\n          pr = -1,\n          Dr = or.column || 1,\n          dr = or.line || 1,\n          hr = M,\n          gr = [];\n      g = br(), c = C ? function (r, e) {\n        var t = br();\n        t.column += e, t.offset += e, C.call(ar, cr[r], t, r);\n      } : T, fr--, sr++;\n\n      for (; ++fr < sr;) if (a === I && (Dr = ir[pr] || 1), (a = vr(fr)) !== R) a === I && (dr++, pr++, Dr = 0), a ? (hr += a, Dr++) : Er();else {\n        if ((i = vr(fr + 1)) === $ || i === I || i === N || i === j || i === G || i === R || i === M || E && i === E) {\n          hr += a, Dr++;\n          continue;\n        }\n\n        for (p = D = fr + 1, v = D, i !== U ? d = Y : (v = ++p, (i = vr(v)) === V || i === z ? (d = _, v = ++p) : d = J), t = M, f = M, n = M, h = K[d], v--; ++v < sr && (i = vr(v), h(i));) n += i, d === Y && B.call(k, n) && (t = n, f = k[n]);\n\n        (u = vr(v) === P) && (v++, d === Y && B.call(F, n) && (t = n, f = F[n])), b = 1 + v - D, (u || w) && (n ? d === Y ? (u && !f ? c(tr, 1) : (t !== n && (v = p + t.length, b = 1 + v - p, u = !1), u || (l = t ? W : rr, e.attribute ? (i = vr(v)) === H ? (c(l, b), f = null) : q(i) ? f = null : c(l, b) : c(l, b))), o = f) : (u || c(X, b), o = parseInt(n, Q[d]), (mr = o) >= 55296 && mr <= 57343 || mr > 1114111 ? (c(nr, b), o = O) : o in x ? (c(ur, b), o = x[o]) : (s = M, lr(o) && c(ur, b), o > 65535 && (s += S((o -= 65536) >>> 10 | 55296), o = 56320 | 1023 & o), o = s + S(o))) : d !== Y && c(er, b)), o ? (Er(), g = br(), fr = v - 1, Dr += v - D + 1, gr.push(o), (m = br()).offset++, A && A.call(Z, o, {\n          start: g,\n          end: m\n        }, r.slice(D - 1, v)), g = m) : (n = r.slice(D - 1, v), hr += n, Dr += n.length, fr = v - 1);\n      }\n\n      var mr;\n      return gr.join(M);\n\n      function br() {\n        return {\n          line: dr,\n          column: Dr,\n          offset: fr + (or.offset || 0)\n        };\n      }\n\n      function vr(e) {\n        return r.charAt(e);\n      }\n\n      function Er() {\n        hr && (gr.push(hr), y && y.call(L, hr, {\n          start: g,\n          end: br()\n        }), hr = M);\n      }\n    }(r, n);\n  },\n      B = {}.hasOwnProperty,\n      S = String.fromCharCode,\n      T = Function.prototype,\n      O = \"�\",\n      N = \"\\f\",\n      R = \"&\",\n      U = \"#\",\n      P = \";\",\n      I = \"\\n\",\n      V = \"x\",\n      z = \"X\",\n      j = \" \",\n      G = \"<\",\n      H = \"=\",\n      M = \"\",\n      $ = \"\\t\",\n      Z = {\n    warning: null,\n    reference: null,\n    text: null,\n    warningContext: null,\n    referenceContext: null,\n    textContext: null,\n    position: {},\n    additional: null,\n    attribute: !1,\n    nonTerminated: !0\n  },\n      Y = \"named\",\n      _ = \"hexadecimal\",\n      J = \"decimal\",\n      Q = {};\n\n  Q[_] = 16, Q[J] = 10;\n  var K = {};\n  K[Y] = q, K[J] = y, K[_] = A;\n  var W = 1,\n      X = 2,\n      rr = 3,\n      er = 4,\n      tr = 5,\n      ur = 6,\n      nr = 7,\n      ar = \"Numeric character references\",\n      or = \" must be terminated by a semicolon\",\n      ir = \" cannot be empty\",\n      cr = {};\n\n  function lr(r) {\n    return r >= 1 && r <= 8 || 11 === r || r >= 13 && r <= 31 || r >= 127 && r <= 159 || r >= 64976 && r <= 65007 || 65535 == (65535 & r) || 65534 == (65535 & r);\n  }\n\n  cr[W] = \"Named character references\" + or, cr[X] = ar + or, cr[rr] = \"Named character references\" + ir, cr[er] = ar + ir, cr[tr] = \"Named character references must be known\", cr[ur] = ar + \" cannot be disallowed\", cr[nr] = ar + \" cannot be outside the permissible Unicode range\";\n\n  var sr = function (r) {\n    return u.raw = function (r, u, a) {\n      return L(r, n(a, {\n        position: e(u),\n        warning: t\n      }));\n    }, u;\n\n    function e(e) {\n      for (var t = r.offset, u = e.line, n = []; ++u && u in t;) n.push((t[u] || 0) + 1);\n\n      return {\n        start: e,\n        indent: n\n      };\n    }\n\n    function t(e, t, u) {\n      3 !== u && r.file.message(e, t);\n    }\n\n    function u(u, n, a) {\n      L(u, {\n        position: e(n),\n        warning: t,\n        text: a,\n        reference: a,\n        textContext: r,\n        referenceContext: r\n      });\n    }\n  };\n\n  var fr = function (r) {\n    return function (e, t) {\n      var u,\n          n,\n          a,\n          o,\n          i,\n          c,\n          l = this,\n          s = l.offset,\n          f = [],\n          p = l[r + \"Methods\"],\n          D = l[r + \"Tokenizers\"],\n          d = t.line,\n          h = t.column;\n      if (!e) return f;\n      v.now = m, v.file = l.file, g(\"\");\n\n      for (; e;) {\n        for (u = -1, n = p.length, i = !1; ++u < n && (o = p[u], !(a = D[o]) || a.onlyAtStart && !l.atStart || a.notInList && l.inList || a.notInBlock && l.inBlock || a.notInLink && l.inLink || (c = e.length, a.apply(l, [v, e]), !(i = c !== e.length))););\n\n        i || l.file.fail(new Error(\"Infinite loop\"), v.now());\n      }\n\n      return l.eof = m(), f;\n\n      function g(r) {\n        for (var e = -1, t = r.indexOf(\"\\n\"); -1 !== t;) d++, e = t, t = r.indexOf(\"\\n\", t + 1);\n\n        -1 === e ? h += r.length : h = r.length - e, d in s && (-1 !== e ? h += s[d] : h <= s[d] && (h = s[d] + 1));\n      }\n\n      function m() {\n        var r = {\n          line: d,\n          column: h\n        };\n        return r.offset = l.toOffset(r), r;\n      }\n\n      function b() {\n        var r = m();\n        return function (e, t) {\n          var u = e.position,\n              n = u ? u.start : r,\n              a = [],\n              o = u && u.end.line,\n              i = r.line;\n\n          if (e.position = new function (r) {\n            this.start = r, this.end = m();\n          }(n), u && t && u.indent) {\n            if (a = u.indent, o < i) {\n              for (; ++o < i;) a.push((s[o] || 0) + 1);\n\n              a.push(r.column);\n            }\n\n            t = a.concat(t);\n          }\n\n          return e.position.indent = t || [], e;\n        };\n      }\n\n      function v(r) {\n        var t = function () {\n          var r = [],\n              e = d + 1;\n          return function () {\n            for (var t = d + 1; e < t;) r.push((s[e] || 0) + 1), e++;\n\n            return r;\n          };\n        }(),\n            u = b(),\n            n = m();\n\n        return function (r) {\n          e.substring(0, r.length) !== r && l.file.fail(new Error(\"Incorrectly eaten value: please report this warning on http://git.io/vg5Ft\"), m());\n        }(r), a.reset = o, o.test = i, a.test = i, e = e.substring(r.length), g(r), t = t(), a;\n\n        function a(r, e) {\n          return u(function (r, e) {\n            var t = e ? e.children : f,\n                u = t[t.length - 1];\n            u && r.type === u.type && r.type in pr && Dr(u) && Dr(r) && (r = pr[r.type].call(l, u, r));\n            r !== u && t.push(r);\n            l.atStart && 0 !== f.length && l.exitStart();\n            return r;\n          }(u(r), e), t);\n        }\n\n        function o() {\n          var t = a.apply(null, arguments);\n          return d = n.line, h = n.column, e = r + e, t;\n        }\n\n        function i() {\n          var t = u({});\n          return d = n.line, h = n.column, e = r + e, t.position;\n        }\n      }\n    };\n  },\n      pr = {\n    text: function (r, e) {\n      return r.value += e.value, r;\n    },\n    blockquote: function (r, e) {\n      if (this.options.commonmark) return e;\n      return r.children = r.children.concat(e.children), r;\n    }\n  };\n\n  function Dr(r) {\n    var e, t;\n    return \"text\" !== r.type || !r.position || (e = r.position.start, t = r.position.end, e.line !== t.line || t.column - e.column === r.value.length);\n  }\n\n  var dr = br,\n      hr = [\"\\\\\", \"`\", \"*\", \"{\", \"}\", \"[\", \"]\", \"(\", \")\", \"#\", \"+\", \"-\", \".\", \"!\", \"_\", \">\"],\n      gr = hr.concat([\"~\", \"|\"]),\n      mr = gr.concat([\"\\n\", '\"', \"$\", \"%\", \"&\", \"'\", \",\", \"/\", \":\", \";\", \"<\", \"=\", \"?\", \"@\", \"^\"]);\n\n  function br(r) {\n    var e = r || {};\n    return e.commonmark ? mr : e.gfm ? gr : hr;\n  }\n\n  br.default = hr, br.gfm = gr, br.commonmark = mr;\n\n  var vr = [\"address\", \"article\", \"aside\", \"base\", \"basefont\", \"blockquote\", \"body\", \"caption\", \"center\", \"col\", \"colgroup\", \"dd\", \"details\", \"dialog\", \"dir\", \"div\", \"dl\", \"dt\", \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"form\", \"frame\", \"frameset\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\", \"iframe\", \"legend\", \"li\", \"link\", \"main\", \"menu\", \"menuitem\", \"meta\", \"nav\", \"noframes\", \"ol\", \"optgroup\", \"option\", \"p\", \"param\", \"pre\", \"section\", \"source\", \"title\", \"summary\", \"table\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"title\", \"tr\", \"track\", \"ul\"],\n      Er = Object.freeze({\n    default: vr\n  }),\n      wr = {\n    position: !0,\n    gfm: !0,\n    commonmark: !1,\n    footnotes: !1,\n    pedantic: !1,\n    blocks: Er && vr || Er\n  },\n      yr = function (e) {\n    var t,\n        u,\n        a = this.options;\n    if (null == e) e = {};else {\n      if (\"object\" !== r(e)) throw new Error(\"Invalid value `\" + e + \"` for setting `options`\");\n      e = n(e);\n    }\n\n    for (t in wr) {\n      if (null == (u = e[t]) && (u = a[t]), \"blocks\" !== t && \"boolean\" != typeof u || \"blocks\" === t && \"object\" !== r(u)) throw new Error(\"Invalid value `\" + u + \"` for setting `options.\" + t + \"`\");\n      e[t] = u;\n    }\n\n    return this.options = e, this.escape = dr(e), this;\n  };\n\n  var Ar = function (r, e, t, u) {\n    \"function\" == typeof e && (u = t, t = e, e = null);\n\n    function n(r, a, o) {\n      var i;\n      return a = a || (o ? 0 : null), e && r.type !== e || (i = t(r, a, o || null)), r.children && !1 !== i ? function (r, e) {\n        var t,\n            a = u ? -1 : 1,\n            o = r.length,\n            i = (u ? o : -1) + a;\n\n        for (; i > -1 && i < o;) {\n          if ((t = r[i]) && !1 === n(t, i, e)) return !1;\n          i += a;\n        }\n\n        return !0;\n      }(r.children, r) : i;\n    }\n\n    n(r);\n  };\n\n  var Cr = function (r, e) {\n    return Ar(r, e ? qr : Fr), r;\n  };\n\n  function qr(r) {\n    delete r.position;\n  }\n\n  function Fr(r) {\n    r.position = void 0;\n  }\n\n  var kr = function () {\n    var r,\n        e = String(this.file),\n        t = {\n      line: 1,\n      column: 1,\n      offset: 0\n    },\n        u = n(t);\n    65279 === (e = e.replace(Lr, xr)).charCodeAt(0) && (e = e.slice(1), u.column++, u.offset++);\n    r = {\n      type: \"root\",\n      children: this.tokenizeBlock(e, u),\n      position: {\n        start: t,\n        end: this.eof || n(t)\n      }\n    }, this.options.position || Cr(r, !0);\n    return r;\n  },\n      xr = \"\\n\",\n      Lr = /\\r\\n|\\r/g;\n\n  var Br = function (r) {\n    return Tr.test(\"number\" == typeof r ? Sr(r) : r.charAt(0));\n  },\n      Sr = String.fromCharCode,\n      Tr = /\\s/;\n\n  var Or = function (r, e, t) {\n    var u,\n        n,\n        a,\n        o,\n        i = e.charAt(0);\n    if (\"\\n\" !== i) return;\n    if (t) return !0;\n    o = 1, u = e.length, n = i, a = \"\";\n\n    for (; o < u && (i = e.charAt(o), Br(i));) a += i, \"\\n\" === i && (n += a, a = \"\"), o++;\n\n    r(n);\n  };\n\n  var Nr,\n      Rr = \"\",\n      Ur = function (r, e) {\n    if (\"string\" != typeof r) throw new TypeError(\"expected a string\");\n    if (1 === e) return r;\n    if (2 === e) return r + r;\n    var t = r.length * e;\n    if (Nr !== r || void 0 === Nr) Nr = r, Rr = \"\";else if (Rr.length >= t) return Rr.substr(0, t);\n\n    for (; t > Rr.length && e > 1;) 1 & e && (Rr += r), e >>= 1, r += r;\n\n    return Rr = (Rr += r).substr(0, t);\n  };\n\n  var Pr = function (r) {\n    var e = String(r),\n        t = e.length;\n\n    for (; e.charAt(--t) === Ir;);\n\n    return e.slice(0, t + 1);\n  },\n      Ir = \"\\n\";\n\n  var Vr = function (r, e, t) {\n    var u,\n        n,\n        a,\n        o = -1,\n        i = e.length,\n        c = \"\",\n        l = \"\",\n        s = \"\",\n        f = \"\";\n\n    for (; ++o < i;) if (u = e.charAt(o), a) {\n      if (a = !1, c += s, l += f, s = \"\", f = \"\", u === zr) s = u, f = u;else for (c += u, l += u; ++o < i;) {\n        if (!(u = e.charAt(o)) || u === zr) {\n          f = u, s = u;\n          break;\n        }\n\n        c += u, l += u;\n      }\n    } else if (u === Gr && e.charAt(o + 1) === u && e.charAt(o + 2) === u && e.charAt(o + 3) === u) s += Hr, o += 3, a = !0;else if (u === jr) s += u, a = !0;else {\n      for (n = \"\"; u === jr || u === Gr;) n += u, u = e.charAt(++o);\n\n      if (u !== zr) break;\n      s += n + u, f += u;\n    }\n\n    if (l) return !!t || r(c)({\n      type: \"code\",\n      lang: null,\n      value: Pr(l)\n    });\n  },\n      zr = \"\\n\",\n      jr = \"\\t\",\n      Gr = \" \",\n      Hr = Ur(Gr, 4);\n\n  var Mr = function (r, e, t) {\n    var u,\n        n,\n        a,\n        o,\n        i,\n        c,\n        l,\n        s,\n        f,\n        p,\n        D,\n        d = this.options,\n        h = e.length + 1,\n        g = 0,\n        m = \"\";\n    if (!d.gfm) return;\n\n    for (; g < h && ((a = e.charAt(g)) === Yr || a === Zr);) m += a, g++;\n\n    if (p = g, (a = e.charAt(g)) !== _r && a !== Jr) return;\n    g++, n = a, u = 1, m += a;\n\n    for (; g < h && (a = e.charAt(g)) === n;) m += a, u++, g++;\n\n    if (u < Qr) return;\n\n    for (; g < h && ((a = e.charAt(g)) === Yr || a === Zr);) m += a, g++;\n\n    o = \"\", i = \"\";\n\n    for (; g < h && (a = e.charAt(g)) !== $r && a !== _r && a !== Jr;) a === Yr || a === Zr ? i += a : (o += i + a, i = \"\"), g++;\n\n    if ((a = e.charAt(g)) && a !== $r) return;\n    if (t) return !0;\n    (D = r.now()).column += m.length, D.offset += m.length, m += o, o = this.decode.raw(this.unescape(o), D), i && (m += i);\n    i = \"\", s = \"\", f = \"\", c = \"\", l = \"\";\n\n    for (; g < h;) if (a = e.charAt(g), c += s, l += f, s = \"\", f = \"\", a === $r) {\n      for (c ? (s += a, f += a) : m += a, i = \"\", g++; g < h && (a = e.charAt(g)) === Yr;) i += a, g++;\n\n      if (s += i, f += i.slice(p), !(i.length >= Kr)) {\n        for (i = \"\"; g < h && (a = e.charAt(g)) === n;) i += a, g++;\n\n        if (s += i, f += i, !(i.length < u)) {\n          for (i = \"\"; g < h && ((a = e.charAt(g)) === Yr || a === Zr);) s += a, f += a, g++;\n\n          if (!a || a === $r) break;\n        }\n      }\n    } else c += a, f += a, g++;\n\n    return r(m += c + s)({\n      type: \"code\",\n      lang: o || null,\n      value: Pr(l)\n    });\n  },\n      $r = \"\\n\",\n      Zr = \"\\t\",\n      Yr = \" \",\n      _r = \"~\",\n      Jr = \"`\",\n      Qr = 3,\n      Kr = 4;\n\n  var Wr = o(function (r, e) {\n    (e = r.exports = function (r) {\n      return r.replace(/^\\s*|\\s*$/g, \"\");\n    }).left = function (r) {\n      return r.replace(/^\\s*/, \"\");\n    }, e.right = function (r) {\n      return r.replace(/\\s*$/, \"\");\n    };\n  }),\n      Xr = function (r, e, t, u) {\n    var n,\n        a,\n        o,\n        i,\n        c,\n        l,\n        s = [\"pedantic\", \"commonmark\"],\n        f = s.length,\n        p = r.length,\n        D = -1;\n\n    for (; ++D < p;) {\n      for (n = r[D], a = n[1] || {}, o = n[0], i = -1, l = !1; ++i < f;) if (void 0 !== a[c = s[i]] && a[c] !== t.options[c]) {\n        l = !0;\n        break;\n      }\n\n      if (!l && e[o].apply(t, u)) return !0;\n    }\n\n    return !1;\n  };\n\n  var re = function (r, e, t) {\n    var u,\n        n,\n        a,\n        o,\n        i,\n        c,\n        l,\n        s,\n        f,\n        p = this.offset,\n        D = this.blockTokenizers,\n        d = this.interruptBlockquote,\n        h = r.now(),\n        g = h.line,\n        m = e.length,\n        b = [],\n        v = [],\n        E = [],\n        w = 0;\n\n    for (; w < m && ((n = e.charAt(w)) === ue || n === te);) w++;\n\n    if (e.charAt(w) !== ne) return;\n    if (t) return !0;\n    w = 0;\n\n    for (; w < m;) {\n      for (o = e.indexOf(ee, w), l = w, s = !1, -1 === o && (o = m); w < m && ((n = e.charAt(w)) === ue || n === te);) w++;\n\n      if (e.charAt(w) === ne ? (w++, s = !0, e.charAt(w) === ue && w++) : w = l, i = e.slice(w, o), !s && !Wr(i)) {\n        w = l;\n        break;\n      }\n\n      if (!s && (a = e.slice(w), Xr(d, D, this, [r, a, !0]))) break;\n      c = l === w ? i : e.slice(l, o), E.push(w - l), b.push(c), v.push(i), w = o + 1;\n    }\n\n    w = -1, m = E.length, u = r(b.join(ee));\n\n    for (; ++w < m;) p[g] = (p[g] || 0) + E[w], g++;\n\n    return f = this.enterBlock(), v = this.tokenizeBlock(v.join(ee), h), f(), u({\n      type: \"blockquote\",\n      children: v\n    });\n  },\n      ee = \"\\n\",\n      te = \"\\t\",\n      ue = \" \",\n      ne = \">\";\n\n  var ae = function (r, e, t) {\n    var u,\n        n,\n        a,\n        o = this.options,\n        i = e.length + 1,\n        c = -1,\n        l = r.now(),\n        s = \"\",\n        f = \"\";\n\n    for (; ++c < i;) {\n      if ((u = e.charAt(c)) !== ce && u !== ie) {\n        c--;\n        break;\n      }\n\n      s += u;\n    }\n\n    a = 0;\n\n    for (; ++c <= i;) {\n      if ((u = e.charAt(c)) !== le) {\n        c--;\n        break;\n      }\n\n      s += u, a++;\n    }\n\n    if (a > se) return;\n    if (!a || !o.pedantic && e.charAt(c + 1) === le) return;\n    i = e.length + 1, n = \"\";\n\n    for (; ++c < i;) {\n      if ((u = e.charAt(c)) !== ce && u !== ie) {\n        c--;\n        break;\n      }\n\n      n += u;\n    }\n\n    if (!o.pedantic && 0 === n.length && u && u !== oe) return;\n    if (t) return !0;\n    s += n, n = \"\", f = \"\";\n\n    for (; ++c < i && (u = e.charAt(c)) && u !== oe;) if (u === ce || u === ie || u === le) {\n      for (; u === ce || u === ie;) n += u, u = e.charAt(++c);\n\n      for (; u === le;) n += u, u = e.charAt(++c);\n\n      for (; u === ce || u === ie;) n += u, u = e.charAt(++c);\n\n      c--;\n    } else f += n + u, n = \"\";\n\n    return l.column += s.length, l.offset += s.length, r(s += f + n)({\n      type: \"heading\",\n      depth: a,\n      children: this.tokenizeInline(f, l)\n    });\n  },\n      oe = \"\\n\",\n      ie = \"\\t\",\n      ce = \" \",\n      le = \"#\",\n      se = 6;\n\n  var fe = function (r, e, t) {\n    var u,\n        n,\n        a,\n        o,\n        i = -1,\n        c = e.length + 1,\n        l = \"\";\n\n    for (; ++i < c && ((u = e.charAt(i)) === De || u === de);) l += u;\n\n    if (u !== he && u !== me && u !== ge) return;\n    n = u, l += u, a = 1, o = \"\";\n\n    for (; ++i < c;) if ((u = e.charAt(i)) === n) a++, l += o + n, o = \"\";else {\n      if (u !== de) return a >= be && (!u || u === pe) ? (l += o, !!t || r(l)({\n        type: \"thematicBreak\"\n      })) : void 0;\n      o += u;\n    }\n  },\n      pe = \"\\n\",\n      De = \"\\t\",\n      de = \" \",\n      he = \"*\",\n      ge = \"_\",\n      me = \"-\",\n      be = 3;\n\n  var ve = function (r) {\n    var e,\n        t = 0,\n        u = 0,\n        n = r.charAt(t),\n        a = {};\n\n    for (; n in Ee;) e = Ee[n], u += e, e > 1 && (u = Math.floor(u / e) * e), a[u] = t, n = r.charAt(++t);\n\n    return {\n      indent: u,\n      stops: a\n    };\n  },\n      Ee = {\n    \" \": 1,\n    \"\\t\": 4\n  };\n\n  var we = function (r, e) {\n    var t,\n        u,\n        n,\n        a,\n        o = r.split(Ae),\n        i = o.length + 1,\n        c = 1 / 0,\n        l = [];\n    o.unshift(Ur(ye, e) + \"!\");\n\n    for (; i--;) if (u = ve(o[i]), l[i] = u.stops, 0 !== Wr(o[i]).length) {\n      if (!u.indent) {\n        c = 1 / 0;\n        break;\n      }\n\n      u.indent > 0 && u.indent < c && (c = u.indent);\n    }\n\n    if (c !== 1 / 0) for (i = o.length; i--;) {\n      for (n = l[i], t = c; t && !(t in n);) t--;\n\n      a = 0 !== Wr(o[i]).length && c && t !== c ? Ce : \"\", o[i] = a + o[i].slice(t in n ? n[t] + 1 : 0);\n    }\n    return o.shift(), o.join(Ae);\n  },\n      ye = \" \",\n      Ae = \"\\n\",\n      Ce = \"\\t\";\n\n  var qe = function (r, e, t) {\n    var u,\n        n,\n        a,\n        o,\n        i,\n        c,\n        l,\n        s,\n        f,\n        p,\n        D,\n        d,\n        h,\n        g,\n        m,\n        b,\n        v,\n        E,\n        w,\n        A,\n        C,\n        q,\n        F,\n        k,\n        x = this.options.commonmark,\n        L = this.options.pedantic,\n        B = this.blockTokenizers,\n        S = this.interruptList,\n        T = 0,\n        O = e.length,\n        N = null,\n        R = 0;\n\n    for (; T < O;) {\n      if ((o = e.charAt(T)) === Se) R += Oe - R % Oe;else {\n        if (o !== Le) break;\n        R++;\n      }\n      T++;\n    }\n\n    if (R >= Oe) return;\n    if (o = e.charAt(T), u = x ? je : ze, !0 === Ve[o]) i = o, a = !1;else {\n      for (a = !0, n = \"\"; T < O && (o = e.charAt(T), y(o));) n += o, T++;\n\n      if (o = e.charAt(T), !n || !0 !== u[o]) return;\n      N = parseInt(n, 10), i = o;\n    }\n    if ((o = e.charAt(++T)) !== Le && o !== Se) return;\n    if (t) return !0;\n    T = 0, g = [], m = [], b = [];\n\n    for (; T < O;) {\n      for (c = e.indexOf(Be, T), l = T, s = !1, k = !1, -1 === c && (c = O), F = T + Oe, R = 0; T < O;) {\n        if ((o = e.charAt(T)) === Se) R += Oe - R % Oe;else {\n          if (o !== Le) break;\n          R++;\n        }\n        T++;\n      }\n\n      if (R >= Oe && (k = !0), v && R >= v.indent && (k = !0), o = e.charAt(T), f = null, !k) {\n        if (!0 === Ve[o]) f = o, T++, R++;else {\n          for (n = \"\"; T < O && (o = e.charAt(T), y(o));) n += o, T++;\n\n          o = e.charAt(T), T++, n && !0 === u[o] && (f = o, R += n.length + 1);\n        }\n        if (f) if ((o = e.charAt(T)) === Se) R += Oe - R % Oe, T++;else if (o === Le) {\n          for (F = T + Oe; T < F && e.charAt(T) === Le;) T++, R++;\n\n          T === F && e.charAt(T) === Le && (T -= Oe - 1, R -= Oe - 1);\n        } else o !== Be && \"\" !== o && (f = null);\n      }\n\n      if (f) {\n        if (!L && i !== f) break;\n        s = !0;\n      } else x || k || e.charAt(l) !== Le ? x && v && (k = R >= v.indent || R > Oe) : k = !0, s = !1, T = l;\n\n      if (D = e.slice(l, c), p = l === T ? D : e.slice(T, c), (f === Fe || f === ke || f === xe) && B.thematicBreak.call(this, r, D, !0)) break;\n      if (d = h, h = !Wr(p).length, k && v) v.value = v.value.concat(b, D), m = m.concat(b, D), b = [];else if (s) 0 !== b.length && (v.value.push(\"\"), v.trail = b.concat()), v = {\n        value: [D],\n        indent: R,\n        trail: []\n      }, g.push(v), m = m.concat(b, D), b = [];else if (h) {\n        if (d) break;\n        b.push(D);\n      } else {\n        if (d) break;\n        if (Xr(S, B, this, [r, D, !0])) break;\n        v.value = v.value.concat(b, D), m = m.concat(b, D), b = [];\n      }\n      T = c + 1;\n    }\n\n    C = r(m.join(Be)).reset({\n      type: \"list\",\n      ordered: a,\n      start: N,\n      loose: null,\n      children: []\n    }), E = this.enterList(), w = this.enterBlock(), A = !1, T = -1, O = g.length;\n\n    for (; ++T < O;) v = g[T].value.join(Be), q = r.now(), (v = r(v)(Ge(this, v, q), C)).loose && (A = !0), v = g[T].trail.join(Be), T !== O - 1 && (v += Be), r(v);\n\n    return E(), w(), C.loose = A, C;\n  },\n      Fe = \"*\",\n      ke = \"_\",\n      xe = \"-\",\n      Le = \" \",\n      Be = \"\\n\",\n      Se = \"\\t\",\n      Te = \"x\",\n      Oe = 4,\n      Ne = /\\n\\n(?!\\s*$)/,\n      Re = /^\\[([ \\t]|x|X)][ \\t]/,\n      Ue = /^([ \\t]*)([*+-]|\\d+[.)])( {1,4}(?! )| |\\t|$|(?=\\n))([^\\n]*)/,\n      Pe = /^([ \\t]*)([*+-]|\\d+[.)])([ \\t]+)/,\n      Ie = /^( {1,4}|\\t)?/gm,\n      Ve = {};\n\n  Ve[Fe] = !0, Ve[\"+\"] = !0, Ve[xe] = !0;\n  var ze = {\n    \".\": !0\n  },\n      je = {};\n\n  function Ge(r, e, t) {\n    var u,\n        n,\n        a = r.offset,\n        o = null;\n    return e = (r.options.pedantic ? He : Me).apply(null, arguments), r.options.gfm && (u = e.match(Re)) && (n = u[0].length, o = u[1].toLowerCase() === Te, a[t.line] += n, e = e.slice(n)), {\n      type: \"listItem\",\n      loose: Ne.test(e) || e.charAt(e.length - 1) === Be,\n      checked: o,\n      children: r.tokenizeBlock(e, t)\n    };\n  }\n\n  function He(r, e, t) {\n    var u = r.offset,\n        n = t.line;\n    return e = e.replace(Pe, a), n = t.line, e.replace(Ie, a);\n\n    function a(r) {\n      return u[n] = (u[n] || 0) + r.length, n++, \"\";\n    }\n  }\n\n  function Me(r, e, t) {\n    var u,\n        n,\n        a,\n        o,\n        i,\n        c,\n        l,\n        s = r.offset,\n        f = t.line;\n\n    for (o = (e = e.replace(Ue, function (r, e, t, o, i) {\n      n = e + t + o, a = i, Number(t) < 10 && n.length % 2 == 1 && (t = Le + t);\n      return (u = e + Ur(Le, t.length) + o) + a;\n    })).split(Be), (i = we(e, ve(u).indent).split(Be))[0] = a, s[f] = (s[f] || 0) + n.length, f++, c = 0, l = o.length; ++c < l;) s[f] = (s[f] || 0) + o[c].length - i[c].length, f++;\n\n    return i.join(Be);\n  }\n\n  je[\".\"] = !0, je[\")\"] = !0;\n\n  var $e = function (r, e, t) {\n    var u,\n        n,\n        a,\n        o,\n        i,\n        c = r.now(),\n        l = e.length,\n        s = -1,\n        f = \"\";\n\n    for (; ++s < l;) {\n      if ((a = e.charAt(s)) !== _e || s >= Je) {\n        s--;\n        break;\n      }\n\n      f += a;\n    }\n\n    u = \"\", n = \"\";\n\n    for (; ++s < l;) {\n      if ((a = e.charAt(s)) === Ze) {\n        s--;\n        break;\n      }\n\n      a === _e || a === Ye ? n += a : (u += n + a, n = \"\");\n    }\n\n    if (c.column += f.length, c.offset += f.length, f += u + n, a = e.charAt(++s), o = e.charAt(++s), a !== Ze || !Qe[o]) return;\n    f += a, n = o, i = Qe[o];\n\n    for (; ++s < l;) {\n      if ((a = e.charAt(s)) !== o) {\n        if (a !== Ze) return;\n        s--;\n        break;\n      }\n\n      n += a;\n    }\n\n    if (t) return !0;\n    return r(f + n)({\n      type: \"heading\",\n      depth: i,\n      children: this.tokenizeInline(u, c)\n    });\n  },\n      Ze = \"\\n\",\n      Ye = \"\\t\",\n      _e = \" \",\n      Je = 3,\n      Qe = {};\n\n  Qe[\"=\"] = 1, Qe[\"-\"] = 2;\n\n  var Ke = \"<[A-Za-z][A-Za-z0-9\\\\-]*(?:\\\\s+[a-zA-Z_:][a-zA-Z0-9:._-]*(?:\\\\s*=\\\\s*(?:[^\\\"'=<>`\\\\u0000-\\\\u0020]+|'[^']*'|\\\"[^\\\"]*\\\"))?)*\\\\s*\\\\/?>\",\n      We = \"<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>\",\n      Xe = {\n    openCloseTag: new RegExp(\"^(?:\" + Ke + \"|\" + We + \")\"),\n    tag: new RegExp(\"^(?:\" + Ke + \"|\" + We + \"|\\x3c!----\\x3e|\\x3c!--(?:-?[^>-])(?:-?[^-])*--\\x3e|<[?].*?[?]>|<![A-Za-z]+\\\\s+[^>]*>|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>)\")\n  },\n      rt = Xe.openCloseTag,\n      et = function (r, e, t) {\n    var u,\n        n,\n        a,\n        o,\n        i,\n        c,\n        l,\n        s = this.options.blocks,\n        f = e.length,\n        p = 0,\n        D = [[/^<(script|pre|style)(?=(\\s|>|$))/i, /<\\/(script|pre|style)>/i, !0], [/^<!--/, /-->/, !0], [/^<\\?/, /\\?>/, !0], [/^<![A-Za-z]/, />/, !0], [/^<!\\[CDATA\\[/, /\\]\\]>/, !0], [new RegExp(\"^</?(\" + s.join(\"|\") + \")(?=(\\\\s|/?>|$))\", \"i\"), /^$/, !0], [new RegExp(rt.source + \"\\\\s*$\"), /^$/, !1]];\n\n    for (; p < f && ((o = e.charAt(p)) === tt || o === ut);) p++;\n\n    if (e.charAt(p) !== at) return;\n    u = -1 === (u = e.indexOf(nt, p + 1)) ? f : u, n = e.slice(p, u), a = -1, i = D.length;\n\n    for (; ++a < i;) if (D[a][0].test(n)) {\n      c = D[a];\n      break;\n    }\n\n    if (!c) return;\n    if (t) return c[2];\n    if (p = u, !c[1].test(n)) for (; p < f;) {\n      if (u = -1 === (u = e.indexOf(nt, p + 1)) ? f : u, n = e.slice(p + 1, u), c[1].test(n)) {\n        n && (p = u);\n        break;\n      }\n\n      p = u;\n    }\n    return l = e.slice(0, p), r(l)({\n      type: \"html\",\n      value: l\n    });\n  },\n      tt = \"\\t\",\n      ut = \" \",\n      nt = \"\\n\",\n      at = \"<\";\n\n  var ot = function (r) {\n    return String(r).replace(/\\s+/g, \" \");\n  };\n\n  var it = function (r) {\n    return ot(r).toLowerCase();\n  };\n\n  var ct = bt;\n  bt.notInList = !0, bt.notInBlock = !0;\n  var lt = \"\\\\\",\n      st = \"\\n\",\n      ft = \"\\t\",\n      pt = \" \",\n      Dt = \"[\",\n      dt = \"]\",\n      ht = \"^\",\n      gt = \":\",\n      mt = /^( {4}|\\t)?/gm;\n\n  function bt(r, e, t) {\n    var u,\n        n,\n        a,\n        o,\n        i,\n        c,\n        l,\n        s,\n        f,\n        p,\n        D,\n        d,\n        h = this.offset;\n\n    if (this.options.footnotes) {\n      for (u = 0, n = e.length, a = \"\", o = r.now(), i = o.line; u < n && (f = e.charAt(u), Br(f));) a += f, u++;\n\n      if (e.charAt(u) === Dt && e.charAt(u + 1) === ht) {\n        for (u = (a += Dt + ht).length, l = \"\"; u < n && (f = e.charAt(u)) !== dt;) f === lt && (l += f, u++, f = e.charAt(u)), l += f, u++;\n\n        if (l && e.charAt(u) === dt && e.charAt(u + 1) === gt) {\n          if (t) return !0;\n\n          for (p = it(l), u = (a += l + dt + gt).length; u < n && ((f = e.charAt(u)) === ft || f === pt);) a += f, u++;\n\n          for (o.column += a.length, o.offset += a.length, l = \"\", c = \"\", s = \"\"; u < n;) {\n            if ((f = e.charAt(u)) === st) {\n              for (s = f, u++; u < n && (f = e.charAt(u)) === st;) s += f, u++;\n\n              for (l += s, s = \"\"; u < n && (f = e.charAt(u)) === pt;) s += f, u++;\n\n              if (0 === s.length) break;\n              l += s;\n            }\n\n            l && (c += l, l = \"\"), c += f, u++;\n          }\n\n          return a += c, c = c.replace(mt, function (r) {\n            return h[i] = (h[i] || 0) + r.length, i++, \"\";\n          }), D = r(a), d = this.enterBlock(), c = this.tokenizeBlock(c, o), d(), D({\n            type: \"footnoteDefinition\",\n            identifier: p,\n            children: c\n          });\n        }\n      }\n    }\n  }\n\n  var vt = Ot;\n  Ot.notInList = !0, Ot.notInBlock = !0;\n  var Et = '\"',\n      wt = \"'\",\n      yt = \"\\\\\",\n      At = \"\\n\",\n      Ct = \"\\t\",\n      qt = \" \",\n      Ft = \"[\",\n      kt = \"]\",\n      xt = \"(\",\n      Lt = \")\",\n      Bt = \":\",\n      St = \"<\",\n      Tt = \">\";\n\n  function Ot(r, e, t) {\n    for (var u, n, a, o, i, c, l, s, f = this.options.commonmark, p = 0, D = e.length, d = \"\"; p < D && ((o = e.charAt(p)) === qt || o === Ct);) d += o, p++;\n\n    if ((o = e.charAt(p)) === Ft) {\n      for (p++, d += o, a = \"\"; p < D && (o = e.charAt(p)) !== kt;) o === yt && (a += o, p++, o = e.charAt(p)), a += o, p++;\n\n      if (a && e.charAt(p) === kt && e.charAt(p + 1) === Bt) {\n        for (c = a, p = (d += a + kt + Bt).length, a = \"\"; p < D && ((o = e.charAt(p)) === Ct || o === qt || o === At);) d += o, p++;\n\n        if (a = \"\", u = d, (o = e.charAt(p)) === St) {\n          for (p++; p < D && Nt(o = e.charAt(p));) a += o, p++;\n\n          if ((o = e.charAt(p)) === Nt.delimiter) d += St + a + o, p++;else {\n            if (f) return;\n            p -= a.length + 1, a = \"\";\n          }\n        }\n\n        if (!a) {\n          for (; p < D && Rt(o = e.charAt(p));) a += o, p++;\n\n          d += a;\n        }\n\n        if (a) {\n          for (l = a, a = \"\"; p < D && ((o = e.charAt(p)) === Ct || o === qt || o === At);) a += o, p++;\n\n          if (i = null, (o = e.charAt(p)) === Et ? i = Et : o === wt ? i = wt : o === xt && (i = Lt), i) {\n            if (!a) return;\n\n            for (p = (d += a + o).length, a = \"\"; p < D && (o = e.charAt(p)) !== i;) {\n              if (o === At) {\n                if (p++, (o = e.charAt(p)) === At || o === i) return;\n                a += At;\n              }\n\n              a += o, p++;\n            }\n\n            if ((o = e.charAt(p)) !== i) return;\n            n = d, d += a + o, p++, s = a, a = \"\";\n          } else a = \"\", p = d.length;\n\n          for (; p < D && ((o = e.charAt(p)) === Ct || o === qt);) d += o, p++;\n\n          return (o = e.charAt(p)) && o !== At ? void 0 : !!t || (u = r(u).test().end, l = this.decode.raw(this.unescape(l), u, {\n            nonTerminated: !1\n          }), s && (n = r(n).test().end, s = this.decode.raw(this.unescape(s), n)), r(d)({\n            type: \"definition\",\n            identifier: it(c),\n            title: s || null,\n            url: l\n          }));\n        }\n      }\n    }\n  }\n\n  function Nt(r) {\n    return r !== Tt && r !== Ft && r !== kt;\n  }\n\n  function Rt(r) {\n    return r !== Ft && r !== kt && !Br(r);\n  }\n\n  Nt.delimiter = Tt;\n\n  var Ut = function (r, e, t) {\n    var u, n, a, o, i, c, l, s, f, p, D, d, h, g, m, b, v, E, w, y, A, C, q, F;\n    if (!this.options.gfm) return;\n    u = 0, E = 0, c = e.length + 1, l = [];\n\n    for (; u < c;) {\n      if (C = e.indexOf(Ht, u), q = e.indexOf(zt, u + 1), -1 === C && (C = e.length), -1 === q || q > C) {\n        if (E < Zt) return;\n        break;\n      }\n\n      l.push(e.slice(u, C)), E++, u = C + 1;\n    }\n\n    o = l.join(Ht), n = l.splice(1, 1)[0] || [], u = 0, c = n.length, E--, a = !1, D = [];\n\n    for (; u < c;) {\n      if ((f = n.charAt(u)) === zt) {\n        if (p = null, !1 === a) {\n          if (!1 === F) return;\n        } else D.push(a), a = !1;\n\n        F = !1;\n      } else if (f === Vt) p = !0, a = a || Qt;else if (f === jt) a = a === Yt ? _t : p && a === Qt ? Jt : Yt;else if (!Br(f)) return;\n\n      u++;\n    }\n\n    !1 !== a && D.push(a);\n    if (D.length < $t) return;\n    if (t) return !0;\n    v = -1, y = [], A = r(o).reset({\n      type: \"table\",\n      align: D,\n      children: y\n    });\n\n    for (; ++v < E;) {\n      for (w = l[v], i = {\n        type: \"tableRow\",\n        children: []\n      }, v && r(Ht), r(w).reset(i, A), c = w.length + 1, u = 0, s = \"\", d = \"\", h = !0, g = null, m = null; u < c;) if ((f = w.charAt(u)) !== Mt && f !== Gt) {\n        if (\"\" === f || f === zt) {\n          if (h) r(f);else {\n            if (f && m) {\n              s += f, u++;\n              continue;\n            }\n\n            !d && !f || h || (o = d, s.length > 1 && (f ? (o += s.slice(0, s.length - 1), s = s.charAt(s.length - 1)) : (o += s, s = \"\")), b = r.now(), r(o)({\n              type: \"tableCell\",\n              children: this.tokenizeInline(d, b)\n            }, i)), r(s + f), s = \"\", d = \"\";\n          }\n        } else if (s && (d += s, s = \"\"), d += f, f === Pt && u !== c - 2 && (d += w.charAt(u + 1), u++), f === It) {\n          for (g = 1; w.charAt(u + 1) === f;) d += f, u++, g++;\n\n          m ? g >= m && (m = 0) : m = g;\n        }\n        h = !1, u++;\n      } else d ? s += f : r(f), u++;\n\n      v || r(Ht + n);\n    }\n\n    return A;\n  },\n      Pt = \"\\\\\",\n      It = \"`\",\n      Vt = \"-\",\n      zt = \"|\",\n      jt = \":\",\n      Gt = \" \",\n      Ht = \"\\n\",\n      Mt = \"\\t\",\n      $t = 1,\n      Zt = 2,\n      Yt = \"left\",\n      _t = \"center\",\n      Jt = \"right\",\n      Qt = null;\n\n  var Kt = function (r, e, t) {\n    var u,\n        n,\n        a,\n        o,\n        i,\n        c = this.options,\n        l = c.commonmark,\n        s = c.gfm,\n        f = this.blockTokenizers,\n        p = this.interruptParagraph,\n        D = e.indexOf(Wt),\n        d = e.length;\n\n    for (; D < d;) {\n      if (-1 === D) {\n        D = d;\n        break;\n      }\n\n      if (e.charAt(D + 1) === Wt) break;\n\n      if (l) {\n        for (o = 0, u = D + 1; u < d;) {\n          if ((a = e.charAt(u)) === Xt) {\n            o = eu;\n            break;\n          }\n\n          if (a !== ru) break;\n          o++, u++;\n        }\n\n        if (o >= eu) {\n          D = e.indexOf(Wt, D + 1);\n          continue;\n        }\n      }\n\n      if (n = e.slice(D + 1), Xr(p, f, this, [r, n, !0])) break;\n      if (f.list.call(this, r, n, !0) && (this.inList || l || s && !y(Wr.left(n).charAt(0)))) break;\n\n      if (u = D, -1 !== (D = e.indexOf(Wt, D + 1)) && \"\" === Wr(e.slice(u, D))) {\n        D = u;\n        break;\n      }\n    }\n\n    if (n = e.slice(0, D), \"\" === Wr(n)) return r(n), null;\n    if (t) return !0;\n    return i = r.now(), n = Pr(n), r(n)({\n      type: \"paragraph\",\n      children: this.tokenizeInline(n, i)\n    });\n  },\n      Wt = \"\\n\",\n      Xt = \"\\t\",\n      ru = \" \",\n      eu = 4;\n\n  var tu = function (r, e) {\n    return r.indexOf(\"\\\\\", e);\n  };\n\n  var uu = nu;\n\n  function nu(r, e, t) {\n    var u, n;\n    if (\"\\\\\" === e.charAt(0) && (u = e.charAt(1), -1 !== this.escape.indexOf(u))) return !!t || (n = \"\\n\" === u ? {\n      type: \"break\"\n    } : {\n      type: \"text\",\n      value: u\n    }, r(\"\\\\\" + u)(n));\n  }\n\n  nu.locator = tu;\n\n  var au = function (r, e) {\n    return r.indexOf(\"<\", e);\n  };\n\n  var ou = Du;\n  Du.locator = au, Du.notInLink = !0;\n  var iu = \"<\",\n      cu = \">\",\n      lu = \"@\",\n      su = \"/\",\n      fu = \"mailto:\",\n      pu = fu.length;\n\n  function Du(r, e, t) {\n    var u, n, a, o, i, c, l, s, f, p, D;\n\n    if (e.charAt(0) === iu) {\n      for (this, u = \"\", n = e.length, a = 0, o = \"\", c = !1, l = \"\", a++, u = iu; a < n && (i = e.charAt(a), !(Br(i) || i === cu || i === lu || \":\" === i && e.charAt(a + 1) === su));) o += i, a++;\n\n      if (o) {\n        if (l += o, o = \"\", l += i = e.charAt(a), a++, i === lu) c = !0;else {\n          if (\":\" !== i || e.charAt(a + 1) !== su) return;\n          l += su, a++;\n        }\n\n        for (; a < n && (i = e.charAt(a), !Br(i) && i !== cu);) o += i, a++;\n\n        if (i = e.charAt(a), o && i === cu) return !!t || (f = l += o, u += l + i, (s = r.now()).column++, s.offset++, c && (l.slice(0, pu).toLowerCase() === fu ? (f = f.substr(pu), s.column += pu, s.offset += pu) : l = fu + l), p = this.inlineTokenizers, this.inlineTokenizers = {\n          text: p.text\n        }, D = this.enterLink(), f = this.tokenizeInline(f, s), this.inlineTokenizers = p, D(), r(u)({\n          type: \"link\",\n          title: null,\n          url: L(l, {\n            nonTerminated: !1\n          }),\n          children: f\n        }));\n      }\n    }\n  }\n\n  var du = function (r, e) {\n    var t,\n        u = hu.length,\n        n = -1,\n        a = -1;\n    if (!this.options.gfm) return -1;\n\n    for (; ++n < u;) -1 !== (t = r.indexOf(hu[n], e)) && (t < a || -1 === a) && (a = t);\n\n    return a;\n  },\n      hu = [\"https://\", \"http://\", \"mailto:\"];\n\n  var gu = Fu;\n  Fu.locator = du, Fu.notInLink = !0;\n  var mu = \"[\",\n      bu = \"]\",\n      vu = \"(\",\n      Eu = \")\",\n      wu = \"<\",\n      yu = \"@\",\n      Au = \"mailto:\",\n      Cu = [\"http://\", \"https://\", Au],\n      qu = Cu.length;\n\n  function Fu(r, e, t) {\n    var u, n, a, o, i, c, l, s, f, p, D, d;\n\n    if (this.options.gfm) {\n      for (u = \"\", o = -1, s = qu; ++o < s;) if (c = Cu[o], (l = e.slice(0, c.length)).toLowerCase() === c) {\n        u = l;\n        break;\n      }\n\n      if (u) {\n        for (o = u.length, s = e.length, f = \"\", p = 0; o < s && (a = e.charAt(o), !Br(a) && a !== wu) && (\".\" !== a && \",\" !== a && \":\" !== a && \";\" !== a && '\"' !== a && \"'\" !== a && \")\" !== a && \"]\" !== a || (D = e.charAt(o + 1)) && !Br(D)) && (a !== vu && a !== mu || p++, a !== Eu && a !== bu || !(--p < 0));) f += a, o++;\n\n        if (f) {\n          if (n = u += f, c === Au) {\n            if (-1 === (i = f.indexOf(yu)) || i === s - 1) return;\n            n = n.substr(Au.length);\n          }\n\n          return !!t || (d = this.enterLink(), n = this.tokenizeInline(n, r.now()), d(), r(u)({\n            type: \"link\",\n            title: null,\n            url: L(u, {\n              nonTerminated: !1\n            }),\n            children: n\n          }));\n        }\n      }\n    }\n  }\n\n  var ku = Xe.tag,\n      xu = Su;\n  Su.locator = au;\n  var Lu = /^<a /i,\n      Bu = /^<\\/a>/i;\n\n  function Su(r, e, t) {\n    var u,\n        n,\n        a = e.length;\n    if (!(\"<\" !== e.charAt(0) || a < 3) && (u = e.charAt(1), (C(u) || \"?\" === u || \"!\" === u || \"/\" === u) && (n = e.match(ku)))) return !!t || (n = n[0], !this.inLink && Lu.test(n) ? this.inLink = !0 : this.inLink && Bu.test(n) && (this.inLink = !1), r(n)({\n      type: \"html\",\n      value: n\n    }));\n  }\n\n  var Tu = function (r, e) {\n    var t = r.indexOf(\"[\", e),\n        u = r.indexOf(\"![\", e);\n    if (-1 === u) return t;\n    return t < u ? t : u;\n  };\n\n  var Ou = $u;\n  $u.locator = Tu;\n  var Nu = {}.hasOwnProperty,\n      Ru = \"\\\\\",\n      Uu = \"[\",\n      Pu = \"]\",\n      Iu = \"(\",\n      Vu = \")\",\n      zu = \"<\",\n      ju = \">\",\n      Gu = \"`\",\n      Hu = {\n    '\"': '\"',\n    \"'\": \"'\"\n  },\n      Mu = {};\n\n  function $u(r, e, t) {\n    var u,\n        n,\n        a,\n        o,\n        i,\n        c,\n        l,\n        s,\n        f,\n        p,\n        D,\n        d,\n        h,\n        g,\n        m,\n        b,\n        v,\n        E,\n        w,\n        y = \"\",\n        A = 0,\n        C = e.charAt(0),\n        q = this.options.pedantic,\n        F = this.options.commonmark,\n        k = this.options.gfm;\n\n    if (\"!\" === C && (f = !0, y = C, C = e.charAt(++A)), C === Uu && (f || !this.inLink)) {\n      for (y += C, m = \"\", A++, d = e.length, g = 0, (v = r.now()).column += A, v.offset += A; A < d;) {\n        if (c = C = e.charAt(A), C === Gu) {\n          for (n = 1; e.charAt(A + 1) === Gu;) c += C, A++, n++;\n\n          a ? n >= a && (a = 0) : a = n;\n        } else if (C === Ru) A++, c += e.charAt(A);else if (a && !k || C !== Uu) {\n          if ((!a || k) && C === Pu) {\n            if (!g) {\n              if (!q) for (; A < d && (C = e.charAt(A + 1), Br(C));) c += C, A++;\n              if (e.charAt(A + 1) !== Iu) return;\n              c += Iu, u = !0, A++;\n              break;\n            }\n\n            g--;\n          }\n        } else g++;\n\n        m += c, c = \"\", A++;\n      }\n\n      if (u) {\n        for (p = m, y += m + c, A++; A < d && (C = e.charAt(A), Br(C));) y += C, A++;\n\n        if (C = e.charAt(A), s = F ? Mu : Hu, m = \"\", o = y, C === zu) {\n          for (A++, o += zu; A < d && (C = e.charAt(A)) !== ju;) {\n            if (F && \"\\n\" === C) return;\n            m += C, A++;\n          }\n\n          if (e.charAt(A) !== ju) return;\n          y += zu + m + ju, b = m, A++;\n        } else {\n          for (C = null, c = \"\"; A < d && (C = e.charAt(A), !c || !Nu.call(s, C));) {\n            if (Br(C)) {\n              if (!q) break;\n              c += C;\n            } else {\n              if (C === Iu) g++;else if (C === Vu) {\n                if (0 === g) break;\n                g--;\n              }\n              m += c, c = \"\", C === Ru && (m += Ru, C = e.charAt(++A)), m += C;\n            }\n\n            A++;\n          }\n\n          b = m, A = (y += m).length;\n        }\n\n        for (m = \"\"; A < d && (C = e.charAt(A), Br(C));) m += C, A++;\n\n        if (C = e.charAt(A), y += m, m && Nu.call(s, C)) if (A++, y += C, m = \"\", D = s[C], i = y, F) {\n          for (; A < d && (C = e.charAt(A)) !== D;) C === Ru && (m += Ru, C = e.charAt(++A)), A++, m += C;\n\n          if ((C = e.charAt(A)) !== D) return;\n\n          for (h = m, y += m + C, A++; A < d && (C = e.charAt(A), Br(C));) y += C, A++;\n        } else for (c = \"\"; A < d;) {\n          if ((C = e.charAt(A)) === D) l && (m += D + c, c = \"\"), l = !0;else if (l) {\n            if (C === Vu) {\n              y += m + D + c, h = m;\n              break;\n            }\n\n            Br(C) ? c += C : (m += D + c + C, c = \"\", l = !1);\n          } else m += C;\n          A++;\n        }\n        if (e.charAt(A) === Vu) return !!t || (y += Vu, b = this.decode.raw(this.unescape(b), r(o).test().end, {\n          nonTerminated: !1\n        }), h && (i = r(i).test().end, h = this.decode.raw(this.unescape(h), i)), w = {\n          type: f ? \"image\" : \"link\",\n          title: h || null,\n          url: b\n        }, f ? w.alt = this.decode.raw(this.unescape(p), v) || null : (E = this.enterLink(), w.children = this.tokenizeInline(p, v), E()), r(y)(w));\n      }\n    }\n  }\n\n  Mu['\"'] = '\"', Mu[\"'\"] = \"'\", Mu[Iu] = Vu;\n  var Zu = un;\n  un.locator = Tu;\n  var Yu = \"link\",\n      _u = \"image\",\n      Ju = \"footnote\",\n      Qu = \"shortcut\",\n      Ku = \"collapsed\",\n      Wu = \"full\",\n      Xu = \"^\",\n      rn = \"\\\\\",\n      en = \"[\",\n      tn = \"]\";\n\n  function un(r, e, t) {\n    var u,\n        n,\n        a,\n        o,\n        i,\n        c,\n        l,\n        s,\n        f = e.charAt(0),\n        p = 0,\n        D = e.length,\n        d = \"\",\n        h = \"\",\n        g = Yu,\n        m = Qu;\n\n    if (\"!\" === f && (g = _u, h = f, f = e.charAt(++p)), f === en) {\n      if (p++, h += f, c = \"\", this.options.footnotes && e.charAt(p) === Xu) {\n        if (g === _u) return;\n        h += Xu, p++, g = Ju;\n      }\n\n      for (s = 0; p < D;) {\n        if ((f = e.charAt(p)) === en) l = !0, s++;else if (f === tn) {\n          if (!s) break;\n          s--;\n        }\n        f === rn && (c += rn, f = e.charAt(++p)), c += f, p++;\n      }\n\n      if (d = c, u = c, (f = e.charAt(p)) === tn) {\n        for (p++, d += f, c = \"\"; p < D && (f = e.charAt(p), Br(f));) c += f, p++;\n\n        if (f = e.charAt(p), g !== Ju && f === en) {\n          for (n = \"\", c += f, p++; p < D && (f = e.charAt(p)) !== en && f !== tn;) f === rn && (n += rn, f = e.charAt(++p)), n += f, p++;\n\n          (f = e.charAt(p)) === tn ? (m = n ? Wu : Ku, c += n + f, p++) : n = \"\", d += c, c = \"\";\n        } else {\n          if (!u) return;\n          n = u;\n        }\n\n        if (m === Wu || !l) return d = h + d, g === Yu && this.inLink ? null : !!t || (g === Ju && -1 !== u.indexOf(\" \") ? r(d)({\n          type: \"footnote\",\n          children: this.tokenizeInline(u, r.now())\n        }) : ((a = r.now()).column += h.length, a.offset += h.length, o = {\n          type: g + \"Reference\",\n          identifier: it(n = m === Wu ? n : u)\n        }, g !== Yu && g !== _u || (o.referenceType = m), g === Yu ? (i = this.enterLink(), o.children = this.tokenizeInline(u, a), i()) : g === _u && (o.alt = this.decode.raw(this.unescape(u), a) || null), r(d)(o)));\n      }\n    }\n  }\n\n  var nn = function (r, e) {\n    var t = r.indexOf(\"**\", e),\n        u = r.indexOf(\"__\", e);\n    if (-1 === u) return t;\n    if (-1 === t) return u;\n    return u < t ? u : t;\n  };\n\n  var an = ln;\n  ln.locator = nn;\n  var on = \"*\",\n      cn = \"_\";\n\n  function ln(r, e, t) {\n    var u,\n        n,\n        a,\n        o,\n        i,\n        c,\n        l,\n        s = 0,\n        f = e.charAt(s);\n    if (!(f !== on && f !== cn || e.charAt(++s) !== f || (n = this.options.pedantic, i = (a = f) + a, c = e.length, s++, o = \"\", f = \"\", n && Br(e.charAt(s))))) for (; s < c;) {\n      if (l = f, !((f = e.charAt(s)) !== a || e.charAt(s + 1) !== a || n && Br(l)) && (f = e.charAt(s + 2)) !== a) {\n        if (!Wr(o)) return;\n        return !!t || ((u = r.now()).column += 2, u.offset += 2, r(i + o + i)({\n          type: \"strong\",\n          children: this.tokenizeInline(o, u)\n        }));\n      }\n\n      n || \"\\\\\" !== f || (o += f, f = e.charAt(++s)), o += f, s++;\n    }\n  }\n\n  var sn = function (r) {\n    return pn.test(\"number\" == typeof r ? fn(r) : r.charAt(0));\n  },\n      fn = String.fromCharCode,\n      pn = /\\w/;\n\n  var Dn = function (r, e) {\n    var t = r.indexOf(\"*\", e),\n        u = r.indexOf(\"_\", e);\n    if (-1 === u) return t;\n    if (-1 === t) return u;\n    return u < t ? u : t;\n  };\n\n  var dn = mn;\n  mn.locator = Dn;\n  var hn = \"*\",\n      gn = \"_\";\n\n  function mn(r, e, t) {\n    var u,\n        n,\n        a,\n        o,\n        i,\n        c,\n        l,\n        s = 0,\n        f = e.charAt(s);\n    if (!(f !== hn && f !== gn || (n = this.options.pedantic, i = f, a = f, c = e.length, s++, o = \"\", f = \"\", n && Br(e.charAt(s))))) for (; s < c;) {\n      if (l = f, !((f = e.charAt(s)) !== a || n && Br(l))) {\n        if ((f = e.charAt(++s)) !== a) {\n          if (!Wr(o) || l === a) return;\n\n          if (!n && a === gn && sn(f)) {\n            o += a;\n            continue;\n          }\n\n          return !!t || ((u = r.now()).column++, u.offset++, r(i + o + a)({\n            type: \"emphasis\",\n            children: this.tokenizeInline(o, u)\n          }));\n        }\n\n        o += a;\n      }\n\n      n || \"\\\\\" !== f || (o += f, f = e.charAt(++s)), o += f, s++;\n    }\n  }\n\n  var bn = function (r, e) {\n    return r.indexOf(\"~~\", e);\n  };\n\n  var vn = yn;\n  yn.locator = bn;\n  var En = \"~\",\n      wn = \"~~\";\n\n  function yn(r, e, t) {\n    var u,\n        n,\n        a,\n        o = \"\",\n        i = \"\",\n        c = \"\",\n        l = \"\";\n    if (this.options.gfm && e.charAt(0) === En && e.charAt(1) === En && !Br(e.charAt(2))) for (u = 1, n = e.length, (a = r.now()).column += 2, a.offset += 2; ++u < n;) {\n      if (!((o = e.charAt(u)) !== En || i !== En || c && Br(c))) return !!t || r(wn + l + wn)({\n        type: \"delete\",\n        children: this.tokenizeInline(l, a)\n      });\n      l += i, c = i, i = o;\n    }\n  }\n\n  var An = function (r, e) {\n    return r.indexOf(\"`\", e);\n  };\n\n  var Cn = Fn;\n  Fn.locator = An;\n  var qn = \"`\";\n\n  function Fn(r, e, t) {\n    for (var u, n, a, o, i, c, l, s, f = e.length, p = 0, D = \"\", d = \"\"; p < f && e.charAt(p) === qn;) D += qn, p++;\n\n    if (D) {\n      for (i = D, o = p, D = \"\", s = e.charAt(p), a = 0; p < f;) {\n        if (c = s, s = e.charAt(p + 1), c === qn ? (a++, d += c) : (a = 0, D += c), a && s !== qn) {\n          if (a === o) {\n            i += D + d, l = !0;\n            break;\n          }\n\n          D += d, d = \"\";\n        }\n\n        p++;\n      }\n\n      if (!l) {\n        if (o % 2 != 0) return;\n        D = \"\";\n      }\n\n      if (t) return !0;\n\n      for (u = \"\", n = \"\", f = D.length, p = -1; ++p < f;) c = D.charAt(p), Br(c) ? n += c : (n && (u && (u += n), n = \"\"), u += c);\n\n      return r(i)({\n        type: \"inlineCode\",\n        value: u\n      });\n    }\n  }\n\n  var kn = function (r, e) {\n    var t = r.indexOf(\"\\n\", e);\n\n    for (; t > e && \" \" === r.charAt(t - 1);) t--;\n\n    return t;\n  };\n\n  var xn = Bn;\n  Bn.locator = kn;\n  var Ln = 2;\n\n  function Bn(r, e, t) {\n    for (var u, n = e.length, a = -1, o = \"\"; ++a < n;) {\n      if (\"\\n\" === (u = e.charAt(a))) {\n        if (a < Ln) return;\n        return !!t || r(o += u)({\n          type: \"break\"\n        });\n      }\n\n      if (\" \" !== u) return;\n      o += u;\n    }\n  }\n\n  var Sn = function (r, e, t) {\n    var u, n, a, o, i, c, l, s, f, p;\n    if (t) return !0;\n    u = this.inlineMethods, o = u.length, n = this.inlineTokenizers, a = -1, f = e.length;\n\n    for (; ++a < o;) \"text\" !== (s = u[a]) && n[s] && ((l = n[s].locator) || r.file.fail(\"Missing locator: `\" + s + \"`\"), -1 !== (c = l.call(this, e, 1)) && c < f && (f = c));\n\n    i = e.slice(0, f), p = r.now(), this.decode(i, p, function (e, t, u) {\n      r(u || e)({\n        type: \"text\",\n        value: e\n      });\n    });\n  };\n\n  var Tn = On;\n\n  function On(r, e) {\n    this.file = e, this.offset = {}, this.options = n(this.options), this.setOptions({}), this.inList = !1, this.inBlock = !1, this.inLink = !1, this.atStart = !0, this.toOffset = d(e).toOffset, this.unescape = h(this, \"escape\"), this.decode = sr(this);\n  }\n\n  var Nn = On.prototype;\n\n  function Rn(r) {\n    var e,\n        t = [];\n\n    for (e in r) t.push(e);\n\n    return t;\n  }\n\n  Nn.setOptions = yr, Nn.parse = kr, Nn.options = wr, Nn.exitStart = D(\"atStart\", !0), Nn.enterList = D(\"inList\", !1), Nn.enterLink = D(\"inLink\", !1), Nn.enterBlock = D(\"inBlock\", !1), Nn.interruptParagraph = [[\"thematicBreak\"], [\"atxHeading\"], [\"fencedCode\"], [\"blockquote\"], [\"html\"], [\"setextHeading\", {\n    commonmark: !1\n  }], [\"definition\", {\n    commonmark: !1\n  }], [\"footnote\", {\n    commonmark: !1\n  }]], Nn.interruptList = [[\"atxHeading\", {\n    pedantic: !1\n  }], [\"fencedCode\", {\n    pedantic: !1\n  }], [\"thematicBreak\", {\n    pedantic: !1\n  }], [\"definition\", {\n    commonmark: !1\n  }], [\"footnote\", {\n    commonmark: !1\n  }]], Nn.interruptBlockquote = [[\"indentedCode\", {\n    commonmark: !0\n  }], [\"fencedCode\", {\n    commonmark: !0\n  }], [\"atxHeading\", {\n    commonmark: !0\n  }], [\"setextHeading\", {\n    commonmark: !0\n  }], [\"thematicBreak\", {\n    commonmark: !0\n  }], [\"html\", {\n    commonmark: !0\n  }], [\"list\", {\n    commonmark: !0\n  }], [\"definition\", {\n    commonmark: !1\n  }], [\"footnote\", {\n    commonmark: !1\n  }]], Nn.blockTokenizers = {\n    newline: Or,\n    indentedCode: Vr,\n    fencedCode: Mr,\n    blockquote: re,\n    atxHeading: ae,\n    thematicBreak: fe,\n    list: qe,\n    setextHeading: $e,\n    html: et,\n    footnote: ct,\n    definition: vt,\n    table: Ut,\n    paragraph: Kt\n  }, Nn.inlineTokenizers = {\n    escape: uu,\n    autoLink: ou,\n    url: gu,\n    html: xu,\n    link: Ou,\n    reference: Zu,\n    strong: an,\n    emphasis: dn,\n    deletion: vn,\n    code: Cn,\n    break: xn,\n    text: Sn\n  }, Nn.blockMethods = Rn(Nn.blockTokenizers), Nn.inlineMethods = Rn(Nn.inlineTokenizers), Nn.tokenizeBlock = fr(\"block\"), Nn.tokenizeInline = fr(\"inline\"), Nn.tokenizeFactory = fr;\n  var Un = Pn;\n\n  function Pn(r) {\n    var e = p(Tn);\n    e.prototype.options = n(e.prototype.options, this.data(\"settings\"), r), this.Parser = e;\n  }\n\n  Pn.Parser = Tn;\n\n  var In = Object.prototype.hasOwnProperty,\n      Vn = Object.prototype.toString,\n      zn = function (r) {\n    return \"function\" == typeof Array.isArray ? Array.isArray(r) : \"[object Array]\" === Vn.call(r);\n  },\n      jn = function (r) {\n    if (!r || \"[object Object]\" !== Vn.call(r)) return !1;\n    var e,\n        t = In.call(r, \"constructor\"),\n        u = r.constructor && r.constructor.prototype && In.call(r.constructor.prototype, \"isPrototypeOf\");\n    if (r.constructor && !t && !u) return !1;\n\n    for (e in r);\n\n    return void 0 === e || In.call(r, e);\n  },\n      Gn = function e() {\n    var t,\n        u,\n        n,\n        a,\n        o,\n        i,\n        c = arguments[0],\n        l = 1,\n        s = arguments.length,\n        f = !1;\n\n    for (\"boolean\" == typeof c && (f = c, c = arguments[1] || {}, l = 2), (null == c || \"object\" !== r(c) && \"function\" != typeof c) && (c = {}); l < s; ++l) if (null != (t = arguments[l])) for (u in t) n = c[u], c !== (a = t[u]) && (f && a && (jn(a) || (o = zn(a))) ? (o ? (o = !1, i = n && zn(n) ? n : []) : i = n && jn(n) ? n : {}, c[u] = e(f, i, a)) : void 0 !== a && (c[u] = a));\n\n    return c;\n  },\n      Hn = function (r) {\n    if (r) throw r;\n  };\n\n  var Mn = \"undefined\" != typeof global ? global : \"undefined\" != typeof self ? self : \"undefined\" != typeof window ? window : {};\n\n  function $n() {\n    throw new Error(\"setTimeout has not been defined\");\n  }\n\n  function Zn() {\n    throw new Error(\"clearTimeout has not been defined\");\n  }\n\n  var Yn = $n,\n      _n = Zn;\n\n  function Jn(r) {\n    if (Yn === setTimeout) return setTimeout(r, 0);\n    if ((Yn === $n || !Yn) && setTimeout) return Yn = setTimeout, setTimeout(r, 0);\n\n    try {\n      return Yn(r, 0);\n    } catch (e) {\n      try {\n        return Yn.call(null, r, 0);\n      } catch (e) {\n        return Yn.call(this, r, 0);\n      }\n    }\n  }\n\n  \"function\" == typeof Mn.setTimeout && (Yn = setTimeout), \"function\" == typeof Mn.clearTimeout && (_n = clearTimeout);\n  var Qn,\n      Kn = [],\n      Wn = !1,\n      Xn = -1;\n\n  function ra() {\n    Wn && Qn && (Wn = !1, Qn.length ? Kn = Qn.concat(Kn) : Xn = -1, Kn.length && ea());\n  }\n\n  function ea() {\n    if (!Wn) {\n      var r = Jn(ra);\n      Wn = !0;\n\n      for (var e = Kn.length; e;) {\n        for (Qn = Kn, Kn = []; ++Xn < e;) Qn && Qn[Xn].run();\n\n        Xn = -1, e = Kn.length;\n      }\n\n      Qn = null, Wn = !1, function (r) {\n        if (_n === clearTimeout) return clearTimeout(r);\n        if ((_n === Zn || !_n) && clearTimeout) return _n = clearTimeout, clearTimeout(r);\n\n        try {\n          _n(r);\n        } catch (e) {\n          try {\n            return _n.call(null, r);\n          } catch (e) {\n            return _n.call(this, r);\n          }\n        }\n      }(r);\n    }\n  }\n\n  function ta(r, e) {\n    this.fun = r, this.array = e;\n  }\n\n  ta.prototype.run = function () {\n    this.fun.apply(null, this.array);\n  };\n\n  function ua() {}\n\n  var na = ua,\n      aa = ua,\n      oa = ua,\n      ia = ua,\n      ca = ua,\n      la = ua,\n      sa = ua;\n\n  var fa = Mn.performance || {},\n      pa = fa.now || fa.mozNow || fa.msNow || fa.oNow || fa.webkitNow || function () {\n    return new Date().getTime();\n  };\n\n  var Da = new Date();\n  var da = {\n    nextTick: function (r) {\n      var e = new Array(arguments.length - 1);\n      if (arguments.length > 1) for (var t = 1; t < arguments.length; t++) e[t - 1] = arguments[t];\n      Kn.push(new ta(r, e)), 1 !== Kn.length || Wn || Jn(ea);\n    },\n    title: \"browser\",\n    browser: !0,\n    env: {},\n    argv: [],\n    version: \"\",\n    versions: {},\n    on: na,\n    addListener: aa,\n    once: oa,\n    off: ia,\n    removeListener: ca,\n    removeAllListeners: la,\n    emit: sa,\n    binding: function (r) {\n      throw new Error(\"process.binding is not supported\");\n    },\n    cwd: function () {\n      return \"/\";\n    },\n    chdir: function (r) {\n      throw new Error(\"process.chdir is not supported\");\n    },\n    umask: function () {\n      return 0;\n    },\n    hrtime: function (r) {\n      var e = .001 * pa.call(fa),\n          t = Math.floor(e),\n          u = Math.floor(e % 1 * 1e9);\n      return r && (t -= r[0], (u -= r[1]) < 0 && (t--, u += 1e9)), [t, u];\n    },\n    platform: \"browser\",\n    release: {},\n    config: {},\n    uptime: function () {\n      return (new Date() - Da) / 1e3;\n    }\n  },\n      ha = {},\n      ga = Object.freeze({\n    default: ha\n  }),\n      ma = ga && ha || ga;\n\n  var ba = function (r, e) {\n    if (\"string\" != typeof r) return r;\n    if (0 === r.length) return r;\n    var t = ma.basename(r, ma.extname(r)) + e;\n    return ma.join(ma.dirname(r), t);\n  },\n      va = {}.hasOwnProperty,\n      Ea = function (e) {\n    if (!e || \"object\" !== r(e)) return null;\n    if (va.call(e, \"position\") || va.call(e, \"type\")) return ya(e.position);\n    if (va.call(e, \"start\") || va.call(e, \"end\")) return ya(e);\n    if (va.call(e, \"line\") || va.call(e, \"column\")) return wa(e);\n    return null;\n  };\n\n  function wa(e) {\n    return e && \"object\" === r(e) || (e = {}), Aa(e.line) + \":\" + Aa(e.column);\n  }\n\n  function ya(e) {\n    return e && \"object\" === r(e) || (e = {}), wa(e.start) + \"-\" + wa(e.end);\n  }\n\n  function Aa(r) {\n    return r && \"number\" == typeof r ? r : 1;\n  }\n\n  var Ca = function (r) {\n    return null != r && (qa(r) || function (r) {\n      return \"function\" == typeof r.readFloatLE && \"function\" == typeof r.slice && qa(r.slice(0, 0));\n    }(r) || !!r._isBuffer);\n  };\n\n  function qa(r) {\n    return !!r.constructor && \"function\" == typeof r.constructor.isBuffer && r.constructor.isBuffer(r);\n  }\n\n  var Fa = Ba,\n      ka = {}.hasOwnProperty,\n      xa = Ba.prototype;\n  xa.toString = function (r) {\n    var e = this.contents || \"\";\n    return Ca(e) ? e.toString(r) : String(e);\n  }, xa.message = Sa, xa.info = function () {\n    var r = this.message.apply(this, arguments);\n    return r.fatal = null, r;\n  }, xa.fail = function () {\n    var r = this.message.apply(this, arguments);\n    throw r.fatal = !0, r;\n  }, xa.warn = Sa;\n  var La = [\"history\", \"path\", \"basename\", \"stem\", \"extname\", \"dirname\"];\n\n  function Ba(r) {\n    var e, t, u;\n\n    if (r) {\n      if (\"string\" == typeof r || Ca(r)) r = {\n        contents: r\n      };else if (\"message\" in r && \"messages\" in r) return r;\n    } else r = {};\n\n    if (!(this instanceof Ba)) return new Ba(r);\n\n    for (this.data = {}, this.messages = [], this.history = [], this.cwd = da.cwd(), t = -1, u = La.length; ++t < u;) e = La[t], ka.call(r, e) && (this[e] = r[e]);\n\n    for (e in r) -1 === La.indexOf(e) && (this[e] = r[e]);\n  }\n\n  function Sa(r, e, t) {\n    var u,\n        n,\n        a = this.path,\n        o = Ea(e) || \"1:1\";\n    return u = {\n      start: {\n        line: null,\n        column: null\n      },\n      end: {\n        line: null,\n        column: null\n      }\n    }, e && e.position && (e = e.position), e && (e.start ? (u = e, e = e.start) : u.start = e), (n = new Oa(r.message || r)).name = (a ? a + \":\" : \"\") + o, n.file = a || \"\", n.reason = r.message || r, n.line = e ? e.line : null, n.column = e ? e.column : null, n.location = u, n.ruleId = t || null, n.source = null, n.fatal = !1, r.stack && (n.stack = r.stack), this.messages.push(n), n;\n  }\n\n  function Ta() {}\n\n  function Oa(r) {\n    this.message = r;\n  }\n\n  function Na(r, e) {\n    if (-1 !== r.indexOf(ma.sep)) throw new Error(\"`\" + e + \"` cannot be a path: did not expect `\" + ma.sep + \"`\");\n  }\n\n  function Ra(r, e) {\n    if (!r) throw new Error(\"`\" + e + \"` cannot be empty\");\n  }\n\n  function Ua(r, e) {\n    if (!r) throw new Error(\"Setting `\" + e + \"` requires `path` to be set too\");\n  }\n\n  Object.defineProperty(xa, \"path\", {\n    get: function () {\n      return this.history[this.history.length - 1];\n    },\n    set: function (r) {\n      Ra(r, \"path\"), r !== this.path && this.history.push(r);\n    }\n  }), Object.defineProperty(xa, \"dirname\", {\n    get: function () {\n      return \"string\" == typeof this.path ? ma.dirname(this.path) : void 0;\n    },\n    set: function (r) {\n      Ua(this.path, \"dirname\"), this.path = ma.join(r || \"\", this.basename);\n    }\n  }), Object.defineProperty(xa, \"basename\", {\n    get: function () {\n      return \"string\" == typeof this.path ? ma.basename(this.path) : void 0;\n    },\n    set: function (r) {\n      Ra(r, \"basename\"), Na(r, \"basename\"), this.path = ma.join(this.dirname || \"\", r);\n    }\n  }), Object.defineProperty(xa, \"extname\", {\n    get: function () {\n      return \"string\" == typeof this.path ? ma.extname(this.path) : void 0;\n    },\n    set: function (r) {\n      var e = r || \"\";\n\n      if (Na(e, \"extname\"), Ua(this.path, \"extname\"), e) {\n        if (\".\" !== e.charAt(0)) throw new Error(\"`extname` must start with `.`\");\n        if (-1 !== e.indexOf(\".\", 1)) throw new Error(\"`extname` cannot contain multiple dots\");\n      }\n\n      this.path = ba(this.path, e);\n    }\n  }), Object.defineProperty(xa, \"stem\", {\n    get: function () {\n      return \"string\" == typeof this.path ? ma.basename(this.path, this.extname) : void 0;\n    },\n    set: function (r) {\n      Ra(r, \"stem\"), Na(r, \"stem\"), this.path = ma.join(this.dirname || \"\", r + (this.extname || \"\"));\n    }\n  }), Ta.prototype = Error.prototype, Oa.prototype = new Ta(), (xa = Oa.prototype).file = \"\", xa.name = \"\", xa.reason = \"\", xa.message = \"\", xa.stack = \"\", xa.fatal = null, xa.column = null, xa.line = null;\n\n  var Pa = function () {\n    var r = [],\n        e = {};\n    return e.run = function () {\n      var e = -1,\n          t = Ia.call(arguments, 0, -1),\n          u = arguments[arguments.length - 1];\n      if (\"function\" != typeof u) throw new Error(\"Expected function as last argument, not \" + u);\n      (function n(a) {\n        var o = r[++e],\n            i = Ia.call(arguments, 0),\n            c = i.slice(1),\n            l = t.length,\n            s = -1;\n        if (a) u(a);else {\n          for (; ++s < l;) null !== c[s] && void 0 !== c[s] || (c[s] = t[s]);\n\n          t = c, o ? function (r, e) {\n            var t;\n            return function () {\n              var e,\n                  a = Ia.call(arguments, 0),\n                  o = r.length > a.length;\n              o && a.push(u);\n\n              try {\n                e = r.apply(null, a);\n              } catch (r) {\n                if (o && t) throw r;\n                return u(r);\n              }\n\n              o || (e && \"function\" == typeof e.then ? e.then(n, u) : e instanceof Error ? u(e) : n(e));\n            };\n\n            function u() {\n              t || (t = !0, e.apply(null, arguments));\n            }\n\n            function n(r) {\n              u(null, r);\n            }\n          }(o, n).apply(null, t) : u.apply(null, [null].concat(t));\n        }\n      }).apply(null, [null].concat(t));\n    }, e.use = function (t) {\n      if (\"function\" != typeof t) throw new Error(\"Expected `fn` to be a function, not \" + t);\n      return r.push(t), e;\n    }, e;\n  },\n      Ia = [].slice;\n\n  var Va = Object.prototype.toString,\n      za = function (r) {\n    return \"[object String]\" === Va.call(r);\n  };\n\n  var ja = function (r) {\n    return \"[object Function]\" === Object.prototype.toString.call(r);\n  },\n      Ga = Object.prototype.toString,\n      Ha = function (r) {\n    var e;\n    return \"[object Object]\" === Ga.call(r) && (null === (e = Object.getPrototypeOf(r)) || e === Object.getPrototypeOf({}));\n  },\n      Ma = function e() {\n    var t = [];\n    var u = Pa();\n    var n = {};\n    var a = !1;\n    var o = -1;\n\n    i.data = function (r, e) {\n      if (za(r)) return 2 === arguments.length ? (Ka(\"data\", a), n[r] = e, i) : Za.call(n, r) && n[r] || null;\n      if (r) return Ka(\"data\", a), n = r, i;\n      return n;\n    };\n\n    i.freeze = c;\n    i.attachers = t;\n\n    i.use = function (e) {\n      var u;\n      if (Ka(\"use\", a), null === e || void 0 === e) ;else if (ja(e)) s.apply(null, arguments);else {\n        if (\"object\" !== r(e)) throw new Error(\"Expected usable value, not `\" + e + \"`\");\n        \"length\" in e ? l(e) : o(e);\n      }\n      u && (n.settings = Gn(n.settings || {}, u));\n      return i;\n\n      function o(r) {\n        l(r.plugins), r.settings && (u = Gn(u || {}, r.settings));\n      }\n\n      function c(e) {\n        if (ja(e)) s(e);else {\n          if (\"object\" !== r(e)) throw new Error(\"Expected usable value, not `\" + e + \"`\");\n          \"length\" in e ? s.apply(null, e) : o(e);\n        }\n      }\n\n      function l(e) {\n        var t, u;\n        if (null === e || void 0 === e) ;else {\n          if (!(\"object\" === r(e) && \"length\" in e)) throw new Error(\"Expected a list of plugins, not `\" + e + \"`\");\n\n          for (t = e.length, u = -1; ++u < t;) c(e[u]);\n        }\n      }\n\n      function s(r, e) {\n        var u = function (r) {\n          var e,\n              u = t.length,\n              n = -1;\n\n          for (; ++n < u;) if ((e = t[n])[0] === r) return e;\n        }(r);\n\n        u ? (Ha(u[1]) && Ha(e) && (e = Gn(u[1], e)), u[1] = e) : t.push($a.call(arguments));\n      }\n    };\n\n    i.parse = function (r) {\n      var e,\n          t = Fa(r);\n      if (c(), Ja(\"parse\", e = i.Parser), _a(e)) return new e(String(t), t).parse();\n      return e(String(t), t);\n    };\n\n    i.stringify = function (r, e) {\n      var t,\n          u = Fa(e);\n      if (c(), Qa(\"stringify\", t = i.Compiler), Wa(r), _a(t)) return new t(r, u).compile();\n      return t(r, u);\n    };\n\n    i.run = l;\n\n    i.runSync = function (r, e) {\n      var t,\n          u = !1;\n      return l(r, e, function (r, e) {\n        u = !0, Hn(r), t = e;\n      }), Xa(\"runSync\", \"run\", u), t;\n    };\n\n    i.process = s;\n\n    i.processSync = function (r) {\n      var e,\n          t = !1;\n      return c(), Ja(\"processSync\", i.Parser), Qa(\"processSync\", i.Compiler), s(e = Fa(r), function (r) {\n        t = !0, Hn(r);\n      }), Xa(\"processSync\", \"process\", t), e;\n    };\n\n    return i;\n\n    function i() {\n      for (var r = e(), u = t.length, a = -1; ++a < u;) r.use.apply(null, t[a]);\n\n      return r.data(Gn(!0, {}, n)), r;\n    }\n\n    function c() {\n      var r, e, n, c;\n      if (a) return i;\n\n      for (; ++o < t.length;) r = t[o], e = r[0], n = r[1], c = null, !1 !== n && (!0 === n && (r[1] = void 0), c = e.apply(i, r.slice(1)), ja(c) && u.use(c));\n\n      return a = !0, o = 1 / 0, i;\n    }\n\n    function l(r, e, t) {\n      if (Wa(r), c(), !t && ja(e) && (t = e, e = null), !t) return new Promise(n);\n\n      function n(n, a) {\n        u.run(r, Fa(e), function (e, u, o) {\n          u = u || r, e ? a(e) : n ? n(u) : t(null, u, o);\n        });\n      }\n\n      n(null, t);\n    }\n\n    function s(r, e) {\n      if (c(), Ja(\"process\", i.Parser), Qa(\"process\", i.Compiler), !e) return new Promise(t);\n\n      function t(t, u) {\n        var n = Fa(r);\n        Ya.run(i, {\n          file: n\n        }, function (r) {\n          r ? u(r) : t ? t(n) : e(null, n);\n        });\n      }\n\n      t(null, e);\n    }\n  }().freeze(),\n      $a = [].slice,\n      Za = {}.hasOwnProperty,\n      Ya = Pa().use(function (r, e) {\n    e.tree = r.parse(e.file);\n  }).use(function (r, e, t) {\n    r.run(e.tree, e.file, function (r, u, n) {\n      r ? t(r) : (e.tree = u, e.file = n, t());\n    });\n  }).use(function (r, e) {\n    e.file.contents = r.stringify(e.tree, e.file);\n  });\n\n  function _a(r) {\n    return ja(r) && function (r) {\n      var e;\n\n      for (e in r) return !0;\n\n      return !1;\n    }(r.prototype);\n  }\n\n  function Ja(r, e) {\n    if (!ja(e)) throw new Error(\"Cannot `\" + r + \"` without `Parser`\");\n  }\n\n  function Qa(r, e) {\n    if (!ja(e)) throw new Error(\"Cannot `\" + r + \"` without `Compiler`\");\n  }\n\n  function Ka(r, e) {\n    if (e) throw new Error(\"Cannot invoke `\" + r + \"` on a frozen processor.\\nCreate a new processor first, by invoking it: use `processor()` instead of `processor`.\");\n  }\n\n  function Wa(r) {\n    if (!r || !za(r.type)) throw new Error(\"Expected node, got `\" + r + \"`\");\n  }\n\n  function Xa(r, e, t) {\n    if (!t) throw new Error(\"`\" + r + \"` finished async. Use `\" + e + \"` instead\");\n  }\n\n  var ro = /[|\\\\{}()[\\]^$+*?.]/g,\n      eo = function (r) {\n    if (\"string\" != typeof r) throw new TypeError(\"Expected a string\");\n    return r.replace(ro, \"\\\\$&\");\n  },\n      to = {\n    \"---\": \"yaml\",\n    \"+++\": \"toml\"\n  };\n\n  var uo = function (r) {\n    var e = Object.keys(to).map(eo).join(\"|\"),\n        t = r.match(new RegExp(\"^(\".concat(e, \")[^\\\\n\\\\S]*\\\\n(?:([\\\\s\\\\S]*?)\\\\n)?\\\\1[^\\\\n\\\\S]*(\\\\n|$)\")));\n    if (null === t) return {\n      frontMatter: null,\n      content: r\n    };\n    var u = t[0].replace(/\\n$/, \"\"),\n        n = t[1],\n        a = t[2];\n    return {\n      frontMatter: {\n        type: to[n],\n        value: a,\n        raw: u\n      },\n      content: t[0].replace(/[^\\n]/g, \" \") + r.slice(t[0].length)\n    };\n  },\n      no = o(function (r) {\n    var e = [\"format\", \"prettier\"];\n\n    function t(r) {\n      var t = \"@(\".concat(e.join(\"|\"), \")\"),\n          u = new RegExp([\"\\x3c!--\\\\s*\".concat(t, \"\\\\s*--\\x3e\"), \"\\x3c!--.*\\r?\\n[\\\\s\\\\S]*(^|\\n)[^\\\\S\\n]*\".concat(t, \"[^\\\\S\\n]*($|\\n)[\\\\s\\\\S]*\\n.*--\\x3e\")].join(\"|\"), \"m\"),\n          n = r.match(u);\n      return n && 0 === n.index;\n    }\n\n    r.exports = {\n      startWithPragma: t,\n      hasPragma: function (r) {\n        return t(uo(r).content.trimLeft());\n      },\n      insertPragma: function (r) {\n        var t = uo(r),\n            u = \"\\x3c!-- @\".concat(e[0], \" --\\x3e\");\n        return t.frontMatter ? \"\".concat(t.frontMatter.raw, \"\\n\\n\").concat(u, \"\\n\\n\").concat(t.content) : \"\".concat(u, \"\\n\\n\").concat(t.content);\n      }\n    };\n  }),\n      ao = o(function (r) {\n    r.exports = function (r) {\n      r = Object.assign({\n        onlyFirst: !1\n      }, r);\n      var e = [\"[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:[a-zA-Z\\\\d]*(?:;[a-zA-Z\\\\d]*)*)?\\\\u0007)\", \"(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))\"].join(\"|\");\n      return new RegExp(e, r.onlyFirst ? void 0 : \"g\");\n    };\n  }),\n      oo = o(function (r) {\n    r.exports = function (r) {\n      return !Number.isNaN(r) && r >= 4352 && (r <= 4447 || 9001 === r || 9002 === r || 11904 <= r && r <= 12871 && 12351 !== r || 12880 <= r && r <= 19903 || 19968 <= r && r <= 42182 || 43360 <= r && r <= 43388 || 44032 <= r && r <= 55203 || 63744 <= r && r <= 64255 || 65040 <= r && r <= 65049 || 65072 <= r && r <= 65131 || 65281 <= r && r <= 65376 || 65504 <= r && r <= 65510 || 110592 <= r && r <= 110593 || 127488 <= r && r <= 127569 || 131072 <= r && r <= 262141);\n    };\n  });\n\n  o(function (r) {\n    var e = /\\uD83C\\uDFF4(?:\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74)\\uDB40\\uDC7F|\\u200D\\u2620\\uFE0F)|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC68(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3]))|\\uD83D\\uDC69\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\uD83D\\uDC68(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83D\\uDC69\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC68(?:\\u200D(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDD1-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDEEB\\uDEEC\\uDEF4-\\uDEF9]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD70\\uDD73-\\uDD76\\uDD7A\\uDD7C-\\uDDA2\\uDDB0-\\uDDB9\\uDDC0-\\uDDC2\\uDDD0-\\uDDFF])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEF9]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD70\\uDD73-\\uDD76\\uDD7A\\uDD7C-\\uDDA2\\uDDB0-\\uDDB9\\uDDC0-\\uDDC2\\uDDD0-\\uDDFF])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC69\\uDC6E\\uDC70-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3D\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDD1-\\uDDDD])/g;\n\n    r.exports = function (r) {\n      if (\"string\" != typeof (r = r.replace(e, \"  \")) || 0 === r.length) return 0;\n\n      r = function (r) {\n        return \"string\" == typeof r ? r.replace(ao(), \"\") : r;\n      }(r);\n\n      for (var t = 0, u = 0; u < r.length; u++) {\n        var n = r.codePointAt(u);\n        n <= 31 || n >= 127 && n <= 159 || n >= 768 && n <= 879 || (n > 65535 && u++, t += oo(n) ? 2 : 1);\n      }\n\n      return t;\n    };\n  });\n\n  function io(r) {\n    return function (e, t, u) {\n      var n = u && u.backwards;\n      if (!1 === t) return !1;\n\n      for (var a = e.length, o = t; o >= 0 && o < a;) {\n        var i = e.charAt(o);\n\n        if (r instanceof RegExp) {\n          if (!r.test(i)) return o;\n        } else if (-1 === r.indexOf(i)) return o;\n\n        n ? o-- : o++;\n      }\n\n      return (-1 === o || o === a) && o;\n    };\n  }\n\n  io(/\\s/), io(\" \\t\"), io(\",; \\t\"), io(/[^\\r\\n]/);\n  var co = {};\n  [[\"|>\"], [\"||\", \"??\"], [\"&&\"], [\"|\"], [\"^\"], [\"&\"], [\"==\", \"===\", \"!=\", \"!==\"], [\"<\", \">\", \"<=\", \">=\", \"in\", \"instanceof\"], [\">>\", \"<<\", \">>>\"], [\"+\", \"-\"], [\"*\", \"/\", \"%\"], [\"**\"]].forEach(function (r, e) {\n    r.forEach(function (r) {\n      co[r] = e;\n    });\n  });\n\n  var lo = \"[\\\\u02ea-\\\\u02eb\\\\u1100-\\\\u11ff\\\\u2e80-\\\\u2e99\\\\u2e9b-\\\\u2ef3\\\\u2f00-\\\\u2fd5\\\\u3000-\\\\u303f\\\\u3041-\\\\u3096\\\\u3099-\\\\u309f\\\\u30a1-\\\\u30fa\\\\u30fc-\\\\u30ff\\\\u3105-\\\\u312e\\\\u3131-\\\\u318e\\\\u3190-\\\\u3191\\\\u3196-\\\\u31ba\\\\u31c0-\\\\u31e3\\\\u31f0-\\\\u321e\\\\u322a-\\\\u3247\\\\u3260-\\\\u327e\\\\u328a-\\\\u32b0\\\\u32c0-\\\\u32cb\\\\u32d0-\\\\u32fe\\\\u3300-\\\\u3370\\\\u337b-\\\\u337f\\\\u33e0-\\\\u33fe\\\\u3400-\\\\u4db5\\\\u4e00-\\\\u9fea\\\\ua960-\\\\ua97c\\\\uac00-\\\\ud7a3\\\\ud7b0-\\\\ud7c6\\\\ud7cb-\\\\ud7fb\\\\uf900-\\\\ufa6d\\\\ufa70-\\\\ufad9\\\\ufe10-\\\\ufe1f\\\\ufe30-\\\\ufe6f\\\\uff00-\\\\uffef]|[\\\\ud840-\\\\ud868\\\\ud86a-\\\\ud86c\\\\ud86f-\\\\ud872\\\\ud874-\\\\ud879][\\\\udc00-\\\\udfff]|\\\\ud82c[\\\\udc00-\\\\udd1e]|\\\\ud83c[\\\\ude00\\\\ude50-\\\\ude51]|\\\\ud869[\\\\udc00-\\\\uded6\\\\udf00-\\\\udfff]|\\\\ud86d[\\\\udc00-\\\\udf34\\\\udf40-\\\\udfff]|\\\\ud86e[\\\\udc00-\\\\udc1d\\\\udc20-\\\\udfff]|\\\\ud873[\\\\udc00-\\\\udea1\\\\udeb0-\\\\udfff]|\\\\ud87a[\\\\udc00-\\\\udfe0]|\\\\ud87e[\\\\udc00-\\\\ude1d]\",\n      so = \"[\\\\u1100-\\\\u11ff\\\\u3001-\\\\u3003\\\\u3008-\\\\u3011\\\\u3013-\\\\u301f\\\\u302e-\\\\u3030\\\\u3037\\\\u30fb\\\\u3131-\\\\u318e\\\\u3200-\\\\u321e\\\\u3260-\\\\u327e\\\\ua960-\\\\ua97c\\\\uac00-\\\\ud7a3\\\\ud7b0-\\\\ud7c6\\\\ud7cb-\\\\ud7fb\\\\ufe45-\\\\ufe46\\\\uff61-\\\\uff65\\\\uffa0-\\\\uffbe\\\\uffc2-\\\\uffc7\\\\uffca-\\\\uffcf\\\\uffd2-\\\\uffd7\\\\uffda-\\\\uffdc]\",\n      fo = \"[\\\\u0021-\\\\u002f\\\\u003a-\\\\u0040\\\\u005b-\\\\u0060\\\\u007b-\\\\u007e\\\\u00a1\\\\u00a7\\\\u00ab\\\\u00b6-\\\\u00b7\\\\u00bb\\\\u00bf\\\\u037e\\\\u0387\\\\u055a-\\\\u055f\\\\u0589-\\\\u058a\\\\u05be\\\\u05c0\\\\u05c3\\\\u05c6\\\\u05f3-\\\\u05f4\\\\u0609-\\\\u060a\\\\u060c-\\\\u060d\\\\u061b\\\\u061e-\\\\u061f\\\\u066a-\\\\u066d\\\\u06d4\\\\u0700-\\\\u070d\\\\u07f7-\\\\u07f9\\\\u0830-\\\\u083e\\\\u085e\\\\u0964-\\\\u0965\\\\u0970\\\\u09fd\\\\u0af0\\\\u0df4\\\\u0e4f\\\\u0e5a-\\\\u0e5b\\\\u0f04-\\\\u0f12\\\\u0f14\\\\u0f3a-\\\\u0f3d\\\\u0f85\\\\u0fd0-\\\\u0fd4\\\\u0fd9-\\\\u0fda\\\\u104a-\\\\u104f\\\\u10fb\\\\u1360-\\\\u1368\\\\u1400\\\\u166d-\\\\u166e\\\\u169b-\\\\u169c\\\\u16eb-\\\\u16ed\\\\u1735-\\\\u1736\\\\u17d4-\\\\u17d6\\\\u17d8-\\\\u17da\\\\u1800-\\\\u180a\\\\u1944-\\\\u1945\\\\u1a1e-\\\\u1a1f\\\\u1aa0-\\\\u1aa6\\\\u1aa8-\\\\u1aad\\\\u1b5a-\\\\u1b60\\\\u1bfc-\\\\u1bff\\\\u1c3b-\\\\u1c3f\\\\u1c7e-\\\\u1c7f\\\\u1cc0-\\\\u1cc7\\\\u1cd3\\\\u2010-\\\\u2027\\\\u2030-\\\\u2043\\\\u2045-\\\\u2051\\\\u2053-\\\\u205e\\\\u207d-\\\\u207e\\\\u208d-\\\\u208e\\\\u2308-\\\\u230b\\\\u2329-\\\\u232a\\\\u2768-\\\\u2775\\\\u27c5-\\\\u27c6\\\\u27e6-\\\\u27ef\\\\u2983-\\\\u2998\\\\u29d8-\\\\u29db\\\\u29fc-\\\\u29fd\\\\u2cf9-\\\\u2cfc\\\\u2cfe-\\\\u2cff\\\\u2d70\\\\u2e00-\\\\u2e2e\\\\u2e30-\\\\u2e49\\\\u3001-\\\\u3003\\\\u3008-\\\\u3011\\\\u3014-\\\\u301f\\\\u3030\\\\u303d\\\\u30a0\\\\u30fb\\\\ua4fe-\\\\ua4ff\\\\ua60d-\\\\ua60f\\\\ua673\\\\ua67e\\\\ua6f2-\\\\ua6f7\\\\ua874-\\\\ua877\\\\ua8ce-\\\\ua8cf\\\\ua8f8-\\\\ua8fa\\\\ua8fc\\\\ua92e-\\\\ua92f\\\\ua95f\\\\ua9c1-\\\\ua9cd\\\\ua9de-\\\\ua9df\\\\uaa5c-\\\\uaa5f\\\\uaade-\\\\uaadf\\\\uaaf0-\\\\uaaf1\\\\uabeb\\\\ufd3e-\\\\ufd3f\\\\ufe10-\\\\ufe19\\\\ufe30-\\\\ufe52\\\\ufe54-\\\\ufe61\\\\ufe63\\\\ufe68\\\\ufe6a-\\\\ufe6b\\\\uff01-\\\\uff03\\\\uff05-\\\\uff0a\\\\uff0c-\\\\uff0f\\\\uff1a-\\\\uff1b\\\\uff1f-\\\\uff20\\\\uff3b-\\\\uff3d\\\\uff3f\\\\uff5b\\\\uff5d\\\\uff5f-\\\\uff65]|\\\\ud800[\\\\udd00-\\\\udd02\\\\udf9f\\\\udfd0]|\\\\ud801[\\\\udd6f]|\\\\ud802[\\\\udc57\\\\udd1f\\\\udd3f\\\\ude50-\\\\ude58\\\\ude7f\\\\udef0-\\\\udef6\\\\udf39-\\\\udf3f\\\\udf99-\\\\udf9c]|\\\\ud804[\\\\udc47-\\\\udc4d\\\\udcbb-\\\\udcbc\\\\udcbe-\\\\udcc1\\\\udd40-\\\\udd43\\\\udd74-\\\\udd75\\\\uddc5-\\\\uddc9\\\\uddcd\\\\udddb\\\\udddd-\\\\udddf\\\\ude38-\\\\ude3d\\\\udea9]|\\\\ud805[\\\\udc4b-\\\\udc4f\\\\udc5b\\\\udc5d\\\\udcc6\\\\uddc1-\\\\uddd7\\\\ude41-\\\\ude43\\\\ude60-\\\\ude6c\\\\udf3c-\\\\udf3e]|\\\\ud806[\\\\ude3f-\\\\ude46\\\\ude9a-\\\\ude9c\\\\ude9e-\\\\udea2]|\\\\ud807[\\\\udc41-\\\\udc45\\\\udc70-\\\\udc71]|\\\\ud809[\\\\udc70-\\\\udc74]|\\\\ud81a[\\\\ude6e-\\\\ude6f\\\\udef5\\\\udf37-\\\\udf3b\\\\udf44]|\\\\ud82f[\\\\udc9f]|\\\\ud836[\\\\ude87-\\\\ude8b]|\\\\ud83a[\\\\udd5e-\\\\udd5f]\",\n      po = function (r) {\n    return r.length > 0 ? r[r.length - 1] : null;\n  },\n      Do = [\"liquidNode\", \"inlineCode\", \"emphasis\", \"strong\", \"delete\", \"link\", \"linkReference\", \"image\", \"imageReference\", \"footnote\", \"footnoteReference\", \"sentence\", \"whitespace\", \"word\", \"break\", \"inlineMath\"],\n      ho = Do.concat([\"tableCell\", \"paragraph\", \"heading\"]),\n      go = new RegExp(so),\n      mo = new RegExp(fo);\n\n  var bo = {\n    mapAst: function (r, e) {\n      return function r(t, u, n) {\n        n = n || [];\n        var a = Object.assign({}, e(t, u, n));\n        return a.children && (a.children = a.children.map(function (e, t) {\n          return r(e, t, [a].concat(n));\n        })), a;\n      }(r, null, null);\n    },\n    splitText: function (r, e) {\n      var t = \"non-cjk\",\n          u = \"cj-letter\",\n          n = \"cjk-punctuation\",\n          a = [];\n      return (\"preserve\" === e.proseWrap ? r : r.replace(new RegExp(\"(\".concat(lo, \")\\n(\").concat(lo, \")\"), \"g\"), \"$1$2\")).split(/([ \\t\\n]+)/).forEach(function (r, e, i) {\n        e % 2 != 1 ? (0 !== e && e !== i.length - 1 || \"\" !== r) && r.split(new RegExp(\"(\".concat(lo, \")\"))).forEach(function (r, e, a) {\n          (0 !== e && e !== a.length - 1 || \"\" !== r) && (e % 2 != 0 ? o(mo.test(r) ? {\n            type: \"word\",\n            value: r,\n            kind: n,\n            hasLeadingPunctuation: !0,\n            hasTrailingPunctuation: !0\n          } : {\n            type: \"word\",\n            value: r,\n            kind: go.test(r) ? \"k-letter\" : u,\n            hasLeadingPunctuation: !1,\n            hasTrailingPunctuation: !1\n          }) : \"\" !== r && o({\n            type: \"word\",\n            value: r,\n            kind: t,\n            hasLeadingPunctuation: mo.test(r[0]),\n            hasTrailingPunctuation: mo.test(po(r))\n          }));\n        }) : a.push({\n          type: \"whitespace\",\n          value: /\\n/.test(r) ? \"\\n\" : \" \"\n        });\n      }), a;\n\n      function o(r) {\n        var e,\n            o,\n            i = po(a);\n        i && \"word\" === i.type && (i.kind === t && r.kind === u && !i.hasTrailingPunctuation || i.kind === u && r.kind === t && !r.hasLeadingPunctuation ? a.push({\n          type: \"whitespace\",\n          value: \" \"\n        }) : (e = t, o = n, i.kind === e && r.kind === o || i.kind === o && r.kind === e || [i.value, r.value].some(function (r) {\n          return /\\u3000/.test(r);\n        }) || a.push({\n          type: \"whitespace\",\n          value: \"\"\n        }))), a.push(r);\n      }\n    },\n    punctuationPattern: fo,\n    getFencedCodeBlockValue: function (r, e) {\n      var t = e.slice(r.position.start.offset, r.position.end.offset),\n          u = t.match(/^\\s*/)[0].length,\n          n = new RegExp(\"^\\\\s{0,\".concat(u, \"}\")),\n          a = t.split(\"\\n\"),\n          o = t[u],\n          i = t.slice(u).match(new RegExp(\"^[\".concat(o, \"]+\")))[0],\n          c = new RegExp(\"^\\\\s{0,3}\".concat(i)).test(a[a.length - 1].slice(l(a.length - 1)));\n      return a.slice(1, c ? -1 : void 0).map(function (r, e) {\n        return r.slice(l(e + 1)).replace(n, \"\");\n      }).join(\"\\n\");\n\n      function l(e) {\n        return r.position.indent[e - 1] - 1;\n      }\n    },\n    getOrderedListItemInfo: function (r, t) {\n      var u = e(t.slice(r.position.start.offset, r.position.end.offset).match(/^\\s*(\\d+)(\\.|\\))(\\s*)/), 4);\n      return {\n        numberText: u[1],\n        marker: u[2],\n        leadingSpaces: u[3]\n      };\n    },\n    INLINE_NODE_TYPES: Do,\n    INLINE_NODE_WRAPPER_TYPES: ho\n  },\n      vo = o(function (r) {\n    var e = /^import/,\n        t = /^export/,\n        u = function (r) {\n      return e.test(r);\n    },\n        n = function (r) {\n      return t.test(r);\n    },\n        a = function (r, e) {\n      var t = e.indexOf(\"\\n\\n\"),\n          a = e.slice(0, t);\n      if (n(a) || u(a)) return r(a)({\n        type: n(a) ? \"export\" : \"import\",\n        value: a\n      });\n    };\n\n    a.locator = function (r) {\n      return n(r) || u(r) ? -1 : 1;\n    }, r.exports = {\n      esSyntax: function () {\n        var r = this.Parser,\n            e = r.prototype.blockTokenizers,\n            t = r.prototype.blockMethods;\n        e.esSyntax = a, t.splice(t.indexOf(\"paragraph\"), 0, \"esSyntax\");\n      },\n      BLOCKS_REGEX: \"[a-z\\\\.]+(\\\\.){0,1}[a-z\\\\.]\"\n    };\n  });\n\n  function Eo(r, e) {\n    return r.indexOf(\"$\", e);\n  }\n\n  var wo = /^\\\\\\$/,\n      yo = /^\\$((?:\\\\\\$|[^$])+)\\$/,\n      Ao = /^\\$\\$((?:\\\\\\$|[^$])+)\\$\\$/,\n      Co = \"\\n\",\n      qo = \"\\t\",\n      Fo = \" \",\n      ko = \"$\",\n      xo = 2,\n      Lo = 4,\n      Bo = function () {\n    var r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n    (function (r) {\n      var e = this.Parser,\n          t = e.prototype.blockTokenizers,\n          u = e.prototype.blockMethods;\n      t.math = function (r, e, t) {\n        for (var u, n, a, o, i, c, l, s, f, p, D = e.length + 1, d = 0, h = \"\"; d < D && ((a = e.charAt(d)) === Fo || a === qo);) h += a, d++;\n\n        if (f = d, (a = e.charAt(d)) === ko) {\n          for (d++, n = a, u = 1, h += a; d < D && (a = e.charAt(d)) === n;) h += a, u++, d++;\n\n          if (!(u < xo)) {\n            for (; d < D && (a = e.charAt(d)) !== Co;) {\n              if (a === ko) return;\n              h += a, d++;\n            }\n\n            if (a = e.charAt(d), t) return !0;\n\n            for ((p = r.now()).column += h.length, p.offset += h.length, o = l = s = i = c = \"\"; d < D;) if (i += l, c += s, l = s = \"\", (a = e.charAt(d)) === Co) {\n              for (i ? (l += a, s += a) : h += a, o = \"\", d++; d < D && (a = e.charAt(d)) === Fo;) o += a, d++;\n\n              if (l += o, s += o.slice(f), !(o.length >= Lo)) {\n                for (o = \"\"; d < D && (a = e.charAt(d)) === n;) o += a, d++;\n\n                if (l += o, s += o, !(o.length < u)) {\n                  for (o = \"\"; d < D && (a = e.charAt(d)) !== Co;) l += a, s += a, d++;\n\n                  break;\n                }\n              }\n            } else i += a, s += a, d++;\n\n            h += i + l;\n            var g = Pr(c);\n            return r(h)({\n              type: \"math\",\n              value: g,\n              data: {\n                hName: \"div\",\n                hProperties: {\n                  className: \"math\"\n                },\n                hChildren: [{\n                  type: \"text\",\n                  value: g\n                }]\n              }\n            });\n          }\n        }\n      }, u.splice(u.indexOf(\"fencedCode\") + 1, 0, \"math\");\n      var n = e.prototype.interruptParagraph,\n          a = e.prototype.interruptList,\n          o = e.prototype.interruptBlockquote;\n      n.splice(n.indexOf(\"fencedCode\") + 1, 0, [\"math\"]), a.splice(a.indexOf(\"fencedCode\") + 1, 0, [\"math\"]), o.splice(o.indexOf(\"fencedCode\") + 1, 0, [\"math\"]);\n      var i = this.Compiler;\n      null != i && (i.prototype.visitors.math = function (r) {\n        return \"$$\\n\" + r.value + \"\\n$$\";\n      });\n    }).call(this, r), function (r) {\n      function e(e, t, u) {\n        var n = !0,\n            a = Ao.exec(t);\n        a || (a = yo.exec(t), n = !1);\n        var o = wo.exec(t);\n        if (o) return !!u || e(o[0])({\n          type: \"text\",\n          value: \"$\"\n        });\n        if (\"\\\\$\" === t.slice(-2)) return e(t)({\n          type: \"text\",\n          value: t.slice(0, -2) + \"$\"\n        });\n\n        if (a) {\n          if (u) return !0;\n\n          if (a[0].includes(\"`\") && t.slice(a[0].length).includes(\"`\")) {\n            var i = t.slice(0, t.indexOf(\"`\"));\n            return e(i)({\n              type: \"text\",\n              value: i\n            });\n          }\n\n          var c = a[1].trim();\n          return e(a[0])({\n            type: \"inlineMath\",\n            value: c,\n            data: {\n              hName: \"span\",\n              hProperties: {\n                className: \"inlineMath\" + (n && r.inlineMathDouble ? \" inlineMathDouble\" : \"\")\n              },\n              hChildren: [{\n                type: \"text\",\n                value: c\n              }]\n            }\n          });\n        }\n      }\n\n      e.locator = Eo;\n      var t = this.Parser,\n          u = t.prototype.inlineTokenizers,\n          n = t.prototype.inlineMethods;\n      u.math = e, n.splice(n.indexOf(\"text\"), 0, \"math\");\n      var a = this.Compiler;\n      null != a && (a.prototype.visitors.inlineMath = function (r) {\n        return \"$\" + r.value + \"$\";\n      });\n    }.call(this, r);\n  },\n      So = bo.mapAst,\n      To = bo.INLINE_NODE_WRAPPER_TYPES;\n\n  function Oo(r) {\n    var e = r.isMDX;\n    return function (r) {\n      var t = Ma().use(Un, Object.assign({\n        footnotes: !0,\n        commonmark: !0\n      }, e && {\n        blocks: [vo.BLOCKS_REGEX]\n      })).use(Uo).use(Bo).use(e ? vo.esSyntax : No).use(Po).use(e ? Ro : No);\n      return t.runSync(t.parse(r));\n    };\n  }\n\n  function No(r) {\n    return r;\n  }\n\n  function Ro() {\n    return function (r) {\n      return So(r, function (r, t, u) {\n        var n = e(u, 1)[0];\n        return \"html\" !== r.type || /^<!--[\\s\\S]*-->$/.test(r.value) || -1 !== To.indexOf(n.type) ? r : Object.assign({}, r, {\n          type: \"jsx\"\n        });\n      });\n    };\n  }\n\n  function Uo() {\n    var r = this.Parser.prototype;\n\n    function e(r, e) {\n      var t = uo(e);\n      if (t.frontMatter) return r(t.frontMatter.raw)(t.frontMatter);\n    }\n\n    r.blockMethods = [\"frontMatter\"].concat(r.blockMethods), r.blockTokenizers.frontMatter = e, e.onlyAtStart = !0;\n  }\n\n  function Po() {\n    var r = this.Parser.prototype,\n        e = r.inlineMethods;\n\n    function t(r, e) {\n      var t = e.match(/^({%[\\s\\S]*?%}|{{[\\s\\S]*?}})/);\n      if (t) return r(t[0])({\n        type: \"liquidNode\",\n        value: t[0]\n      });\n    }\n\n    e.splice(e.indexOf(\"text\"), 0, \"liquid\"), r.inlineTokenizers.liquid = t, t.locator = function (r, e) {\n      return r.indexOf(\"{\", e);\n    };\n  }\n\n  var Io = {\n    astFormat: \"mdast\",\n    hasPragma: no.hasPragma,\n    locStart: function (r) {\n      return r.position.start.offset;\n    },\n    locEnd: function (r) {\n      return r.position.end.offset;\n    },\n    preprocess: function (r) {\n      return r.replace(/\\n\\s+$/, \"\\n\");\n    }\n  },\n      Vo = Object.assign({}, Io, {\n    parse: Oo({\n      isMDX: !1\n    })\n  });\n  return {\n    parsers: {\n      remark: Vo,\n      markdown: Vo,\n      mdx: Object.assign({}, Io, {\n        parse: Oo({\n          isMDX: !0\n        })\n      })\n    }\n  };\n});","map":null,"metadata":{},"sourceType":"script"}