{"ast":null,"code":"import wordlist from \"./wordlist\";\nexport const WORDLEN = 5;\nexport const NUMTRIES = 6;\nexport var wotd = \"\";\nexport var notd = 0;\nexport var dotd = new Date();\nexport var displayChars = [];\nexport var displayCols = [];\nexport var wordBtns = [];\nexport var activeRow = 0;\nexport var activeCol = 0;\nexport const buttonCols = new Map(); // fast random number generator\n\nfunction mulberry32(a) {\n  var t = a += 0x6D2B79F5;\n  t = Math.imul(t ^ t >>> 15, t | 1);\n  t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n  return ((t ^ t >>> 14) >>> 0) / 4294967296;\n}\n\nfunction generate_wotd() {\n  dotd = new Date();\n  notd = Math.floor(dotd / 8.64e7);\n  notd = Math.floor(mulberry32(rn) * wordlist.length);\n  wotd = wordlist[notd];\n}\n\nexport function initialiseState() {\n  generate_wotd();\n\n  for (var row = 0; row < NUMTRIES; row++) {\n    for (var col = 0; col < WORDLEN; col++) {\n      var i = row * WORDLEN + col;\n      displayChars[i] = \"!\";\n      displayCols[i] = \"black\";\n    }\n  }\n\n  const keys = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\n  for (var c of keys) {\n    buttonCols.set(c, \"white\");\n  }\n\n  buttonCols.set(\"Enter\", \"white\");\n  buttonCols.set(\"<=\", \"white\");\n}\n;\nexport function getKeyBGC(c) {\n  return buttonCols.get(c);\n}\nexport function nextCol() {\n  activeCol = activeCol + 1;\n}\nexport function nextRow() {\n  activeRow = activeRow + 1;\n  activeCol = 0;\n}\nexport function getActiveCol() {\n  return activeCol;\n}\nexport function decrementActiveCol() {\n  activeCol = activeCol - 1;\n}\nexport function getActiveRow() {\n  return activeRow;\n}\nexport function clearWordBtns() {\n  wordBtns = [];\n}\nexport function checkWord() {\n  var sow = activeRow * WORDLEN + activeCol - WORDLEN;\n  var numGreens = 0;\n  var wotd2 = \"\";\n  var tryWord = \"\";\n\n  for (var i = 0; i < WORDLEN; i++) {\n    tryWord = tryWord + displayChars[sow + i];\n  } // check validity of word first and return 1 if not valid\n\n\n  if (wordlist.indexOf(tryWord) == -1) {\n    return 0;\n  }\n\n  for (i = 0; i < WORDLEN; i++) {\n    //buttonCols.set(displayChars[sow+i], \"grey\");\n    if (wotd[i] === displayChars[sow + i]) {\n      displayCols[sow + i] = \"green\";\n      numGreens = numGreens + 1;\n    } else {\n      wotd2 = wotd2 + wotd[i];\n    }\n  }\n\n  for (i = 0; i < WORDLEN; i++) {\n    if (displayCols[sow + i] !== \"green\") {\n      var n = wotd2.indexOf(displayChars[sow + i]);\n\n      if (n !== -1) {\n        displayCols[sow + i] = \"orange\";\n        wotd2 = wotd2.slice(0, n) + wotd2.slice(n + 1, wotd2.length);\n      } else {\n        displayCols[sow + i] = \"white\";\n      }\n    }\n  }\n\n  if (numGreens === WORDLEN) {\n    return 2;\n  } else {\n    return 1;\n  }\n}","map":{"version":3,"sources":["/Users/fz/Development/calculator/src/component/AppVars.js"],"names":["wordlist","WORDLEN","NUMTRIES","wotd","notd","dotd","Date","displayChars","displayCols","wordBtns","activeRow","activeCol","buttonCols","Map","mulberry32","a","t","Math","imul","generate_wotd","floor","rn","length","initialiseState","row","col","i","keys","c","set","getKeyBGC","get","nextCol","nextRow","getActiveCol","decrementActiveCol","getActiveRow","clearWordBtns","checkWord","sow","numGreens","wotd2","tryWord","indexOf","n","slice"],"mappings":"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","sourcesContent":["import wordlist from \"./wordlist\"\n\nexport const WORDLEN = 5;\nexport const NUMTRIES = 6;\n\nexport var wotd = \"\";\nexport var notd = 0;\nexport var dotd = new Date();\n\nexport var displayChars = [];\nexport var displayCols = [];\nexport var wordBtns = [];\n\nexport var activeRow = 0;\nexport var activeCol = 0;\n\nexport const buttonCols = new Map();\n\n// fast random number generator\nfunction mulberry32(a) {\n    var t = a += 0x6D2B79F5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n}\n\nfunction generate_wotd() {\n  dotd = new Date();\n  notd = Math.floor(dotd/8.64e7);\n  notd = Math.floor(mulberry32(rn) * wordlist.length);\n  wotd = wordlist[notd];\n}\n\nexport function initialiseState() {\n  generate_wotd();\n  for (var row=0; row<NUMTRIES; row++) {\n    for (var col=0; col<WORDLEN; col++) {\n      var i = row*WORDLEN + col;\n      displayChars[i] = \"!\";\n      displayCols[i] = \"black\";\n    }\n  }\n  const keys = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  for (var c of keys) {\n    buttonCols.set(c, \"white\");\n  }\n  buttonCols.set(\"Enter\", \"white\");\n  buttonCols.set(\"<=\", \"white\");\n};\n\nexport function getKeyBGC(c) {\n\n  return buttonCols.get(c);\n}\n\nexport function nextCol() {\n  activeCol = activeCol + 1;\n}\n\nexport function nextRow() {\n  activeRow = activeRow + 1;\n  activeCol = 0;\n}\n\nexport function getActiveCol() {\n  return activeCol;\n}\n\nexport function decrementActiveCol() {\n  activeCol = activeCol - 1;\n}\n\nexport function getActiveRow() {\n  return activeRow;\n}\n\nexport function clearWordBtns() {\n  wordBtns = [];\n}\n\nexport function checkWord() {\n  var sow = activeRow*WORDLEN + activeCol - WORDLEN;\n  var numGreens = 0;\n  var wotd2 = \"\";\n  var tryWord = \"\";\n  for (var i=0; i<WORDLEN; i++){\n    tryWord = tryWord + displayChars[sow+i];\n  }\n\n  // check validity of word first and return 1 if not valid\n  if (wordlist.indexOf(tryWord) == -1) {\n    return 0;\n  }\n\n  for (i=0; i<WORDLEN; i++) {\n    //buttonCols.set(displayChars[sow+i], \"grey\");\n    if (wotd[i] === displayChars[sow+i]){\n      displayCols[sow+i] = \"green\";\n      numGreens = numGreens + 1;\n    }\n    else {\n      wotd2 = wotd2 + wotd[i];\n    }\n  }\n  for (i=0; i<WORDLEN; i++) {\n    if (displayCols[sow+i] !== \"green\") {\n      var n = wotd2.indexOf(displayChars[sow+i]);\n      if (n !== -1) {\n        displayCols[sow+i] = \"orange\";\n        wotd2 =  wotd2.slice(0, n) + wotd2.slice(n+1, wotd2.length);\n      }\n      else {\n        displayCols[sow+i] = \"white\";\n      }\n    }\n  }\n\n  if (numGreens === WORDLEN) {\n    return 2;\n  }\n  else {\n    return 1;\n  }\n}"]},"metadata":{},"sourceType":"module"}