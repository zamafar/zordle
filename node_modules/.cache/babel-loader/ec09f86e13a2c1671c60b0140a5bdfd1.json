{"ast":null,"code":"export const WORDLEN = 5;\nexport const NUMTRIES = 6;\nexport var wotd = \"\";\nexport var displayChars = [];\nexport var displayCols = [];\nexport var activeRow = 0;\nexport var activeCol = 0;\nexport function initialiseState() {\n  wotd = \"PRAISE\";\n\n  for (var row = 0; row < NUMTRIES; row++) {\n    for (var col = 0; col < WORDLEN; col++) {\n      var i = row * WORDLEN + col;\n      displayChars[i] = \"\";\n      displayCols[i] = \"black\";\n    }\n  }\n}\n;\nexport function nextCol() {\n  activeCol = activeCol + 1;\n}\nexport function nextRow() {\n  activeRow = activeRow + 1;\n}\nexport function checkWord() {\n  var sow = activeRow * WORDLEN + activeCol - WORDLEN + 1;\n  var numGreens = 0;\n  var wotd2 = \"\"; // TODO: check validity of word first\n\n  for (var i = 0; i < WORDLEN; i++) {\n    if (wotd2[i] === displayChars[sow + i]) {\n      displayCols[sow + i] = \"green\";\n      numGreens = numGreens + 1;\n    } else {\n      wotd2 = wotd2 + wotd[i];\n    }\n  }\n\n  for (i = 0; i < WORDLEN; i++) {\n    if (displayCols[sow + i] !== \"green\") {\n      if (wotd2.indexOf(displayChars[sow + i]) !== -1) {\n        displayCols[sow + i] = \"orange\";\n      } else {\n        displayCols[sow + i] = \"grey\";\n      }\n    }\n  } // TODO: grey out used letters in keyboard\n\n}","map":{"version":3,"sources":["/Users/fz/Development/calculator/src/component/AppVars.js"],"names":["WORDLEN","NUMTRIES","wotd","displayChars","displayCols","activeRow","activeCol","initialiseState","row","col","i","nextCol","nextRow","checkWord","sow","numGreens","wotd2","indexOf"],"mappings":"AACA,OAAO,MAAMA,OAAO,GAAG,CAAhB;AACP,OAAO,MAAMC,QAAQ,GAAG,CAAjB;AAEP,OAAO,IAAIC,IAAI,GAAG,EAAX;AAEP,OAAO,IAAIC,YAAY,GAAG,EAAnB;AACP,OAAO,IAAIC,WAAW,GAAG,EAAlB;AAEP,OAAO,IAAIC,SAAS,GAAG,CAAhB;AACP,OAAO,IAAIC,SAAS,GAAG,CAAhB;AAEP,OAAO,SAASC,eAAT,GAA2B;AAChCL,EAAAA,IAAI,GAAG,QAAP;;AACA,OAAK,IAAIM,GAAG,GAAC,CAAb,EAAgBA,GAAG,GAACP,QAApB,EAA8BO,GAAG,EAAjC,EAAqC;AACnC,SAAK,IAAIC,GAAG,GAAC,CAAb,EAAgBA,GAAG,GAACT,OAApB,EAA6BS,GAAG,EAAhC,EAAoC;AAClC,UAAIC,CAAC,GAAGF,GAAG,GAACR,OAAJ,GAAcS,GAAtB;AACAN,MAAAA,YAAY,CAACO,CAAD,CAAZ,GAAkB,EAAlB;AACAN,MAAAA,WAAW,CAACM,CAAD,CAAX,GAAiB,OAAjB;AACD;AACF;AACF;AAAA;AAED,OAAO,SAASC,OAAT,GAAmB;AACxBL,EAAAA,SAAS,GAAGA,SAAS,GAAG,CAAxB;AACD;AAED,OAAO,SAASM,OAAT,GAAmB;AACxBP,EAAAA,SAAS,GAAGA,SAAS,GAAG,CAAxB;AACD;AAED,OAAO,SAASQ,SAAT,GAAqB;AAC1B,MAAIC,GAAG,GAAGT,SAAS,GAACL,OAAV,GAAoBM,SAApB,GAAgCN,OAAhC,GAA0C,CAApD;AACA,MAAIe,SAAS,GAAG,CAAhB;AACA,MAAIC,KAAK,GAAG,EAAZ,CAH0B,CAK1B;;AAEA,OAAK,IAAIN,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACV,OAAhB,EAAyBU,CAAC,EAA1B,EAA8B;AAC5B,QAAIM,KAAK,CAACN,CAAD,CAAL,KAAaP,YAAY,CAACW,GAAG,GAACJ,CAAL,CAA7B,EAAqC;AACnCN,MAAAA,WAAW,CAACU,GAAG,GAACJ,CAAL,CAAX,GAAqB,OAArB;AACAK,MAAAA,SAAS,GAAGA,SAAS,GAAG,CAAxB;AACD,KAHD,MAIK;AACHC,MAAAA,KAAK,GAAGA,KAAK,GAAGd,IAAI,CAACQ,CAAD,CAApB;AACD;AACF;;AACD,OAAKA,CAAC,GAAC,CAAP,EAAUA,CAAC,GAACV,OAAZ,EAAqBU,CAAC,EAAtB,EAA0B;AACxB,QAAIN,WAAW,CAACU,GAAG,GAACJ,CAAL,CAAX,KAAuB,OAA3B,EAAoC;AAClC,UAAIM,KAAK,CAACC,OAAN,CAAcd,YAAY,CAACW,GAAG,GAACJ,CAAL,CAA1B,MAAuC,CAAC,CAA5C,EAA+C;AAC7CN,QAAAA,WAAW,CAACU,GAAG,GAACJ,CAAL,CAAX,GAAqB,QAArB;AACD,OAFD,MAGK;AACHN,QAAAA,WAAW,CAACU,GAAG,GAACJ,CAAL,CAAX,GAAqB,MAArB;AACD;AACF;AACF,GAzByB,CA0B1B;;AACD","sourcesContent":["\nexport const WORDLEN = 5;\nexport const NUMTRIES = 6;\n\nexport var wotd = \"\";\n\nexport var displayChars = [];\nexport var displayCols = [];\n\nexport var activeRow = 0;\nexport var activeCol = 0;\n\nexport function initialiseState() {\n  wotd = \"PRAISE\";\n  for (var row=0; row<NUMTRIES; row++) {\n    for (var col=0; col<WORDLEN; col++) {\n      var i = row*WORDLEN + col;\n      displayChars[i] = \"\";\n      displayCols[i] = \"black\";\n    }\n  }\n};\n\nexport function nextCol() {\n  activeCol = activeCol + 1;\n}\n\nexport function nextRow() {\n  activeRow = activeRow + 1;\n}\n\nexport function checkWord() {\n  var sow = activeRow*WORDLEN + activeCol - WORDLEN + 1;\n  var numGreens = 0;\n  var wotd2 = \"\"\n\n  // TODO: check validity of word first\n\n  for (var i=0; i<WORDLEN; i++) {\n    if (wotd2[i] === displayChars[sow+i]){\n      displayCols[sow+i] = \"green\";\n      numGreens = numGreens + 1;\n    }\n    else {\n      wotd2 = wotd2 + wotd[i];\n    }\n  }\n  for (i=0; i<WORDLEN; i++) {\n    if (displayCols[sow+i] !== \"green\") {\n      if (wotd2.indexOf(displayChars[sow+i]) !== -1) {\n        displayCols[sow+i] = \"orange\";\n      }\n      else {\n        displayCols[sow+i] = \"grey\";\n      }\n    }\n  }\n  // TODO: grey out used letters in keyboard\n}"]},"metadata":{},"sourceType":"module"}