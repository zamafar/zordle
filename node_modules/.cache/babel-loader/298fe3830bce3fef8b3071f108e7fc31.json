{"ast":null,"code":"var _jsxFileName = \"/Users/fz/Development/calculator/src/component/App.js\";\nimport React from \"react\";\nimport DisplayRow from \"./DisplayRow\";\nimport ButtonPanel from \"./ButtonPanel\";\nimport { activeRow, activeCol, displayChars, initialiseState, nextCol, nextRow, checkWord, WORDLEN, NUMTRIES } from \"./AppVars\";\nimport \"./App.css\"; //import { check } from \"prettier\";\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      numTries: 0\n    };\n\n    this.handleClick = buttonName => {\n      var index = activeRow * WORDLEN + activeCol;\n\n      if (buttonName === \"<=\") {\n        if (activeCol > 0) {\n          displayChars[index] = \"\";\n          activeCol = activeCol - 1;\n        }\n\n        return;\n      }\n\n      if (buttonName === \"Enter\") {\n        if (activeCol === WORDLEN - 1) {\n          if (checkWord() == 0) {\n            alert(\"Invalid word\");\n            return;\n          } else if (checkWord() === 1) {\n            nextRow();\n\n            if (activeRow == NUMTRIES) {\n              alert(\"End Game!\");\n            }\n          } else if (checkWord() === 2) {\n            alert(\"End Game!\");\n          }\n\n          this.setState({\n            numTries: this.numTries + 1\n          });\n        }\n\n        return;\n      }\n\n      if (activeCol === WORDLEN - 1) {\n        return;\n      }\n\n      displayChars[index] = buttonName;\n      nextCol();\n      this.setState({\n        numTries: this.numTries + 1\n      });\n    };\n\n    this.numTries = 0;\n    initialiseState();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"component-app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(DisplayRow, {\n      numTries: this.numTries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(ButtonPanel, {\n      clickHandler: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/fz/Development/calculator/src/component/App.js"],"names":["React","DisplayRow","ButtonPanel","activeRow","activeCol","displayChars","initialiseState","nextCol","nextRow","checkWord","WORDLEN","NUMTRIES","App","Component","constructor","state","numTries","handleClick","buttonName","index","alert","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,YAA/B,EAA6CC,eAA7C,EAA8DC,OAA9D,EAAuEC,OAAvE,EAAgFC,SAAhF,EAA2FC,OAA3F,EAAoGC,QAApG,QAAoH,WAApH;AACA,OAAO,WAAP,C,CACA;;AAEA,eAAe,MAAMC,GAAN,SAAkBZ,KAAK,CAACa,SAAxB,CAAkC;AAK/CC,EAAAA,WAAW,GAAG;AACZ;AADY,SAJdC,KAIc,GAJN;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAIM;;AAAA,SAOdC,WAPc,GAOAC,UAAU,IAAI;AAC1B,UAAIC,KAAK,GAAGhB,SAAS,GAACO,OAAV,GAAoBN,SAAhC;;AACA,UAAIc,UAAU,KAAK,IAAnB,EAAyB;AACvB,YAAId,SAAS,GAAG,CAAhB,EAAmB;AACjBC,UAAAA,YAAY,CAACc,KAAD,CAAZ,GAAsB,EAAtB;AACAf,UAAAA,SAAS,GAAGA,SAAS,GAAG,CAAxB;AACD;;AACD;AACD;;AACD,UAAIc,UAAU,KAAK,OAAnB,EAA4B;AAC1B,YAAId,SAAS,KAAKM,OAAO,GAAC,CAA1B,EAA6B;AAC3B,cAAID,SAAS,MAAM,CAAnB,EAAsB;AACpBW,YAAAA,KAAK,CAAC,cAAD,CAAL;AACA;AACD,WAHD,MAIK,IAAIX,SAAS,OAAO,CAApB,EAAuB;AAC1BD,YAAAA,OAAO;;AACP,gBAAIL,SAAS,IAAIQ,QAAjB,EAA2B;AACzBS,cAAAA,KAAK,CAAC,WAAD,CAAL;AACD;AACF,WALI,MAMA,IAAIX,SAAS,OAAO,CAApB,EAAuB;AAC1BW,YAAAA,KAAK,CAAC,WAAD,CAAL;AACD;;AACD,eAAKC,QAAL,CAAc;AACZL,YAAAA,QAAQ,EAAE,KAAKA,QAAL,GAAgB;AADd,WAAd;AAGD;;AACD;AACD;;AACD,UAAIZ,SAAS,KAAKM,OAAO,GAAC,CAA1B,EAA6B;AAC3B;AACD;;AACDL,MAAAA,YAAY,CAACc,KAAD,CAAZ,GAAsBD,UAAtB;AACAX,MAAAA,OAAO;AAEP,WAAKc,QAAL,CAAc;AACZL,QAAAA,QAAQ,EAAE,KAAKA,QAAL,GAAgB;AADd,OAAd;AAGD,KA9Ca;;AAEZ,SAAKA,QAAL,GAAgB,CAAhB;AACAV,IAAAA,eAAe;AAChB;;AA4CDgB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAI,KAAKN,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,WAAD;AAAa,MAAA,YAAY,EAAE,KAAKC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA5D8C","sourcesContent":["import React from \"react\";\nimport DisplayRow from \"./DisplayRow\";\nimport ButtonPanel from \"./ButtonPanel\";\nimport { activeRow, activeCol, displayChars, initialiseState, nextCol, nextRow, checkWord, WORDLEN, NUMTRIES } from \"./AppVars\";\nimport \"./App.css\";\n//import { check } from \"prettier\";\n\nexport default class App extends React.Component {\n  state = {\n    numTries: 0,\n  };\n\n  constructor() {\n    super();\n    this.numTries = 0;\n    initialiseState();\n  };\n\n \n  handleClick = buttonName => {\n    var index = activeRow*WORDLEN + activeCol;\n    if (buttonName === \"<=\") {\n      if (activeCol > 0) {\n        displayChars[index] = \"\";\n        activeCol = activeCol - 1;\n      }\n      return;\n    }\n    if (buttonName === \"Enter\") {\n      if (activeCol === WORDLEN-1) {\n        if (checkWord() == 0) {\n          alert(\"Invalid word\")\n          return;\n        }\n        else if (checkWord() === 1) {\n          nextRow();\n          if (activeRow == NUMTRIES) {\n            alert(\"End Game!\");\n          }\n        }\n        else if (checkWord() === 2) {\n          alert(\"End Game!\");\n        }\n        this.setState({\n          numTries: this.numTries + 1,\n        }) \n      }\n      return;\n    }\n    if (activeCol === WORDLEN-1) {\n      return;\n    }\n    displayChars[index] = buttonName;\n    nextCol();\n\n    this.setState({\n      numTries: this.numTries + 1,\n    })\n  };\n\n  render() {\n    return (\n      <div className=\"component-app\">\n        <DisplayRow numTries = {this.numTries} />\n        <ButtonPanel clickHandler={this.handleClick} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}