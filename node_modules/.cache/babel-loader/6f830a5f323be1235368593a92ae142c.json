{"ast":null,"code":"var _jsxFileName = \"/Users/fz/Development/calculator/src/component/App.js\";\nimport React from \"react\";\nimport DisplayRow from \"./DisplayRow\";\nimport ButtonPanel from \"./ButtonPanel\";\nimport { getActiveRow, getActiveCol, decrementActiveCol, displayChars, displayCols, initialiseState, nextCol, nextRow, checkWord, WORDLEN, NUMTRIES } from \"./AppVars\";\nimport \"./App.css\"; //import { check } from \"prettier\";\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      numTries: 0\n    };\n\n    this.handleClick = buttonName => {\n      var index = getActiveRow() * WORDLEN + getActiveCol();\n\n      if (buttonName === \"<=\") {\n        if (getActiveCol() > 0) {\n          displayChars[index] = \"\";\n          decrementActiveCol();\n        }\n\n        return;\n      }\n\n      if (buttonName === \"Enter\") {\n        if (getActiveCol() === WORDLEN) {\n          if (checkWord() === 0) {\n            alert(\"Invalid word\");\n            return;\n          } else if (checkWord() === 1) {\n            nextRow();\n\n            if (getActiveRow() === NUMTRIES) {\n              alert(\"End Game!\");\n            }\n          } else if (checkWord() === 2) {\n            alert(\"End Game!\");\n          }\n\n          this.setState({\n            numTries: this.numTries + 1\n          });\n        }\n\n        this.setState({\n          numTries: this.numTries + 1\n        });\n        return;\n      }\n\n      if (getActiveCol() >= WORDLEN) {\n        return;\n      }\n\n      displayChars[index] = buttonName;\n      displayCols[index] = \"grey\";\n      nextCol();\n      this.setState({\n        numTries: this.numTries + 1\n      });\n    };\n\n    this.numTries = 0;\n    initialiseState();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"component-app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(DisplayRow, {\n      numTries: this.numTries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(ButtonPanel, {\n      clickHandler: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/fz/Development/calculator/src/component/App.js"],"names":["React","DisplayRow","ButtonPanel","getActiveRow","getActiveCol","decrementActiveCol","displayChars","displayCols","initialiseState","nextCol","nextRow","checkWord","WORDLEN","NUMTRIES","App","Component","constructor","state","numTries","handleClick","buttonName","index","alert","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,kBAArC,EAAyDC,YAAzD,EAAuEC,WAAvE,EAAoFC,eAApF,EAAqGC,OAArG,EAA8GC,OAA9G,EAAuHC,SAAvH,EAAkIC,OAAlI,EAA2IC,QAA3I,QAA2J,WAA3J;AACA,OAAO,WAAP,C,CACA;;AAEA,eAAe,MAAMC,GAAN,SAAkBd,KAAK,CAACe,SAAxB,CAAkC;AAK/CC,EAAAA,WAAW,GAAG;AACZ;AADY,SAJdC,KAIc,GAJN;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAIM;;AAAA,SAOdC,WAPc,GAOAC,UAAU,IAAI;AAC1B,UAAIC,KAAK,GAAGlB,YAAY,KAAGS,OAAf,GAAyBR,YAAY,EAAjD;;AACA,UAAIgB,UAAU,KAAK,IAAnB,EAAyB;AACvB,YAAIhB,YAAY,KAAK,CAArB,EAAwB;AACtBE,UAAAA,YAAY,CAACe,KAAD,CAAZ,GAAsB,EAAtB;AACAhB,UAAAA,kBAAkB;AACnB;;AACD;AACD;;AACD,UAAIe,UAAU,KAAK,OAAnB,EAA4B;AAC1B,YAAIhB,YAAY,OAAOQ,OAAvB,EAAgC;AAC9B,cAAID,SAAS,OAAO,CAApB,EAAuB;AACrBW,YAAAA,KAAK,CAAC,cAAD,CAAL;AACA;AACD,WAHD,MAIK,IAAIX,SAAS,OAAO,CAApB,EAAuB;AAC1BD,YAAAA,OAAO;;AACP,gBAAIP,YAAY,OAAOU,QAAvB,EAAiC;AAC/BS,cAAAA,KAAK,CAAC,WAAD,CAAL;AACD;AACF,WALI,MAMA,IAAIX,SAAS,OAAO,CAApB,EAAuB;AAC1BW,YAAAA,KAAK,CAAC,WAAD,CAAL;AACD;;AACD,eAAKC,QAAL,CAAc;AACZL,YAAAA,QAAQ,EAAE,KAAKA,QAAL,GAAgB;AADd,WAAd;AAGD;;AACD,aAAKK,QAAL,CAAc;AACZL,UAAAA,QAAQ,EAAE,KAAKA,QAAL,GAAgB;AADd,SAAd;AAGA;AACD;;AACD,UAAId,YAAY,MAAMQ,OAAtB,EAA+B;AAC7B;AACD;;AACDN,MAAAA,YAAY,CAACe,KAAD,CAAZ,GAAsBD,UAAtB;AACAb,MAAAA,WAAW,CAACc,KAAD,CAAX,GAAqB,MAArB;AACAZ,MAAAA,OAAO;AAEP,WAAKc,QAAL,CAAc;AACZL,QAAAA,QAAQ,EAAE,KAAKA,QAAL,GAAgB;AADd,OAAd;AAGD,KAlDa;;AAEZ,SAAKA,QAAL,GAAgB,CAAhB;AACAV,IAAAA,eAAe;AAChB;;AAgDDgB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAI,KAAKN,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,WAAD;AAAa,MAAA,YAAY,EAAE,KAAKC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAhE8C","sourcesContent":["import React from \"react\";\nimport DisplayRow from \"./DisplayRow\";\nimport ButtonPanel from \"./ButtonPanel\";\nimport { getActiveRow, getActiveCol, decrementActiveCol, displayChars, displayCols, initialiseState, nextCol, nextRow, checkWord, WORDLEN, NUMTRIES } from \"./AppVars\";\nimport \"./App.css\";\n//import { check } from \"prettier\";\n\nexport default class App extends React.Component {\n  state = {\n    numTries: 0,\n  };\n\n  constructor() {\n    super();\n    this.numTries = 0;\n    initialiseState();\n  };\n\n \n  handleClick = buttonName => {\n    var index = getActiveRow()*WORDLEN + getActiveCol();\n    if (buttonName === \"<=\") {\n      if (getActiveCol() > 0) {\n        displayChars[index] = \"\";\n        decrementActiveCol();\n      }\n      return;\n    }\n    if (buttonName === \"Enter\") {\n      if (getActiveCol() === WORDLEN) {\n        if (checkWord() === 0) {\n          alert(\"Invalid word\")\n          return;\n        }\n        else if (checkWord() === 1) {\n          nextRow();\n          if (getActiveRow() === NUMTRIES) {\n            alert(\"End Game!\");\n          }\n        }\n        else if (checkWord() === 2) {\n          alert(\"End Game!\");\n        }\n        this.setState({\n          numTries: this.numTries + 1,\n        }) \n      }\n      this.setState({\n        numTries: this.numTries + 1,\n      })\n      return;\n    }\n    if (getActiveCol() >= WORDLEN) {\n      return;\n    }\n    displayChars[index] = buttonName;\n    displayCols[index] = \"grey\";\n    nextCol();\n\n    this.setState({\n      numTries: this.numTries + 1,\n    })\n  };\n\n  render() {\n    return (\n      <div className=\"component-app\">\n        <DisplayRow numTries = {this.numTries} />\n        <ButtonPanel clickHandler={this.handleClick} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}