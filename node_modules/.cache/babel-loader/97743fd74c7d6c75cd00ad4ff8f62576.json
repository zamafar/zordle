{"ast":null,"code":"var _jsxFileName = \"/Users/fz/Development/calculator/src/component/Button.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Button.css\";\nimport { getKeyBGC } from \"./AppVars\";\nexport default class Button extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      this.props.clickHandler(this.props.name);\n\n      if (this.state.bgColor !== getKeyBGC(this.props.name)) {\n        this.setState({\n          bgColor: getKeyBGC(this.props.name),\n          grey: getKeyBGC(this.props.name) === \"grey\",\n          white: getKeyBGC(this.props.name) === \"white\"\n        });\n      }\n    };\n\n    this.state = {\n      bgColor: \"white\",\n      grey: false,\n      white: true\n    };\n  }\n\n  render() {\n    const className = [\"component-button\", this.props.grey ? \"grey\" : \"\", this.props.wide ? \"wide\" : \"\"];\n    return React.createElement(\"div\", {\n      className: className.join(\" \").trim(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.props.name));\n  }\n\n}\nButton.propTypes = {\n  name: PropTypes.string,\n  grey: PropTypes.bool,\n  wide: PropTypes.bool,\n  clickHandler: PropTypes.func,\n  bgc: PropTypes.string\n};","map":{"version":3,"sources":["/Users/fz/Development/calculator/src/component/Button.js"],"names":["React","PropTypes","getKeyBGC","Button","Component","constructor","props","handleClick","clickHandler","name","state","bgColor","setState","grey","white","render","className","wide","join","trim","propTypes","string","bool","func","bgc"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,cAAP;AACA,SAASC,SAAT,QAA0B,WAA1B;AAEA,eAAe,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AAQlDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,WATmB,GASL,MAAM;AAClB,WAAKD,KAAL,CAAWE,YAAX,CAAwB,KAAKF,KAAL,CAAWG,IAAnC;;AACA,UAAI,KAAKC,KAAL,CAAWC,OAAX,KAAuBT,SAAS,CAAC,KAAKI,KAAL,CAAWG,IAAZ,CAApC,EAAuD;AACrD,aAAKG,QAAL,CAAc;AACZD,UAAAA,OAAO,EAAET,SAAS,CAAC,KAAKI,KAAL,CAAWG,IAAZ,CADN;AAEZI,UAAAA,IAAI,EAAEX,SAAS,CAAC,KAAKI,KAAL,CAAWG,IAAZ,CAAT,KAA+B,MAFzB;AAGZK,UAAAA,KAAK,EAAEZ,SAAS,CAAC,KAAKI,KAAL,CAAWG,IAAZ,CAAT,KAA+B;AAH1B,SAAd;AAKD;AACF,KAlBkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,OADE;AAEXE,MAAAA,IAAI,EAAE,KAFK;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAaDC,EAAAA,MAAM,GAAG;AACP,UAAMC,SAAS,GAAG,CAChB,kBADgB,EAEhB,KAAKV,KAAL,CAAWO,IAAX,GAAkB,MAAlB,GAA2B,EAFX,EAGhB,KAAKP,KAAL,CAAWW,IAAX,GAAkB,MAAlB,GAA2B,EAHX,CAAlB;AAMA,WACE;AAAK,MAAA,SAAS,EAAED,SAAS,CAACE,IAAV,CAAe,GAAf,EAAoBC,IAApB,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AACG,MAAA,OAAO,EAAE,KAAKZ,WADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAC+B,KAAKD,KAAL,CAAWG,IAD1C,CADD,CADF;AAOD;;AA1CiD;AAA/BN,M,CACZiB,S,GAAY;AACjBX,EAAAA,IAAI,EAAER,SAAS,CAACoB,MADC;AAEjBR,EAAAA,IAAI,EAAEZ,SAAS,CAACqB,IAFC;AAGjBL,EAAAA,IAAI,EAAEhB,SAAS,CAACqB,IAHC;AAIjBd,EAAAA,YAAY,EAAEP,SAAS,CAACsB,IAJP;AAKjBC,EAAAA,GAAG,EAAEvB,SAAS,CAACoB;AALE,C","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Button.css\";\nimport { getKeyBGC } from \"./AppVars\";\n\nexport default class Button extends React.Component {\n  static propTypes = {\n    name: PropTypes.string,\n    grey: PropTypes.bool,\n    wide: PropTypes.bool,\n    clickHandler: PropTypes.func,\n    bgc: PropTypes.string,\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      bgColor: \"white\",\n      grey: false,\n      white: true,\n    }\n  }\n\n  handleClick = () => {\n    this.props.clickHandler(this.props.name);\n    if (this.state.bgColor !== getKeyBGC(this.props.name)) {\n      this.setState({\n        bgColor: getKeyBGC(this.props.name),\n        grey: getKeyBGC(this.props.name) === \"grey\",\n        white: getKeyBGC(this.props.name) === \"white\",\n      }); \n    }\n  };\n\n  render() {\n    const className = [\n      \"component-button\",\n      this.props.grey ? \"grey\" : \"\",\n      this.props.wide ? \"wide\" : \"\",\n    ];\n\n    return (\n      <div className={className.join(\" \").trim()}>\n       <button \n          onClick={this.handleClick}>{this.props.name}\n        </button>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}